diff --git a/Lib/std/std_container.i b/Lib/std/std_container.i
index 73d0c6a..83c5830 100644
--- a/Lib/std/std_container.i
+++ b/Lib/std/std_container.i
@@ -46,8 +46,14 @@
   void resize(size_type new_size);
   
   #ifdef SWIG_EXPORT_ITERATOR_METHODS
-  iterator erase(iterator pos);
-  iterator erase(iterator first, iterator last);
+// Backport C++11 support
+// Issue ID: https://github.com/swig/swig/issues/73
+// Commit: https://github.com/swig/swig/commit/92128eef445f75f674894e3f5d4e1fc2a1818957
+%extend {
+  // %extend wrapper used for differing definitions of these methods introduced in C++11
+  iterator erase(iterator pos) { return $self->erase(pos); }
+  iterator erase(iterator first, iterator last) { return $self->erase(first, last); }
+}
   #endif
   
 %enddef
@@ -68,8 +74,14 @@
   void resize(size_type new_size, const value_type& x);
   
   #ifdef SWIG_EXPORT_ITERATOR_METHODS
-  iterator insert(iterator pos, const value_type& x);
-  void insert(iterator pos, size_type n, const value_type& x);
+// Backport C++11 support
+// Issue ID: https://github.com/swig/swig/issues/73
+// Commit: https://github.com/swig/swig/commit/92128eef445f75f674894e3f5d4e1fc2a1818957
+%extend {
+  // %extend wrapper used for differing definitions of these methods introduced in C++11
+  iterator insert(iterator pos, const value_type& x) { return $self->insert(pos, x); }
+  void insert(iterator pos, size_type n, const value_type& x) { $self->insert(pos, n, x); }
+}
   #endif
   
 %enddef
@@ -89,8 +101,14 @@
   void resize(size_type new_size, value_type x);
   
   #ifdef SWIG_EXPORT_ITERATOR_METHODS
-  iterator insert(iterator pos, value_type x);
-  void insert(iterator pos, size_type n, value_type x);
+// Backport C++11 support
+// Issue ID: https://github.com/swig/swig/issues/73
+// Commit: https://github.com/swig/swig/commit/92128eef445f75f674894e3f5d4e1fc2a1818957
+%extend {
+  // %extend wrapper used for differing definitions of these methods introduced in C++11
+  iterator insert(iterator pos, value_type x) { return $self->insert(pos, x); }
+  void insert(iterator pos, size_type n, value_type x) { $self->insert(pos, n, x); }
+}
   #endif
   
 %enddef
diff --git a/Lib/std/std_map.i b/Lib/std/std_map.i
index 0520841..5d1e9ce 100644
--- a/Lib/std/std_map.i
+++ b/Lib/std/std_map.i
@@ -13,8 +13,14 @@
 
 #ifdef SWIG_EXPORT_ITERATOR_METHODS
 //  iterator insert(iterator position, const value_type& x);
-  void erase(iterator position);
-  void erase(iterator first, iterator last);
+// Backport C++11 support
+// Issue ID: https://github.com/swig/swig/issues/73
+// Commit: https://github.com/swig/swig/commit/92128eef445f75f674894e3f5d4e1fc2a1818957
+%extend {
+  // %extend wrapper used for differing definitions of these methods introduced in C++11
+  void erase(iterator position) { $self->erase(position); }
+  void erase(iterator first, iterator last) { $self->erase(first, last); }
+}
 
   iterator find(const key_type& x);
   iterator lower_bound(const key_type& x);
diff --git a/Lib/std/std_set.i b/Lib/std/std_set.i
index 16f0f14..903e4ce 100644
--- a/Lib/std/std_set.i
+++ b/Lib/std/std_set.i
@@ -29,8 +29,14 @@
   reverse_iterator rbegin();
   reverse_iterator rend();
 
-  void erase(iterator pos);
-  void erase(iterator first, iterator last);
+// Backport C++11 support
+// Issue ID: https://github.com/swig/swig/issues/73
+// Commit: https://github.com/swig/swig/commit/92128eef445f75f674894e3f5d4e1fc2a1818957
+%extend {
+  // %extend wrapper used for differing definitions of these methods introduced in C++11
+  void erase(iterator pos) { $self->erase(pos); }
+  void erase(iterator first, iterator last) { $self->erase(first, last); }
+}
 
   iterator find(const key_type& x);
   iterator lower_bound(const key_type& x);
