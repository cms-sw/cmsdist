--- a/build/cmake/CondorConfigure.cmake
+++ b/build/cmake/CondorConfigure.cmake
@@ -813,7 +813,7 @@
 #####################################
 # RPATH option
 if (LINUX AND NOT PROPER)
-	option(CMAKE_SKIP_RPATH "Skip RPATH on executables" OFF)
+	option(CMAKE_SKIP_RPATH "Skip RPATH on executables" ON)
 else()
 	option(CMAKE_SKIP_RPATH "Skip RPATH on executables" ON)
 endif()
@@ -1328,7 +1328,7 @@
 	endif()
 
 	if (LINUX)
-		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--warn-once -Wl,--warn-common")
+		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--warn-common")
 		if ( "${LINUX_NAME}" STREQUAL "Ubuntu" )
 			set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-as-needed")
 		endif()
@@ -1339,9 +1339,9 @@
 		endif()
 	endif(LINUX)
 
-	if (LINUX)
-		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--enable-new-dtags")
-	endif(LINUX)
+	#if (LINUX)
+		#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--enable-new-dtags")
+	#endif(LINUX)
 
 	if (AIX)
 		# specifically ask for the C++ libraries to be statically linked
--- a/build/cmake/CondorPackageConfig.cmake
+++ b/build/cmake/CondorPackageConfig.cmake
@@ -168,14 +168,14 @@
 		set( CONDOR_RPATH "$ORIGIN/../lib:/lib:/usr/lib:$ORIGIN/../lib/condor:/usr/lib/condor" )
 		set( EXTERNALS_RPATH "$ORIGIN/../lib:/lib:/usr/lib:$ORIGIN/../lib/condor:/usr/lib/condor" )
 		set( PYTHON_RPATH "$ORIGIN/../../:/lib:/usr/lib:$ORIGIN/../../condor" )
-	else()
-		set( CONDOR_RPATH "$ORIGIN/../lib:/lib64:/usr/lib64:$ORIGIN/../lib/condor:/usr/lib64/condor" )
-		set( EXTERNALS_RPATH "$ORIGIN/../lib:/lib64:/usr/lib64:$ORIGIN/../lib/condor:/usr/lib64/condor" )
-        if ( ${SYSTEM_NAME} MATCHES "rhel7" OR ${SYSTEM_NAME} MATCHES "centos7" OR ${SYSTEM_NAME} MATCHES "sl7")
-            set( PYTHON_RPATH "$ORIGIN/../../:/usr/lib64/boost169:/lib64:/usr/lib64:$ORIGIN/../../condor" )
-        else()
-            set( PYTHON_RPATH "$ORIGIN/../../:/lib64:/usr/lib64:$ORIGIN/../../condor" )
-        endif()
+	#else()
+		#set( CONDOR_RPATH "$ORIGIN/../lib:/lib64:/usr/lib64:$ORIGIN/../lib/condor:/usr/lib64/condor" )
+		#set( EXTERNALS_RPATH "$ORIGIN/../lib:/lib64:/usr/lib64:$ORIGIN/../lib/condor:/usr/lib64/condor" )
+        #if ( ${SYSTEM_NAME} MATCHES "rhel7" OR ${SYSTEM_NAME} MATCHES "centos7" OR ${SYSTEM_NAME} MATCHES "sl7")
+            #set( PYTHON_RPATH "$ORIGIN/../../:/usr/lib64/boost169:/lib64:/usr/lib64:$ORIGIN/../../condor" )
+        #else()
+            #set( PYTHON_RPATH "$ORIGIN/../../:/lib64:/usr/lib64:$ORIGIN/../../condor" )
+        #endif()
 	endif()
 elseif( ${OS_NAME} STREQUAL "DARWIN" )
 	set( EXTERNALS_LIB "${C_LIB}/condor" )
--- a/src/nordugrid_gahp/CMakeLists.txt
+++ b/src/nordugrid_gahp/CMakeLists.txt
@@ -16,12 +16,7 @@
  # 
  ############################################################### 
 
-if (HAVE_EXT_GLOBUS)
-
-	if (NOT HAVE_LDAP_H OR NOT LDAP_FOUND)
-		message(FATAL_ERROR "Can't find ldap.h, needed to build nordugrid_gahp")
-	endif()
-
+if (HAVE_EXT_GLOBUS AND HAVE_LDAP_H AND LDAP_FOUND )
 	add_definitions(-DLDAP_DEPRECATED)
 
 	condor_glob( HeaderFiles SourceFiles "" )
@@ -52,6 +47,6 @@ if (HAVE_EXT_GLOBUS)
 
 else()
 
-	message( STATUS "NOTE: *nordugrid* targets will not be built HAVE_EXT_GLOBUS=${HAVE_EXT_GLOBUS}" )
+    message( STATUS "NOTE: *nordugrid* targets will not be built HAVE_EXT_GLOBUS=${HAVE_EXT_GLOBUS} HAVE_LDAP_H=${HAVE_LDAP_H}" )
 
 endif ()
--- a/externals/bundles/boost/1.49.0/CMakeLists.txt
+++ b/externals/bundles/boost/1.49.0/CMakeLists.txt
@@ -73,7 +73,7 @@ endif( NOT WINDOWS )
 
 
 # we only use our version of boost if the system is not good enough
-if (NOT PROPER) # AND (NOT Boost_FOUND OR SYSTEM_NOT_UP_TO_SNUFF) )
+if ( (NOT PROPER) AND (NOT Boost_FOUND OR SYSTEM_NOT_UP_TO_SNUFF) )
 
 	if (WINDOWS)
 	  # need to expand the configure and
