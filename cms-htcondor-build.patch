--- a/src/nordugrid_gahp/CMakeLists.txt
+++ b/src/nordugrid_gahp/CMakeLists.txt
@@ -16,12 +16,7 @@
  # 
  ############################################################### 
 
-if (HAVE_EXT_GLOBUS)
-
-	if (NOT HAVE_LDAP_H OR NOT LDAP_FOUND)
-		message(FATAL_ERROR "Can't find ldap.h, needed to build nordugrid_gahp")
-	endif()
-
+if (HAVE_EXT_GLOBUS AND HAVE_LDAP_H AND LDAP_FOUND )
 	add_definitions(-DLDAP_DEPRECATED)

	set(SourceFiles
@@ -52,6 +47,6 @@ if (HAVE_EXT_GLOBUS)
 
 else()
 
-	message( STATUS "NOTE: *nordugrid* targets will not be built HAVE_EXT_GLOBUS=${HAVE_EXT_GLOBUS}" )
+    message( STATUS "NOTE: *nordugrid* targets will not be built HAVE_EXT_GLOBUS=${HAVE_EXT_GLOBUS} HAVE_LDAP_H=${HAVE_LDAP_H}" )
 
 endif ()
--- a/externals/bundles/boost/1.49.0/CMakeLists.txt
+++ b/externals/bundles/boost/1.49.0/CMakeLists.txt
@@ -73,7 +73,7 @@ endif( NOT WINDOWS )
 
 
 # we only use our version of boost if the system is not good enough
-if (NOT PROPER) # AND (NOT Boost_FOUND OR SYSTEM_NOT_UP_TO_SNUFF) )
+if ( (NOT PROPER) AND (NOT Boost_FOUND OR SYSTEM_NOT_UP_TO_SNUFF) )
 
 	if (WINDOWS)
 	  # need to expand the configure and
--- a/externals/bundles/boost/1.66.0/CMakeLists.txt	
+++ b/externals/bundles/boost/1.66.0/CMakeLists.txt
@@ -61,26 +61,26 @@
     # set (Boost_DEBUG TRUE)

     message (STATUS "SYSTEM_NAME: ${SYSTEM_NAME}" )
-    if (DEFINED SYSTEM_NAME)
-        if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "64")
-            if ( ${SYSTEM_NAME} MATCHES "rhel7" OR ${SYSTEM_NAME} MATCHES "centos7" OR ${SYSTEM_NAME} MATCHES "sl7" OR ${SYSTEM_NAME} MATCHES "amzn2")
-                message (STATUS "Using system boost169 for 64-bit EL7" )
-                # If you look for python on cmake 2.8.12.2 it fails.
-                # Looking for thread finds boost for python for me.
-                set (BOOST_COMPONENTS thread)
-                set(BOOST_INCLUDEDIR "/usr/include/boost169")
-                set(BOOST_LIBRARYDIR "/usr/lib64/boost169")
-                set(Boost_INCLUDE_DIR "/usr/include/boost169")
-                set(Boost_LIBRARY_DIR "/usr/lib64/boost169")
-                set(USE_SYSTEM_BOOST True)
-            endif()
-        endif()
-        if (${SYSTEM_NAME} MATCHES "Debian" OR ${SYSTEM_NAME} MATCHES "Ubuntu" OR ${SYSTEM_NAME} MATCHES "rhel8" OR ${SYSTEM_NAME} MATCHES "centos8" OR ${SYSTEM_NAME} MATCHES "fc")
-            set(USE_SYSTEM_BOOST True)
-            # BOOST_COMPONENTS breaks CMake boost detection on Ubuntu 20.04, Debian bullseye
-            set(BOOST_COMPONENTS "" )
-        endif()
-    endif()
+    #if (DEFINED SYSTEM_NAME)
+    #    if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "64")
+    #        if ( ${SYSTEM_NAME} MATCHES "rhel7" OR ${SYSTEM_NAME} MATCHES "centos7" OR ${SYSTEM_NAME} MATCHES "sl7" OR ${SYSTEM_NAME} MATCHES "amzn2")
+    #            message (STATUS "Using system boost169 for 64-bit EL7" )
+    #            # If you look for python on cmake 2.8.12.2 it fails.
+    #            # Looking for thread finds boost for python for me.
+    #            set (BOOST_COMPONENTS thread)
+    #            set(BOOST_INCLUDEDIR "/usr/include/boost169")
+    #            set(BOOST_LIBRARYDIR "/usr/lib64/boost169")
+    #            set(Boost_INCLUDE_DIR "/usr/include/boost169")
+    #            set(Boost_LIBRARY_DIR "/usr/lib64/boost169")
+    #            set(USE_SYSTEM_BOOST True)
+    #        endif()
+    #    endif()
+    #    if (${SYSTEM_NAME} MATCHES "Debian" OR ${SYSTEM_NAME} MATCHES "Ubuntu" OR ${SYSTEM_NAME} MATCHES "rhel8" OR ${SYSTEM_NAME} MATCHES "centos8" OR ${SYSTEM_NAME} MATCHES "fc")
+    #        set(USE_SYSTEM_BOOST True)
+    #        # BOOST_COMPONENTS breaks CMake boost detection on Ubuntu 20.04, Debian bullseye
+    #        set(BOOST_COMPONENTS "" )
+    #    endif()
+    #endif()

 	message (STATUS "Boost components: ${BOOST_COMPONENTS}" )
 	find_package( Boost 1.33.1 COMPONENTS ${BOOST_COMPONENTS} )
