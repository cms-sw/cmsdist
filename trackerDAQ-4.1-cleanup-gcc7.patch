diff --git a/FecSoftwareV3_0/Version.txt b/FecSoftwareV3_0/Version.txt
index 7efde62..68e1133 100755
--- a/FecSoftwareV3_0/Version.txt
+++ b/FecSoftwareV3_0/Version.txt
@@ -100,15 +100,15 @@ FecSoftware: 4.0
 	  virtual ~FecAccessManager ( ) ;
 	  virtual void removeDevices ( ) ;
 	  virtual void removeDevices ( enumDeviceType type ) ;
-	  virtual void setAccess ( deviceAccess *access ) throw (FecExceptionHandler) ;
+	  virtual void setAccess ( deviceAccess *access ) noexcept(false) ;
 	  virtual deviceAccess *getAccess ( enumDeviceType deviceType, keyType index ) ;
-	  virtual unsigned int downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) throw (FecExceptionHandler) ;
-	  virtual unsigned int downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) throw (FecExceptionHandler) ;
+	  virtual unsigned int downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) noexcept(false) ;
+	  virtual unsigned int downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) noexcept(false) ;
 	  virtual deviceVector *uploadValues ( std::list<FecExceptionHandler *> &errorList, bool comparison = false, bool dcuUpload = true, bool dohSet = true ) ;
 	  virtual deviceVector *uploadValuesMultipleFrames ( std::list<FecExceptionHandler *> &errorList, bool comparison = false, bool dcuUpload = true, bool dohSet = true ) ;
 	XMLFecDevice:
-	  virtual void setDevices ( deviceVector dVector, std::string outputFileName ) throw (FecExceptionHandler);
-	  virtual void setDevices ( std::string outputFileName ) throw (FecExceptionHandler);
+	  virtual void setDevices ( deviceVector dVector, std::string outputFileName ) noexcept(false);
+	  virtual void setDevices ( std::string outputFileName ) noexcept(false);
 	FecFactory:
 	  virtual ~FecFactory ( ) ;
 	FecDeviceFactory
diff --git a/FecSoftwareV3_0/generic/Makefile b/FecSoftwareV3_0/generic/Makefile
index 45c0fc9..9a7d673 100755
--- a/FecSoftwareV3_0/generic/Makefile
+++ b/FecSoftwareV3_0/generic/Makefile
@@ -115,7 +115,7 @@ UserCCFlags = ${FECSOFT_C++FLAGS} \
 	-DBT1003 \
 	-DLINUX \
 	-DCMS_TK_64BITS \
-	-fPIC -std=c++0x -Wno-deprecated -Werror 
+	-fPIC -Wno-deprecated -Werror 
 #	-DDATABASEDEBUG
 #	-DDATABASESTAT
 #	-DDATABASEDEBUG
diff --git a/FecSoftwareV3_0/generic/include/CCSTrigger.hh b/FecSoftwareV3_0/generic/include/CCSTrigger.hh
index f6f2a6b..7fb5b03 100755
--- a/FecSoftwareV3_0/generic/include/CCSTrigger.hh
+++ b/FecSoftwareV3_0/generic/include/CCSTrigger.hh
@@ -30,7 +30,7 @@ private:
 public: 
   /** \brief Default constructor
    */
-  CCSTrigger(HAL::VME64xDevice * trgBoard, std::string subSystem, tscType8 fecSlot = 0xFF )  throw ( FecExceptionHandler ) ;
+  CCSTrigger(HAL::VME64xDevice * trgBoard, std::string subSystem, tscType8 fecSlot = 0xFF )  noexcept(false) ;
 
   /** \brief desctructor
    */
@@ -42,70 +42,70 @@ public:
 
   /** \brief set the config 0
    */
-  void setCCSTriggerConfig0 ( uint32_t value ) throw ( FecExceptionHandler ) ;
+  void setCCSTriggerConfig0 ( uint32_t value ) noexcept(false) ;
 
   /** \brief get the config 0
    */
-  uint32_t getCCSTriggerConfig0 ( ) throw ( FecExceptionHandler ) ;
+  uint32_t getCCSTriggerConfig0 ( ) noexcept(false) ;
 
   /** \brief get the config 0
    */
-  uint32_t getCCSTriggerStatus0 ( ) throw ( FecExceptionHandler ) ;
+  uint32_t getCCSTriggerStatus0 ( ) noexcept(false) ;
 
   /** \brief Set the SSID into the CCSTrigger object
    */
-  void setSSID ( std::string subSystem, uint32_t originalValue ) throw ( FecExceptionHandler ) ;
+  void setSSID ( std::string subSystem, uint32_t originalValue ) noexcept(false) ;
 
   /** \brief Set the SSID into the CCSTrigger object
    */
-  void setSSID ( std::string subSystem ) throw ( FecExceptionHandler ) ;
+  void setSSID ( std::string subSystem ) noexcept(false) ;
 
   /** \brief retreive the SSID from the FEC board
    */
-  std::string getSSID ( ) throw ( FecExceptionHandler ) ;
+  std::string getSSID ( ) noexcept(false) ;
 
   /** \brief reset the TTCRx
    */
-  void setResetTTCRx ( ) throw ( FecExceptionHandler ) ;
+  void setResetTTCRx ( ) noexcept(false) ;
 
   /** \brief reset the QPLL
    */
-  void setResetQPLL ( ) throw ( FecExceptionHandler ) ;
+  void setResetQPLL ( ) noexcept(false) ;
 
   /** \brief set the QPLL auto restart
    */
-  void setQPLLAutoRestart ( ) throw ( FecExceptionHandler ) ;
+  void setQPLLAutoRestart ( ) noexcept(false) ;
 
   /** QPLL locked
    */
-  bool getStatusQPLLLocked ( ) throw (FecExceptionHandler) ;
+  bool getStatusQPLLLocked ( ) noexcept(false) ;
 
   /** TTCRx Ready
    */
-  bool getStatusTTCRxReady ( ) throw (FecExceptionHandler)  ;
+  bool getStatusTTCRxReady ( ) noexcept(false)  ;
 
   /** Error on QPLL
    */
-  bool getStatusQPLLError ( ) throw ( FecExceptionHandler ) ;
+  bool getStatusQPLLError ( ) noexcept(false) ;
 
-  void clear() throw ( FecExceptionHandler ) ;
+  void clear() noexcept(false) ;
 
-  bool SetFrequency(int frequency)  throw ( FecExceptionHandler ) ;
-  int GetFrequency()  throw ( FecExceptionHandler ) ;
+  bool SetFrequency(int frequency)  noexcept(false) ;
+  int GetFrequency()  noexcept(false) ;
 
-  uint32_t getID()  throw ( FecExceptionHandler ) ;
+  uint32_t getID()  noexcept(false) ;
 
-  bool SetInput(std::string block, std::string input) throw ( FecExceptionHandler ) ;
-  bool AddInput(std::string block, std::string input) throw ( FecExceptionHandler ) ;
+  bool SetInput(std::string block, std::string input) noexcept(false) ;
+  bool AddInput(std::string block, std::string input) noexcept(false) ;
 
-  bool SetDelay(std::string block, int delay) throw ( FecExceptionHandler ) ;
+  bool SetDelay(std::string block, int delay) noexcept(false) ;
 
-  bool SetCounter(std::string input, int counter) throw ( FecExceptionHandler ) ;
-  int GetCounter(std::string input) throw ( FecExceptionHandler ) ;
+  bool SetCounter(std::string input, int counter) noexcept(false) ;
+  int GetCounter(std::string input) noexcept(false) ;
 
-  bool SetTTCCode(std::string block, int code) throw ( FecExceptionHandler ) ;
+  bool SetTTCCode(std::string block, int code) noexcept(false) ;
 
-  bool SendTrigger(std::string Block) throw ( FecExceptionHandler ) ;
+  bool SendTrigger(std::string Block) noexcept(false) ;
 
 
   // wb added: 
diff --git a/FecSoftwareV3_0/generic/include/CCUDescription.h b/FecSoftwareV3_0/generic/include/CCUDescription.h
index aa40d53..8dbaae1 100755
--- a/FecSoftwareV3_0/generic/include/CCUDescription.h
+++ b/FecSoftwareV3_0/generic/include/CCUDescription.h
@@ -162,7 +162,7 @@ class CCUDescription {
    * <li>TSCFEC_FECPARAMETERNOTMANAGED: wrong CCU alarm
    * </ul>
    */
-  bool isCcuAlarmEnable ( tscType16 ccuAlarm ) throw (FecExceptionHandler) ;
+  bool isCcuAlarmEnable ( tscType16 ccuAlarm ) noexcept(false) ;
 
   /** \brief Store that a channel is enable or disable
    * \param channel - CCU channel number
@@ -282,14 +282,14 @@ class CCUDescription {
    *          and Dummy CCU output B not connected
    */
 
-  static void setCcuTrackerUsage ( std::list<CCUDescription *> &listCcu ) throw (FecExceptionHandler) ;
+  static void setCcuTrackerUsage ( std::list<CCUDescription *> &listCcu ) noexcept(false) ;
 
   /** \brief Set the parameter usage in the CCUDescription
    * \param list of CCUDescription
    * \warning this method include the dummy CCU on ring A
    */
 
-  static void setCcuUsage ( std::list<CCUDescription *> &listCcu ) throw (FecExceptionHandler) ;
+  static void setCcuUsage ( std::list<CCUDescription *> &listCcu ) noexcept(false) ;
 
 #endif
 
diff --git a/FecSoftwareV3_0/generic/include/CommissioningAnalysisFactory.h b/FecSoftwareV3_0/generic/include/CommissioningAnalysisFactory.h
index cc2d694..da98368 100755
--- a/FecSoftwareV3_0/generic/include/CommissioningAnalysisFactory.h
+++ b/FecSoftwareV3_0/generic/include/CommissioningAnalysisFactory.h
@@ -99,7 +99,7 @@ public:
   * @brief Buid a Commissioning Analysis factory for database
   */
   CommissioningAnalysisFactory( std::string login, std::string password, std::string path, bool threaded = false )
-				throw ( oracle::occi::SQLException );
+				noexcept(false);
 
  /** 
   * @brief Buid a Commissioning Analysis factory
@@ -156,12 +156,12 @@ public:
    * @brief Create the database access
    */
   void setDatabaseAccess( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException );
+    noexcept(false);
 
   /** 
    * @brief Create the database access with the configuration given by the env. variable CONFDB
    */
-  void setDatabaseAccess() throw ( oracle::occi::SQLException );
+  void setDatabaseAccess() noexcept(false);
 
   /** 
    * @brief Set the database access
@@ -196,7 +196,7 @@ public:
   uint32_t uploadAnalysis( uint32_t runNumber, std::string partitionName,
 			  CommissioningAnalysisDescription::commissioningType type,
 			  std::vector<CommissioningAnalysisDescription*> &descriptions,
-			  bool updateCurrentState ) throw ( FecExceptionHandler );
+			  bool updateCurrentState ) noexcept(false);
 
 
 
@@ -206,7 +206,7 @@ public:
    * The uploadedVersion integer is the value returned by @uploadAnalysis method. 
    * @param uploadedVersion - resulting uploaded version (major version related to partition state)
    */
-  void uploadAnalysisState( uint32_t uploadedVersion ) throw ( FecExceptionHandler );
+  void uploadAnalysisState( uint32_t uploadedVersion ) noexcept(false);
 
 
 
@@ -231,7 +231,7 @@ public:
    * @param descriptions - vector of analysis descriptions
    */
   std::vector<CommissioningAnalysisDescription*> getCalibrationData( uint32_t runNumber,
-			  std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+			  std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
 
@@ -255,7 +255,7 @@ public:
    * @return Vector of pair <run/ <versionMajor/versionMinor> > associated to the partition
    */
   HashMapRunVersion getAnalysisHistory( std::string partitionName,
-			  CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+			  CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
 
@@ -271,7 +271,7 @@ public:
    * @return Vector of analysis descriptions
    */
   std::vector<CommissioningAnalysisDescription*> getAnalysisHistory( std::string partitionName,
-			  uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+			  uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
 
@@ -281,7 +281,7 @@ public:
    * @param globalAnalsysVersion - global version from which retreiving versions
    * @return Map of analysis type / analysis versions
    */
-  HashMapAnalysisVersions getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( FecExceptionHandler );
+  HashMapAnalysisVersions getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false);
 
 
 };
diff --git a/FecSoftwareV3_0/generic/include/ConnectionFactory.h b/FecSoftwareV3_0/generic/include/ConnectionFactory.h
index 396adbb..771954b 100755
--- a/FecSoftwareV3_0/generic/include/ConnectionFactory.h
+++ b/FecSoftwareV3_0/generic/include/ConnectionFactory.h
@@ -90,12 +90,12 @@ class ConnectionFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   std::list<unsigned int *> getPartitionVersion ( std::string partitionName ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for all connections from the input
    */
-  void getConnectionDescriptions ( bool fileUsed, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, std::string partitionName, ConnectionVector &outVector, bool allConnections = false, bool forceDbReload = false ) throw (FecExceptionHandler ) ;
+  void getConnectionDescriptions ( bool fileUsed, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, std::string partitionName, ConnectionVector &outVector, bool allConnections = false, bool forceDbReload = false ) noexcept(false) ;
 
  public:
 
@@ -108,7 +108,7 @@ class ConnectionFactory: public DeviceFactoryInterface {
   /** \brief Build a factory for database
    */
   ConnectionFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Buid a FEC factory for FEC database
    */
@@ -153,12 +153,12 @@ class ConnectionFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -173,7 +173,7 @@ class ConnectionFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   void getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskVersionMajor, unsigned int *maskVersionMinor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
 #endif
 
@@ -190,16 +190,16 @@ class ConnectionFactory: public DeviceFactoryInterface {
   /** \brief Retreive the descriptions for all connections from the input for partition name
    */ 
   void getConnectionDescriptions ( std::string partitionName, ConnectionVector &outVector, unsigned int versionMajor = 0, unsigned int versionMinor = 0, unsigned int maskVersionMajor = 0, unsigned int maskVersionMinor = 0, bool allConnections = false, bool forceDbReload = false )
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief return the connection descriptions from file
    */
-  void getConnectionDescriptions ( ConnectionVector &outVector, bool allConnections = false ) throw (FecExceptionHandler ) ;
+  void getConnectionDescriptions ( ConnectionVector &outVector, bool allConnections = false ) noexcept(false) ;
 
   /** \brief Upload the description in the output
    */
   void setConnectionDescriptions ( ConnectionVector connectionVector, std::string partitionName = "nil", unsigned int *versionMajor = NULL, unsigned int *versionMinor = NULL, bool majorVersion = false ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** Delete a ConnectionVector
    * \param connectionVector - vector of connection descriptions
diff --git a/FecSoftwareV3_0/generic/include/DbAccess.h b/FecSoftwareV3_0/generic/include/DbAccess.h
index 1d4727d..b806b16 100755
--- a/FecSoftwareV3_0/generic/include/DbAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbAccess.h
@@ -45,7 +45,7 @@ class DbAccess : public DbCommonAccess {
   // private: 
   //   /** \brief Set the currentStateId as the stateId in the table run */
   //    */ 
-  //   virtual void setRun(unsigned int, std::string, unsigned int, std::string) throw (oracle::occi::SQLException); */
+  //   virtual void setRun(unsigned int, std::string, unsigned int, std::string) noexcept(false); */
 
  public:
   //
@@ -53,95 +53,95 @@ class DbAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbAccess(bool threaded = false) noexcept(false);
 
   /** \brief Creates the access to the database
    */
-  DbAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
   
   /** \brief Closes the connection with the database
    */
-  virtual ~DbAccess ( ) throw (oracle::occi::SQLException);
+  virtual ~DbAccess ( ) noexcept(false);
 
   /** \brief Get version number
    */
-  virtual unsigned int getVersion(std::string sqlQuery) throw (oracle::occi::SQLException);
+  virtual unsigned int getVersion(std::string sqlQuery) noexcept(false);
 
   /** \brief Retrives the partitionName from the partition identifier
    */
-  virtual std::string getPartitionName ( unsigned int partitionId ) throw (oracle::occi::SQLException);
+  virtual std::string getPartitionName ( unsigned int partitionId ) noexcept(false);
 
   /** \brief Retrives the partition id from a partition name
    */
-  virtual unsigned int getPartitionId ( std::string partitionName ) throw (oracle::occi::SQLException);
+  virtual unsigned int getPartitionId ( std::string partitionName ) noexcept(false);
   
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClob (std::string partitionName) throw (oracle::occi::SQLException) = 0 ;
+  virtual oracle::occi::Clob *getXMLClob (std::string partitionName) noexcept(false) = 0 ;
 
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) = 0;
+  virtual oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) = 0;
 
   /** \brief Download a Clob from the database
    */
-  virtual oracle::occi::Clob *getXMLClob (std::string partitionName, std::string hardId) throw (oracle::occi::SQLException) = 0;
+  virtual oracle::occi::Clob *getXMLClob (std::string partitionName, std::string hardId) noexcept(false) = 0;
 
   /** \brief Download a Clob from the database
    */
-  virtual oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) = 0;
+  virtual oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) = 0;
 
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName) noexcept(false);
   
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQueryWithoutMask (std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQueryWithoutMask (std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
   
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id) noexcept(false);
   
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
   
   /** \brief Download a Clob from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id, unsigned int ri) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString, std::string partitionName, std::string id, unsigned int ri) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-  //  virtual void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException, FecExceptionHandler);
+  //  virtual void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-  //  virtual void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+  //  virtual void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false);
 
   /** \brief Upload parameters to the database    
    */
-  virtual void setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException, FecExceptionHandler);
+  virtual void setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
   
   /** \brief Upload parameters to the database    
    */
-  virtual void setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName, int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+  virtual void setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName, int versionUpdate) noexcept(false);
   
   /** \brief Upload parameters to the database    
    */
-  virtual unsigned int setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  virtual unsigned int setXMLClobFromQuery (std::string writeString, std::string buffer, std::string partitionName) noexcept(false);
 
   /** \brief Upload parameters to the database    
    */
-  virtual unsigned int setXMLClobFromQuery (std::string writeString, std::string *buffer, std::string partitionName, bool newPartition) throw (oracle::occi::SQLException, FecExceptionHandler);
+  virtual unsigned int setXMLClobFromQuery (std::string writeString, std::string *buffer, std::string partitionName, bool newPartition) noexcept(false);
   
   /** for SQL tracing
    */
diff --git a/FecSoftwareV3_0/generic/include/DbClient.h b/FecSoftwareV3_0/generic/include/DbClient.h
index 54dabf3..4de88fc 100644
--- a/FecSoftwareV3_0/generic/include/DbClient.h
+++ b/FecSoftwareV3_0/generic/include/DbClient.h
@@ -14,7 +14,7 @@ class DbClient
 /**
   -Create a DbClient with the Share Memory name
 */
-  DbClient(std::string name) throw (std::string);
+  DbClient(std::string name) noexcept(false);
     /**
       Detach the Sahre memory
      */   
@@ -26,7 +26,7 @@ class DbClient
   /**
      Parse the Sahre memory and create and fill local vectors
   */
-  void parse() throw (std::string);
+  void parse() noexcept(false);
     /**
     Return a ptr to the local vector of FEC devices
     */
diff --git a/FecSoftwareV3_0/generic/include/DbCommissioningAnalysisAccess.h b/FecSoftwareV3_0/generic/include/DbCommissioningAnalysisAccess.h
index 8112e23..70d1ac6 100755
--- a/FecSoftwareV3_0/generic/include/DbCommissioningAnalysisAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbCommissioningAnalysisAccess.h
@@ -49,13 +49,13 @@ class DbCommissioningAnalysisAccess : public DbCommonAccess {
 
 
 	/** @brief Default constructor */
-	DbCommissioningAnalysisAccess(bool threaded = false) throw ( oracle::occi::SQLException );
+	DbCommissioningAnalysisAccess(bool threaded = false) noexcept(false);
 
 	/** @brief Constructor with connection parameters */
-	DbCommissioningAnalysisAccess(std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw ( oracle::occi::SQLException );
+	DbCommissioningAnalysisAccess(std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
 	/** @brief Destructor */
-	~DbCommissioningAnalysisAccess() throw ( oracle::occi::SQLException );
+	~DbCommissioningAnalysisAccess() noexcept(false);
 
 
 
@@ -67,36 +67,36 @@ class DbCommissioningAnalysisAccess : public DbCommonAccess {
 	 * @param buffer - XML content
 	 * @param updateCurrentState - Indicates whether current partition state has to be updated or not
 	 */
-	void setXMLClob( std::string buffer, bool updateCurrentState, unsigned int &partitionStateVersionId ) throw ( oracle::occi::SQLException, FecExceptionHandler );
+	void setXMLClob( std::string buffer, bool updateCurrentState, unsigned int &partitionStateVersionId ) noexcept(false);
 
 	/**
 	 * @brief Update the current partition state in order to set the last analysis state get
 	 * @param uploadedVersion - The last global analysis state get
 	 */
-	void setPartitionState( uint32_t uploadedVersion ) throw ( oracle::occi::SQLException );
+	void setPartitionState( uint32_t uploadedVersion ) noexcept(false);
 
 	/**
 	 * Retrieves analysis result descriptions (of the specified type) for a given runNumber and one of its associated partition
 	 */
 	oracle::occi::Clob* getCalibrationData( uint32_t runNumber,
-				std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException );
+				std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 	/**
 	 * @brief Retrieves all analysis result pair of run/version of the specified type and for a given partition
 	 */
-	oracle::occi::Clob* getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException );
+	oracle::occi::Clob* getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 	/**
 	 * @brief Retrieves an analysis result by its partition, type and version
 	 */
-	oracle::occi::Clob* getAnalysisHistory( std::string partitionName, uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException );
+	oracle::occi::Clob* getAnalysisHistory( std::string partitionName, uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 	/**
 	 * @brief Retrieves local analysis versions associated to a global version number
 	 * @param globalAnalsysVersion - global version from which retreiving versions
 	 * @return clob corresponding to the map of analysis type / analysis versions
 	 */
-	oracle::occi::Clob* getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( oracle::occi::SQLException );
+	oracle::occi::Clob* getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false);
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/DbCommonAccess.h b/FecSoftwareV3_0/generic/include/DbCommonAccess.h
index f1d278d..49ccc54 100755
--- a/FecSoftwareV3_0/generic/include/DbCommonAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbCommonAccess.h
@@ -81,7 +81,7 @@ class DbCommonAccess {
 
   /** \brief Creates the access to the database
    */
-  virtual void dbConnect (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  virtual void dbConnect (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
  protected:
 
@@ -112,19 +112,19 @@ class DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbCommonAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbCommonAccess(bool threaded = false) noexcept(false);
 
   /** \brief Creates the access to the database
    */
-  DbCommonAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbCommonAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
   
   /** \brief Closes the connection with the database
    */
-  virtual ~DbCommonAccess ( ) throw (oracle::occi::SQLException);
+  virtual ~DbCommonAccess ( ) noexcept(false);
 
   /** \brief Initialize a Clob 
    */
-  virtual oracle::occi::Clob initializeClob () throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob initializeClob () noexcept(false);
  
  /** \brief Retreive the login name of the connexion
    */
@@ -158,89 +158,89 @@ class DbCommonAccess {
 
   /** \brief Get the current run number
    */
-  virtual unsigned int getCurrentRunNumber() throw (FecExceptionHandler);
+  virtual unsigned int getCurrentRunNumber() noexcept(false);
   
   /** \brief Retreive the version for each partition in the current state
    */
-  std::list<unsigned int*> getDatabaseVersionFromQuery (std::string sqlQuery, std::string partitionName) throw (oracle::occi::SQLException);
+  std::list<unsigned int*> getDatabaseVersionFromQuery (std::string sqlQuery, std::string partitionName) noexcept(false);
 
   /** \brief Retreive all partition names
    */
-  std::list<std::string> getAllPartitionNames ()  throw (oracle::occi::SQLException);
+  std::list<std::string> getAllPartitionNames ()  noexcept(false);
 
   /** \brief Retreive all partition names for a given runnumber
    */
-  std::list<std::string> getAllPartitionNames ( unsigned int ruNumber )  throw (oracle::occi::SQLException);
+  std::list<std::string> getAllPartitionNames ( unsigned int ruNumber )  noexcept(false);
 
   /** \brief Retrieve all partition names from current state
    */
-  std::list<std::string> getAllPartitionNamesFromCurrentState ( )  throw (oracle::occi::SQLException) ;
+  std::list<std::string> getAllPartitionNamesFromCurrentState ( )  noexcept(false) ;
 
   /** \brief Retreive all state history names
    */
-  std::list<std::string> getAllStateHistoryNames ()  throw (oracle::occi::SQLException);
+  std::list<std::string> getAllStateHistoryNames ()  noexcept(false);
 
   /** \brief Retreive the state history ID for the current state from the database
    */
-  unsigned int getCurrentStateHistoryId() throw (oracle::occi::SQLException, FecExceptionHandler);
+  unsigned int getCurrentStateHistoryId() noexcept(false);
 
   /** \brief get a new history state name
    */
-  unsigned int getNewStateHistoryId() throw (oracle::occi::SQLException);
+  unsigned int getNewStateHistoryId() noexcept(false);
 
   /** \brief Get the state ID from the state name
    *  \param stateName The state name
    *  \return The ID of the given state   
    */
-  unsigned int getStateHistoryId(std::string stateHistoryName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  unsigned int getStateHistoryId(std::string stateHistoryName) noexcept(false);
 
   /** \brief Retrive an old state
    */
-  unsigned int setCurrentState(unsigned int stateId) throw (oracle::occi::SQLException);
+  unsigned int setCurrentState(unsigned int stateId) noexcept(false);
 
   /** \brief update the current state based on the state coming from a run number
    */
-  unsigned int copyStateForRunNumber(unsigned int runNumber, bool allPartition) throw (oracle::occi::SQLException) ;
+  unsigned int copyStateForRunNumber(unsigned int runNumber, bool allPartition) noexcept(false) ;
 
   /** \brief Copy the current state and update the given partition with its value in the given state
    */
-  unsigned int setCurrentState(std::string partitionName, unsigned int stateHistoryId) throw (oracle::occi::SQLException);
+  unsigned int setCurrentState(std::string partitionName, unsigned int stateHistoryId) noexcept(false);
 
   /** \brief Change the state of the devices corresponding to the dcuHardId in the given partition 
    **/
-  void setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int state) throw (oracle::occi::SQLException);
+  void setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int state) noexcept(false);
 
   /** \brief Register a run 
    */
-  void setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) throw (oracle::occi::SQLException,FecExceptionHandler);
+  void setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) noexcept(false);
 
   /** \brief Stop a run 
    */
-  void stopRun(std::string partitionName, std::string comment) throw (oracle::occi::SQLException,FecExceptionHandler);
+  void stopRun(std::string partitionName, std::string comment) noexcept(false);
 
   /** \brief Toggle the flag for o2o operation performed
    */
-  void setO2ORun(std::string partitionName, unsigned int runNumber) throw (oracle::occi::SQLException,FecExceptionHandler);
+  void setO2ORun(std::string partitionName, unsigned int runNumber) noexcept(false);
 
   /** \brief Retreive the database version
    */
-  double getDbVersion( ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  double getDbVersion( ) noexcept(false) ;
 
   /** \brief Retreive the size of data in database
    */
-  double getDbSize( ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  double getDbSize( ) noexcept(false) ;
 
   /** \brief Change the comment of the Run
    */
-  void setNewComment(std::string partitionName, unsigned int runNumber, std::string newComment) throw (oracle::occi::SQLException,FecExceptionHandler);
+  void setNewComment(std::string partitionName, unsigned int runNumber, std::string newComment) noexcept(false);
 
   /** \brief Create a new Version of dcu psu map
    */ 
-  void createNewDcuPsuMapVersion(unsigned int *majorVersion, unsigned int *minorVersion) throw (oracle::occi::SQLException,FecExceptionHandler) ;
+  void createNewDcuPsuMapVersion(unsigned int *majorVersion, unsigned int *minorVersion) noexcept(false) ;
 
   /** \brief Create a new Version of dcu infos 
    */
-  void createNewDcuInfoVersion() throw (oracle::occi::SQLException,FecExceptionHandler);
+  void createNewDcuInfoVersion() noexcept(false);
 
   /** \brief retreive the database version
    */
@@ -251,23 +251,23 @@ class DbCommonAccess {
 			  unsigned int dcuInfoVersionMajorId, unsigned int dcuInfoVersionMinorId, 
 			  unsigned int dcuPsuMapVersionMajorId, unsigned int dcuPsuMapVersionMinorId,
 			  unsigned int maskVersionMajorId, unsigned int maskVersionMinorId
-			  ) throw (oracle::occi::SQLException);
+			  ) noexcept(false);
   
   /** \brief Download parameters from the database
    */
-  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString) throw (oracle::occi::SQLException);
+  virtual oracle::occi::Clob *getXMLClobFromQuery (std::string readString) noexcept(false);
 
   /** \brief Refresh the cache of the connection, fec and fed
    */
-  virtual void refreshCacheXMLClob ( int deleteValues = 1, bool withStrips = true ) throw (oracle::occi::SQLException) ;
+  virtual void refreshCacheXMLClob ( int deleteValues = 1, bool withStrips = true ) noexcept(false) ;
 
   /** \brief Delete the cash
    */
-  virtual void deleteCacheXMLClob ( ) throw (oracle::occi::SQLException) ;
+  virtual void deleteCacheXMLClob ( ) noexcept(false) ;
   
   /** \brief Upload a Clob to the database
    */
-  //  virtual void setXMLClob (std::string buffer) throw (oracle::occi::SQLException, FecExceptionHandler);
+  //  virtual void setXMLClob (std::string buffer) noexcept(false);
 
   /** \brief Get the last error message
    */
@@ -275,7 +275,7 @@ class DbCommonAccess {
 
   /** \brief validate the DCU/PSU map and retreive the cooling loop with a flag
    */
-  virtual std::vector<std::pair<std::string, bool> > setTKCCDcuPsuMapValidation(std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  virtual std::vector<std::pair<std::string, bool> > setTKCCDcuPsuMapValidation(std::string partitionName) noexcept(false) ;
 
   /** Brief retreive login, password and path from env. variable CONFDB
    */
@@ -298,7 +298,7 @@ class DbCommonAccess {
 
   /** \brief send a XML buffer to the database to be parsed
    */
-  int setGenericXMLClob(std::string buffer, std::string tableName) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  int setGenericXMLClob(std::string buffer, std::string tableName) noexcept(false) ;
 
   /** \brief return the error message coming from oracle exception and get it if it exists the message set by the user exception in PL/SQL
    */
@@ -306,11 +306,11 @@ class DbCommonAccess {
 
   /** \brief insert an o2o operation
    */
-  void setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int o2oTimeStamp ) throw (FecExceptionHandler) ;
+  void setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int o2oTimeStamp ) noexcept(false) ;
 
   /** \brief crosscheck the last o2o operation
    */
-  int getO2OXchecked ( std::string partitionName ) throw (FecExceptionHandler) ;
+  int getO2OXchecked ( std::string partitionName ) noexcept(false) ;
 
 };
 #endif
diff --git a/FecSoftwareV3_0/generic/include/DbConnectionsAccess.h b/FecSoftwareV3_0/generic/include/DbConnectionsAccess.h
index 34c4ecf..751dba3 100755
--- a/FecSoftwareV3_0/generic/include/DbConnectionsAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbConnectionsAccess.h
@@ -44,52 +44,52 @@ class DbConnectionsAccess : public DbAccess {
   //
   /** \brief Default constructor
    */
-  DbConnectionsAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbConnectionsAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbConnectionsAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbConnectionsAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbConnectionsAccess ( ) throw (oracle::occi::SQLException);
+  ~DbConnectionsAccess ( ) noexcept(false);
 
   /** \brief Retreive the version for each partition in the current state
    */
-  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException);
+  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false);
 
   /** \brief Retrieves the next minor version with major version = majorId for database upload
    */
-  unsigned int getNextMinorVersion(unsigned int majorId) throw (FecExceptionHandler);
+  unsigned int getNextMinorVersion(unsigned int majorId) noexcept(false);
  
   /** \brief Retrives the next major version for database upload
    */
-  unsigned int getNextMajorVersion() throw (FecExceptionHandler);
+  unsigned int getNextMajorVersion() noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) ;
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) ;
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getApvNotConnectedWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) ;
+  oracle::occi::Clob *getApvNotConnectedWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) ;
 
   /** \brief Upload a Clob to the database
    */
-  void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException);
+  void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
 
   /** \brief Upload a Clob to the database
    */
-  void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false);
 
   /** \brief Deprecated method not used and not need, an exception is raised on a call on this method
    * \exception FecExceptionHandler
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) {
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			      "deprecated, no version is available for a partition and an FEC hard ID", 
 			      FATALERRORCODE) ;
@@ -99,7 +99,7 @@ class DbConnectionsAccess : public DbAccess {
   /** \brief Deprecated method not used and not need, an exception is raised on a call on this method
    * \exception FecExceptionHandler
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string hardId) throw (oracle::occi::SQLException) {
+  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string hardId) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			      "deprecated, no version is available for a partition and an FEC hard ID", 
 			      FATALERRORCODE) ;
diff --git a/FecSoftwareV3_0/generic/include/DbFecAccess.h b/FecSoftwareV3_0/generic/include/DbFecAccess.h
index 076c8b7..17f157d 100755
--- a/FecSoftwareV3_0/generic/include/DbFecAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbFecAccess.h
@@ -44,95 +44,95 @@ class DbFecAccess : public DbAccess {
   //
   /** \brief Default constructor
    */
-  DbFecAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbFecAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbFecAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbFecAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbFecAccess ( ) throw (oracle::occi::SQLException);
+  ~DbFecAccess ( ) noexcept(false);
 
   /** \brief Retreive the version, in the current state, for the given partition name
    */
-  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException) ;
+  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false) ;
 
   /** \brief Create a new current state with a set of partitions-versions
    */
-  void setDatabaseVersion(std::list<unsigned int*> partitionVersionsList) throw (FecExceptionHandler);
+  void setDatabaseVersion(std::list<unsigned int*> partitionVersionsList) noexcept(false);
  
   /** \brief Retrives the next minor version with major version = majorId for database upload
    */
-  unsigned int getNextMinorVersion(unsigned int majorId) throw (oracle::occi::SQLException);
+  unsigned int getNextMinorVersion(unsigned int majorId) noexcept(false);
  
   /** \brief Retrives the next major version for database upload
    */
-  unsigned int getNextMajorVersion() throw (oracle::occi::SQLException);
+  unsigned int getNextMajorVersion() noexcept(false);
  
   /** \brief Creates a new state
    */
-  unsigned int createNewStateHistory(std::string partitionName, unsigned int *partitionId, unsigned int *fecVersionMajorId) throw (FecExceptionHandler);
+  unsigned int createNewStateHistory(std::string partitionName, unsigned int *partitionId, unsigned int *fecVersionMajorId) noexcept(false);
  
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Download parameters from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string id) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string id) noexcept(false);
 
   /** \brief Download parameters from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
 
 
   /** \brief Download CCU parameters from the database for a given partition
    */
   oracle::occi::Clob *getCcuXMLClob(std::string partitionName)
-    throw (oracle::occi::SQLException);  
+    noexcept(false);  
 
   /** \brief Download CCU parameters from the database for a given Fec/Ring
    */
   oracle::occi::Clob *getCcuXMLClob(std::string partitionName, std::string fecId, unsigned int ring)
-    throw (oracle::occi::SQLException);
+    noexcept(false);
 
   /** \brief Download CCU parameters from the database for a given Fec/Ring
    */
   oracle::occi::Clob *getCcuXMLClob(std::string fecHardId, unsigned int ringSlot) 
-    throw (oracle::occi::SQLException) ;
+    noexcept(false) ;
 
   /** \brief Upload a Clob to the database to configure the CCUs
    */
-  void setCcuXMLClob(std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void setCcuXMLClob(std::string buffer, std::string partitionName) noexcept(false) ;
 
   /** \brief Upload a Clob to the database to configure a ring containing CCUs
    */
-  void setRingCcuXMLClob(std::string ringBuffer, std::string ccuBuffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void setRingCcuXMLClob(std::string ringBuffer, std::string ccuBuffer, std::string partitionName) noexcept(false) ;
 
   /** \brief Upload a Clob to the database for configuration
    */
-  unsigned int setXMLClob(std::string* buffer, std::string partitionName, boolean newPartition) throw (oracle::occi::SQLException, FecExceptionHandler);
+  unsigned int setXMLClob(std::string* buffer, std::string partitionName, boolean newPartition) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-  void setXMLClobWithVersion (std::string* buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClobWithVersion (std::string* buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
 
   /** \brief Upload a Clob to the database for configuration
    */
-  void setXMLClob (std::string* buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string* buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false);
 
   /** \brief Upload a Clob to the database for configuration
    */
-  void setXMLClob(std::string stringRequest, std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob(std::string stringRequest, std::string buffer, std::string partitionName) noexcept(false);
 
   /** \brief Upload two Clobs at a time to the database for configuration
    */
-  void setXMLClob(std::string stringRequest, std::string bufferOne, std::string bufferTwo, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob(std::string stringRequest, std::string bufferOne, std::string bufferTwo, std::string partitionName) noexcept(false);
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/DbFedAccess.h b/FecSoftwareV3_0/generic/include/DbFedAccess.h
index 682b0d1..3cfcca2 100755
--- a/FecSoftwareV3_0/generic/include/DbFedAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbFedAccess.h
@@ -48,93 +48,93 @@ class DbFedAccess : public virtual DbAccess {
   //
   /** \brief Default constructor
    */
-  DbFedAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbFedAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbFedAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbFedAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbFedAccess ( ) throw (oracle::occi::SQLException);
+  ~DbFedAccess ( ) noexcept(false);
 
   /** \brief Retreive the version, in the current state, for the given partition name
    */
-  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException) ;
+  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false) ;
 
   /** \brief Create a new current state with a set of partitions-versions
    */
-  void setDatabaseVersion(std::list<unsigned int*> partitionVersionsListe) throw (FecExceptionHandler) ;
+  void setDatabaseVersion(std::list<unsigned int*> partitionVersionsListe) noexcept(false) ;
 
   /** \brief Retrieves the next minor version with major version = majorId for database upload
    */
-  unsigned int getNextMinorVersion(unsigned int majorId) throw (FecExceptionHandler);
+  unsigned int getNextMinorVersion(unsigned int majorId) noexcept(false);
  
   /** \brief Retrives the next major version for database upload
    */
-  unsigned int getNextMajorVersion() throw (FecExceptionHandler);
+  unsigned int getNextMajorVersion() noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName)throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName)noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, boolean withStrip )throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, boolean withStrip )noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) noexcept(false);
 
   /** \brief Download parameters from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string id) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string id) noexcept(false);
 
   /** \brief Download parameters from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, unsigned int fedId) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, unsigned int fedId) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, unsigned int fedId, boolean hardId) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, unsigned int fedId, boolean hardId) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId, boolean withStrip) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId, boolean withStrip) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobWithVersion(std::string partitionName, unsigned int fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-   void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+   void setXMLClob (std::string buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-  void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false);
 
-  void setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false);
 
   /** \brief Download a Clob from the database, not usec by FED
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) {
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			       "Incorrect FED database call",
 			       FATALERRORCODE ) ;
diff --git a/FecSoftwareV3_0/generic/include/DbInterface.h b/FecSoftwareV3_0/generic/include/DbInterface.h
index 270c5a3..55c4bb3 100644
--- a/FecSoftwareV3_0/generic/include/DbInterface.h
+++ b/FecSoftwareV3_0/generic/include/DbInterface.h
@@ -143,7 +143,7 @@ class DbInterface {
   /** \brief Retreive the FED version for the partition specified
    */
   void getFedPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskVersionMajor, unsigned int *maskVersionMinor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /* ********************************************************************************************** */
   /*                                                                                                */
diff --git a/FecSoftwareV3_0/generic/include/DbPiaResetAccess.h b/FecSoftwareV3_0/generic/include/DbPiaResetAccess.h
index bcb5af4..2183813 100755
--- a/FecSoftwareV3_0/generic/include/DbPiaResetAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbPiaResetAccess.h
@@ -48,32 +48,32 @@ class DbPiaResetAccess : public DbAccess {
   //
   /** \brief Default constructor
    */
-  DbPiaResetAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbPiaResetAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbPiaResetAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbPiaResetAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbPiaResetAccess ( ) throw (oracle::occi::SQLException);
+  ~DbPiaResetAccess ( ) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob from the database
    */
-  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string fecHardId) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob (std::string partitionName, std::string fecHardId) noexcept(false);
 
   /** \brief Upload a Clob from the database
    */
-  void setXMLClob (std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string buffer, std::string partitionName) noexcept(false);
 
   /** \brief Deprecated method not used and not need, an exception is raised on a call on this method
    * \exception FecExceptionHandler
    */
-  virtual std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException) {
+  virtual std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			       "deprecated, no version is available for PIA reset",
 			       FATALERRORCODE ) ;
@@ -82,7 +82,7 @@ class DbPiaResetAccess : public DbAccess {
   /** \brief Deprecated method not used and not need, an exception is raised on a call on this method
    * \exception FecExceptionHandler
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskMajorVersion, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskMajorVersion, unsigned int maskVersionMinor) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			       "deprecated, no version is available for PIA reset",
 			       FATALERRORCODE ) ;
@@ -92,7 +92,7 @@ class DbPiaResetAccess : public DbAccess {
   /** \brief Deprecated method not used and not need, an exception is raised on a call on this method
    * \exception FecExceptionHandler
    */
-  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) {
+  oracle::occi::Clob *getXMLClobWithVersion (std::string partitionName, std::string hardId, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
     RAISEFECEXCEPTIONHANDLER( CODECONSISTENCYERROR, 
 			       "deprecated, no version is available for PIA reset",
 			       FATALERRORCODE ) ;
diff --git a/FecSoftwareV3_0/generic/include/DbTkDcuConversionAccess.h b/FecSoftwareV3_0/generic/include/DbTkDcuConversionAccess.h
index 1c1205b..67c0ab8 100755
--- a/FecSoftwareV3_0/generic/include/DbTkDcuConversionAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbTkDcuConversionAccess.h
@@ -44,24 +44,24 @@ class DbTkDcuConversionAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbTkDcuConversionAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuConversionAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbTkDcuConversionAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuConversionAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbTkDcuConversionAccess ( ) throw (oracle::occi::SQLException);
+  ~DbTkDcuConversionAccess ( ) noexcept(false);
 
   /** \brief Download a Clob from database
    */
-  oracle::occi::Clob *getXMLClob(tscType32 dcuHardId ) throw (oracle::occi::SQLException);
-  oracle::occi::Clob *getXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob(tscType32 dcuHardId ) noexcept(false);
+  oracle::occi::Clob *getXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Upload a Clob to the database for configuration
    */
-  void setXMLClob (std::string buffer) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string buffer) noexcept(false);
 };
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/DbTkDcuInfoAccess.h b/FecSoftwareV3_0/generic/include/DbTkDcuInfoAccess.h
index 006fb4c..ea6e39c 100755
--- a/FecSoftwareV3_0/generic/include/DbTkDcuInfoAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbTkDcuInfoAccess.h
@@ -42,91 +42,91 @@ class DbTkDcuInfoAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbTkDcuInfoAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuInfoAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbTkDcuInfoAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuInfoAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbTkDcuInfoAccess ( ) throw (oracle::occi::SQLException);
+  ~DbTkDcuInfoAccess ( ) noexcept(false);
 
   /** \brief get the DCU info version for the given partition
    */
-  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException) ;
+  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false) ;
 
   /** \brief get the DCU info version
    */
-  std::list<unsigned int*> getDatabaseVersion () throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  std::list<unsigned int*> getDatabaseVersion () noexcept(false) ;
 
   /** \brief Download a Clob from database
    */
-  oracle::occi::Clob *getXMLClob(std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob(std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) noexcept(false);
 
   /** \brief Download a Clob with all the dcu infos for the given version from database
    */
-  oracle::occi::Clob *getXMLClob(unsigned int majorVersionId, unsigned int minorVersionId) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob(unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false);
 
   /** \brief Download a Clob with all the dcu infos for the last version from database
    */
-  oracle::occi::Clob *getXMLClob() throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob() noexcept(false);
 
   /** \brief Download a Clob with all the current states informations
    */
-  oracle::occi::Clob *getCurrentStatesXMLClob() throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getCurrentStatesXMLClob() noexcept(false);
 
   /** \brief Download a Clob with all the current Fec versions informations
    */
-  oracle::occi::Clob *getFecVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getFecVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with all the current Fed versions informations
    */
-  oracle::occi::Clob *getFedVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getFedVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with all the current Dcu Info versions informations
    */
-  oracle::occi::Clob *getDcuInfoVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getDcuInfoVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with all the Connection versions informations
    */
-  oracle::occi::Clob *getConnectionVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getConnectionVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with all the current Dcu PSU Map versions informations
    */
-  oracle::occi::Clob *getDcuPsuMapVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getDcuPsuMapVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with all the current Dcu PSU Map versions informations
    */
-  oracle::occi::Clob *getMaskVersionsXMLClob(std::string partitionName) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getMaskVersionsXMLClob(std::string partitionName) noexcept(false);
 
   /** \brief Download a Clob with the last run for the given partition
    */
-  oracle::occi::Clob *getLastRunXMLClob(std::string partitionName ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getLastRunXMLClob(std::string partitionName ) noexcept(false);
 
   /** \brief Download a Clob with the last run for the given partition
    */
-  oracle::occi::Clob *getAllRunsXMLClob( ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getAllRunsXMLClob( ) noexcept(false);
 
   /** \brief Download a Clob with the given run for the given partition
   */
-  oracle::occi::Clob *getRunXMLClob(std::string partitionName, int runNumber ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getRunXMLClob(std::string partitionName, int runNumber ) noexcept(false);
 
   /** \brief Download a Clob with the last run used by O2Ofor the given partition
    */
-  oracle::occi::Clob *getLastO2ORunXMLClob(std::string partitionName ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getLastO2ORunXMLClob(std::string partitionName ) noexcept(false);
 
   /** \brief Upload a Clob to the database for configuration
    */
-  void setXMLClob (std::string buffer) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string buffer) noexcept(false);
 
   /** \brief Update the channel delays according to the fiber length
    */
-  void updateChannelDelays (std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void updateChannelDelays (std::string partitionName) noexcept(false);
 
   /** \brief Upload XML clob to database for diag system
    */
-  void uploadDiagnoticXMLClob ( std::string buffer ) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void uploadDiagnoticXMLClob ( std::string buffer ) noexcept(false);
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/DbTkDcuPsuMapAccess.h b/FecSoftwareV3_0/generic/include/DbTkDcuPsuMapAccess.h
index 29ba57f..857efe6 100755
--- a/FecSoftwareV3_0/generic/include/DbTkDcuPsuMapAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbTkDcuPsuMapAccess.h
@@ -42,47 +42,47 @@ class DbTkDcuPsuMapAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbTkDcuPsuMapAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuPsuMapAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbTkDcuPsuMapAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkDcuPsuMapAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbTkDcuPsuMapAccess ( ) throw (oracle::occi::SQLException);
+  ~DbTkDcuPsuMapAccess ( ) noexcept(false);
 
   /** \brief get the DCU/PSU map version for the given partition
    */
-  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException) ;
+  std::list<unsigned int*> getDatabaseVersion (std::string partitionName) noexcept(false) ;
 
   /**Sends a request to the database to execute a PL/SQL stored procedure in order to get a Clob containing the data from the database.<BR>
    */
-  oracle::occi::Clob *getXMLClob( int onlyPsuName, std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  oracle::occi::Clob *getXMLClob( int onlyPsuName, std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false) ;
 
   /** Request the PSU names from the database
    */
-  oracle::occi::Clob *getPsuNameXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  oracle::occi::Clob *getPsuNameXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false) ;
 
   /** Request the DCU / PSU from the database
    */
-  oracle::occi::Clob *getDcuPsuMapXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  oracle::occi::Clob *getDcuPsuMapXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false) ;
 
   /** Request the DCU / PSU from the database
    */
-  oracle::occi::Clob *getPsuNotConnectedXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  oracle::occi::Clob *getPsuNotConnectedXMLClob( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false) ;
 
   /**Sends a request to the database to execute a PL/SQL stored procedure in order to set a Clob containing the data to the database.<BR>
    */
-  void setXMLClob(bool psuNameOnly, std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void setXMLClob(bool psuNameOnly, std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) noexcept(false) ;
 
   /** Upload the PSU names in a new version
    */
-  void uploadPsuNames ( std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void uploadPsuNames ( std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) noexcept(false) ;
 
   /** Upload the PSU/DCU map in a new version
    */
-  void uploadDcuPsuMap ( std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void uploadDcuPsuMap ( std::string buffer, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/DbTkIdVsHostnameAccess.h b/FecSoftwareV3_0/generic/include/DbTkIdVsHostnameAccess.h
index f64fe34..0fc34c7 100755
--- a/FecSoftwareV3_0/generic/include/DbTkIdVsHostnameAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbTkIdVsHostnameAccess.h
@@ -42,39 +42,39 @@ class DbTkIdVsHostnameAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbTkIdVsHostnameAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkIdVsHostnameAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbTkIdVsHostnameAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkIdVsHostnameAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbTkIdVsHostnameAccess ( ) throw (oracle::occi::SQLException);
+  ~DbTkIdVsHostnameAccess ( ) noexcept(false);
 
   /** \brief Download a Clob with all the Id VS hostname from database
    */
-  oracle::occi::Clob *getXMLClob( unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClob( unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false);
 
   /** \brief Download a Clob with all the Id VS hostname from database
    */
-  oracle::occi::Clob *getXMLClobFromHostname ( std::string hostname, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobFromHostname ( std::string hostname, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false);
 
   /** \brief Download a Clob with all the Id VS hostname from database
    */
-  oracle::occi::Clob *getXMLClobFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException);
+  oracle::occi::Clob *getXMLClobFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false);
 
   /** \brief Retreive the sub-detector for a given version
    */
-  void getSubDetectorCrateNumber ( std::string hostname, std::string &subDetector, unsigned int &crateNumber, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) throw (oracle::occi::SQLException) ;
+  void getSubDetectorCrateNumber ( std::string hostname, std::string &subDetector, unsigned int &crateNumber, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 ) noexcept(false) ;
 
   /** \brief retreive the version for the ID versus hostname in the "current state"
    */
-  void getTkIdVsHostnameVersion ( unsigned int &versionMajorId, unsigned int &versionMinorId ) throw (oracle::occi::SQLException) ;
+  void getTkIdVsHostnameVersion ( unsigned int &versionMajorId, unsigned int &versionMinorId ) noexcept(false) ;
 
   /** \brief Upload a Clob to the database for configuration
    */
-  void setXMLClob (std::string buffer, bool major) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void setXMLClob (std::string buffer, bool major) noexcept(false);
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/DbTkMaskModulesAccess.h b/FecSoftwareV3_0/generic/include/DbTkMaskModulesAccess.h
index f655013..3eb398f 100644
--- a/FecSoftwareV3_0/generic/include/DbTkMaskModulesAccess.h
+++ b/FecSoftwareV3_0/generic/include/DbTkMaskModulesAccess.h
@@ -41,114 +41,114 @@ class DbTkMaskModulesAccess : public DbCommonAccess {
   //
   /** \brief Default constructor
    */
-  DbTkMaskModulesAccess(bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkMaskModulesAccess(bool threaded = false) noexcept(false);
 
   /** \brief Constructor with connection parameters
    */
-  DbTkMaskModulesAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) throw (oracle::occi::SQLException);
+  DbTkMaskModulesAccess (std::string user, std::string passwd, std::string dbPath, bool threaded = false) noexcept(false);
 
   /** \brief Destructor
    */
-  ~DbTkMaskModulesAccess ( ) throw (oracle::occi::SQLException);
+  ~DbTkMaskModulesAccess ( ) noexcept(false);
 
   /**
    * \brief Return the mask version for partition
    */
-  void getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) throw (oracle::occi::SQLException) ;
+  void getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) noexcept(false) ;
 
   /**\brief copy a mask from a version for a given partition to a new major version
    */
-  void copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief copy a mask from the current version for a given partition to a new major version
    */
-  void copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief Reset the masking version for a given partition. This method retreive the versions before the mask and put it to the StateHistory/CurrentState
    */
-  void resetMask ( std::string pPartitionName ) throw (oracle::occi::SQLException) ;
+  void resetMask ( std::string pPartitionName ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED channel
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED channel and a given APV (1 or 2)
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief Disable all modules for a FEC
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel, device
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel, device
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask a module with DCU hard ID
    */
-  void maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask a module with DET ID
    */
-  void maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask all modules related to PSU name
    */
-  void maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException) ;
+  void maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 };
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/DeviceFactory.h b/FecSoftwareV3_0/generic/include/DeviceFactory.h
index 82a4b37..a3b12d2 100755
--- a/FecSoftwareV3_0/generic/include/DeviceFactory.h
+++ b/FecSoftwareV3_0/generic/include/DeviceFactory.h
@@ -66,7 +66,7 @@ class DeviceFactory: public FecFactory,
   /** \brief Buid a FEC factory for database
    */
   DeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) 
+    noexcept(false) 
     ;
 #endif
 
@@ -81,12 +81,12 @@ class DeviceFactory: public FecFactory,
   /** \brief Retreive from the database the next run number
    */
   unsigned int getNextRunNumber ( )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Retreive from the database the current run number
    */
   unsigned int getCurrentRunNumber ( )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set this file as the new output
    */
@@ -94,67 +94,67 @@ class DeviceFactory: public FecFactory,
 
   /** \brief Set a file as the new input
    */
-  void setFecInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setFecInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addFecFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addFecFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setFedInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setFedInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addFedFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addFedFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setFedFecConnectionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setFedFecConnectionInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addFedFecConnectionFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addFedFecConnectionFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setConnectionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setConnectionInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addConnectionFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addConnectionFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setDcuConversionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setDcuConversionInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addDcuConversionFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addDcuConversionFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setTkDcuInfoInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setTkDcuInfoInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addTkDcuInfoFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addTkDcuInfoFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setTkDcuPsuMapFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setTkDcuPsuMapFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addTkDcuPsuMapFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addTkDcuPsuMapFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Set a file as the new input
    */
-  void setTkIdVsHostnameInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setTkIdVsHostnameInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Add a new file name and parse it to retreive the information needed
    */
-  void addTkIdVsHostnameFileName ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  void addTkIdVsHostnameFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Use file
    */
@@ -169,7 +169,7 @@ class DeviceFactory: public FecFactory,
 #ifdef DATABASE
   /** \brief use database
    */
-  void setUsingDb ( bool useIt = true ) throw (std::string) ;
+  void setUsingDb ( bool useIt = true ) noexcept(false) ;
 
   /** \brief All databases used for FEC, FED, PIA and connection
    */
@@ -181,28 +181,28 @@ class DeviceFactory: public FecFactory,
 
   /** \brief create the database access for default environement variable
    */
-  void setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) ;
+  void setDatabaseAccess ( ) noexcept(false) ;
 
   /** \brief create database access
    */
-  void setDatabaseAccess ( std::string login, std::string password, std::string path ) throw ( oracle::occi::SQLException ) ;
+  void setDatabaseAccess ( std::string login, std::string password, std::string path ) noexcept(false) ;
 
   /** \brief return the partition name
    */
-  std::string getPartitionName ( unsigned int partitionId )  throw (oracle::occi::SQLException) ;
+  std::string getPartitionName ( unsigned int partitionId )  noexcept(false) ;
 
   /** \brief Refresh the cache of the connection, fec and fed
    */
-  void refreshCacheXMLClob ( int deleteValues = 1, bool withStrips = true ) throw (oracle::occi::SQLException) ;
+  void refreshCacheXMLClob ( int deleteValues = 1, bool withStrips = true ) noexcept(false) ;
 
   /** \brief disable a set of DCus
    */
   void setEnableModules(std::string partitionName, std::vector<unsigned int> dcuHardIdList, bool enabled) 
-    throw (FecExceptionHandler, oracle::occi::SQLException, Fed9U::Fed9UDeviceFactoryException, ICUtils::ICException) ;
+    noexcept(false) ;
 
   /** \brief download the connections and identify the det id 
    */
-  unsigned int getConnectionDescriptionDetId ( std::string partitionName, ConnectionVector &connectionVector, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, unsigned int maskVersionMajor = 0, unsigned int maskVersionMinor = 0, bool allConnections = false, bool forceDbReload = false ) throw (FecExceptionHandler, oracle::occi::SQLException) ;
+  unsigned int getConnectionDescriptionDetId ( std::string partitionName, ConnectionVector &connectionVector, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, unsigned int maskVersionMajor = 0, unsigned int maskVersionMinor = 0, bool allConnections = false, bool forceDbReload = false ) noexcept(false) ;
 
   /** \brief return the error message coming from oracle exception
    */
@@ -210,11 +210,11 @@ class DeviceFactory: public FecFactory,
 
   /** \brief insert an o2o operation
    */
-  void setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int runNumber ) throw (FecExceptionHandler) ;
+  void setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int runNumber ) noexcept(false) ;
 
   /** \brief crosscheck the last o2o operation
    */
-  bool getO2OXchecked ( std::string partitionName ) throw (FecExceptionHandler) ;
+  bool getO2OXchecked ( std::string partitionName ) noexcept(false) ;
 
   /** \brief return a database access from any factory class (first found)
    * \return dbAccess - database access (NULL if not found)
diff --git a/FecSoftwareV3_0/generic/include/DeviceFactoryInterface.h b/FecSoftwareV3_0/generic/include/DeviceFactoryInterface.h
index 5d6f1bb..122d8d8 100755
--- a/FecSoftwareV3_0/generic/include/DeviceFactoryInterface.h
+++ b/FecSoftwareV3_0/generic/include/DeviceFactoryInterface.h
@@ -105,7 +105,7 @@ class DeviceFactoryInterface {
    * \exception oracle::occi:SQLException in case of problem regarding the connection
    */
   DeviceFactoryInterface ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ):
+    noexcept(false):
     login_(login), password_(password), path_(path), threaded_(threaded), dbAccess_(NULL), useDatabase_(false), deleteDbAccess_(true), outputFileName_(UNKNOWNFILE) {
   }
 
@@ -114,7 +114,7 @@ class DeviceFactoryInterface {
    * \param dbAccess - database access
    */
   DeviceFactoryInterface ( DbCommonAccess *dbAccess ) 
-    throw ( oracle::occi::SQLException ):
+    noexcept(false):
     threaded_(false), dbAccess_(dbAccess), useDatabase_(false), deleteDbAccess_(false), outputFileName_(UNKNOWNFILE) {
   }
 
@@ -189,7 +189,7 @@ class DeviceFactoryInterface {
 
   /** \brief Use or not the database access
    */
-  void setUsingDb ( bool useIt = true ) throw ( std::string ) {
+  void setUsingDb ( bool useIt = true ) noexcept(false) {
 
     if (dbAccess_ != NULL) {
       useDatabase_ = useIt ;
@@ -249,7 +249,7 @@ class DeviceFactoryInterface {
   /** \return the partition name
    * \bug this method must be only called by the FecDeviceFactory or PiaResetFactory or Fed9UDeviceFactory that inherits from this interface. In any other case so TkDcuConversionFactory or DetIdDcuFactory, this method will crash !
    */
-  std::string getPartitionName ( unsigned int partitionId )  throw (oracle::occi::SQLException) {
+  std::string getPartitionName ( unsigned int partitionId )  noexcept(false) {
 
     return (((DbAccess *)dbAccess_)->getPartitionName ( partitionId )) ;
   }
diff --git a/FecSoftwareV3_0/generic/include/DohAccess.h b/FecSoftwareV3_0/generic/include/DohAccess.h
index af64ac1..a582591 100755
--- a/FecSoftwareV3_0/generic/include/DohAccess.h
+++ b/FecSoftwareV3_0/generic/include/DohAccess.h
@@ -122,7 +122,7 @@ class DohAccess: public laserdriverAccess {
 
   /** \brief Find the optimal value for the DOH bias for a given gain
    */
-  laserdriverDescription *calibrateDOH ( bool displayDebugMessage = false, unsigned char gain = 1, unsigned char minBiasValue = MINBIASVALUE ) throw (FecExceptionHandler) ;
+  laserdriverDescription *calibrateDOH ( bool displayDebugMessage = false, unsigned char gain = 1, unsigned char minBiasValue = MINBIASVALUE ) noexcept(false) ;
 };
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/FecAccess.h b/FecSoftwareV3_0/generic/include/FecAccess.h
index 1e51af0..87c1f14 100755
--- a/FecSoftwareV3_0/generic/include/FecAccess.h
+++ b/FecSoftwareV3_0/generic/include/FecAccess.h
@@ -213,24 +213,24 @@ class FecAccess {
 
   /** \brief Check the index and retreive the channel access
    */
-  ccuChannelAccess *checkIndex ( keyType index ) throw (FecExceptionHandler) ;
+  ccuChannelAccess *checkIndex ( keyType index ) noexcept(false) ;
 
   /** \brief Method for the VME plug and play configuration
    */
   void configurePlugAndPlay ( unsigned adapterSlot, std::string configurationFile, std::string mapFile, std::string strBusAdapter ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Method for the base address specification
    */
   void configureBaseAddresses ( unsigned adapterSlot, std::string configurationFile, const uint32_t *baseAddresses, std::string strBusAdapter ) 
-  throw ( FecExceptionHandler ) ;
+  noexcept(false) ;
 
   /** \brief initialise the FEC access 
    */
   void setInitFecAccess ( bool forceAck, bool initFec, bool scanFECs, bool scanCCUs, tscType16 i2cSpeed, 
 			  tscType8 fecSlotMin, tscType8 fecSlotMax, tscType8 ringMin, tscType8 ringMax,
 			  bool invertClockPolarity ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
  public:
 
@@ -239,14 +239,14 @@ class FecAccess {
   /** \brief constructor for the PCI FEC Access
    */
   FecAccess ( bool forceAck = false, bool initFec = true, bool scanFECs = false, bool scanCCUs = false, tscType16 i2cSpeed = 100, bool invertClockPolarity = false )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Constructor with VME plug and play, force acknowledge and scan at the beginning
    */
   FecAccess (hashMapVMEDevice hashMapVMEDevice, 
 	     bool forceAck = false, bool initFec = true, bool scanFECs = false, bool scanCCUs = false, tscType16 i2cSpeed = 100, 
 	     bool blockMode = false, tscType8 numberOfRing = 8, bool invertClockPolarity = false )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Constructor with VME plug and play, force acknowledge and scan at the beginning
    */
@@ -254,7 +254,7 @@ class FecAccess {
               std::string configurationFile, std::string mapFile,
               bool forceAck = false, bool initFec = true, bool scanFECs = false, bool scanCCUs = false, tscType16 i2cSpeed = 100,
 	      std::string strBusAdapter = "SBS620x86LinuxBusAdapter", bool blockMode = false, tscType8 numberOfRing = 8, bool invertClockPolarity = false )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Constructor with the specification of the base address for each slot, force acknowledge and scan at the beginning
    */
@@ -262,19 +262,19 @@ class FecAccess {
               const uint32_t *baseAddresses,
 	      bool forceAck = false, bool initFec = true, bool scanFECs = false, bool scanCCUs = false, tscType16 i2cSpeed = 100,
 	      std::string strBusAdapter = "SBS620x86LinuxBusAdapter", bool blockMode = false, tscType8 numberOfRing = 8, bool invertClockPolarity = false )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
    /** \brief constructor for the USB FEC Access
     */
    FecAccess ( hashMapFecUsbSerial fecUsbSerials, bool forceAck = false, bool initFec = true,
 	       bool scanFECs = false, bool scanCCUs = false,
-	       tscType16 i2cSpeed = 100, bool invertClockPolarity = false ) throw (FecExceptionHandler ); 
+	       tscType16 i2cSpeed = 100, bool invertClockPolarity = false ) noexcept(false); 
 
 /** \brief constructor for the uTCA FEC Access
     */
    FecAccess ( const std::string& strFilename, const std::string& strBoardId, bool forceAck, bool initFec, 
                        bool scanFECs, bool scanCCUs,
-		       tscType16 i2cSpeed, bool invertClockPolarity ) throw (FecExceptionHandler );
+		       tscType16 i2cSpeed, bool invertClockPolarity ) noexcept(false);
 
    /** \brief Remove all the accesses and close all the device driver and
     * disable all the channels
@@ -338,7 +338,7 @@ class FecAccess {
   /** \brief Return the FecRingDevice corresponding to the slot
    */
   FecRingDevice *getFecRingDevice ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief restrieve all the FECs already connected
    */
@@ -367,67 +367,67 @@ class FecAccess {
   /**
    * \brief return transmit fifo size (depth) in D32 words 
    */
-  unsigned int getTransmitFifoDepth ( keyType index ) throw (FecExceptionHandler) ;
+  unsigned int getTransmitFifoDepth ( keyType index ) noexcept(false) ;
 
   /**
    * \brief receive fifo size (depth) in D32 words 
    */
-  unsigned int getReceiveFifoDepth ( keyType index ) throw (FecExceptionHandler) ;
+  unsigned int getReceiveFifoDepth ( keyType index ) noexcept(false) ;
 
   /** 
    * \brief return fifo size (depth) in D32 words 
    */
-  unsigned int getReturnFifoDepth ( keyType index ) throw (FecExceptionHandler) ;
+  unsigned int getReturnFifoDepth ( keyType index ) noexcept(false) ;
 
   /** \brief empty the FIFO receive
    */
-  void emptyFifoReceive ( keyType index ) throw (FecExceptionHandler) ;
+  void emptyFifoReceive ( keyType index ) noexcept(false) ;
 
   /** \brief empty the FIFO return
    */
-  void emptyFifoReturn ( keyType index ) throw (FecExceptionHandler) ;
+  void emptyFifoReturn ( keyType index ) noexcept(false) ;
 
   /** \brief empty the FIFO transmit
    */
-  void emptyFifoTransmit ( keyType index ) throw (FecExceptionHandler) ;
+  void emptyFifoTransmit ( keyType index ) noexcept(false) ;
 
   /** \brief clear all errors for FEC and CCUs
    */
-  void clearFecCcuErrorRegisters ( keyType index, bool noBroadcast = false ) throw (FecExceptionHandler) ;
+  void clearFecCcuErrorRegisters ( keyType index, bool noBroadcast = false ) noexcept(false) ;
 
   // ----------------------------------------------- FEC methods
   /** \brief Return the corresponding CCS Trigger
    */
 #if defined(BUSVMECAENPCI) || defined(BUSVMECAENUSB) || defined (BUSVMESBS)
   CCSTrigger *getCCSTrigger ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the SSID in the CCSTrigger object, create it if the object is not created
    */
   CCSTrigger *setCCSTrigger ( keyType index, std::string SSID ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the FEC trigger control register 0
    */
-  uint32_t getCCSTriggerConfig0 ( keyType index ) throw (FecExceptionHandler) ;
+  uint32_t getCCSTriggerConfig0 ( keyType index ) noexcept(false) ;
 
   /** \brief set the trigger register 0 of the FEC/CCS
    */
-  void setCCSTriggerConfig0 ( keyType index, uint32_t value ) throw (FecExceptionHandler) ;
+  void setCCSTriggerConfig0 ( keyType index, uint32_t value ) noexcept(false) ;
 
   /** \brief Retreive the FEC trigger status register 0
    */
-  uint32_t getCCSTriggerStatus0 ( keyType index ) throw (FecExceptionHandler) ;
+  uint32_t getCCSTriggerStatus0 ( keyType index ) noexcept(false) ;
 
   /** \brief Retreive the FEC SSID
    */
-  std::string getSSID ( keyType index ) throw (FecExceptionHandler) ;
+  std::string getSSID ( keyType index ) noexcept(false) ;
 
   /** \brief return the temperature of the given VME FEC
    */
   void getFecTemperature ( keyType index, int &tempSensor1, int &tempSensor2 ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief scan the PCI/VME bus for FECs
    */
@@ -435,235 +435,235 @@ class FecAccess {
 				   tscType8 fecSlotMax,
 				   tscType8 ringMin,
 				   tscType8 ringMax ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief scan the VME bus for FECs for a given FEC
    */
-  keyType scanFecRing ( std::string fecHardwareId ) throw (FecExceptionHandler) ;
+  keyType scanFecRing ( std::string fecHardwareId ) noexcept(false) ;
 
   /**
    * \brief return firmware version
    */
-  tscType16 getFecFirmwareVersion( keyType index ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecFirmwareVersion( keyType index ) noexcept(false) ;
 
   /** \brief return the FEC hardware ID for a give index
    */
-  std::string getFecHardwareId ( keyType index ) throw (FecExceptionHandler) ;
+  std::string getFecHardwareId ( keyType index ) noexcept(false) ;
 
   /** \brief return the FEC Trigger version
    */
-  tscType32 getTriggerVersion ( keyType index ) throw (FecExceptionHandler) ;
+  tscType32 getTriggerVersion ( keyType index ) noexcept(false) ;
 
   /** \brief return the FEC VME version
    */
-  tscType32 getVmeVersion ( keyType index ) throw (FecExceptionHandler) ;
+  tscType32 getVmeVersion ( keyType index ) noexcept(false) ;
 
   /** \brief return the index for a given FEC hardware ID
    */
-  keyType getFecIndex ( std::string fecHardwareId ) throw (FecExceptionHandler) ;
+  keyType getFecIndex ( std::string fecHardwareId ) noexcept(false) ;
 
   /** \brief set the input of the FEC
    */
-  void setFecInputB (  keyType index, bool inputB ) throw (FecExceptionHandler) ;
+  void setFecInputB (  keyType index, bool inputB ) noexcept(false) ;
 
   /** \brief set the output of the FEC
    */
-  void setFecOutputB (  keyType index, bool outputB ) throw (FecExceptionHandler) ;
+  void setFecOutputB (  keyType index, bool outputB ) noexcept(false) ;
 
   /** \brief invert the clock polarity
    */
-  void setInvertClockPolarity ( bool invertPolarity ) throw (FecExceptionHandler) ;
+  void setInvertClockPolarity ( bool invertPolarity ) noexcept(false) ;
 
   /** \brief invert the clock polarity
    */
-  void setInvertClockPolarity ( keyType index, bool invertPolarity ) throw (FecExceptionHandler) ;
+  void setInvertClockPolarity ( keyType index, bool invertPolarity ) noexcept(false) ;
 
   /** \brief use the internal clock
    */
-  void setInternalClock (  keyType index, bool internal ) throw (FecExceptionHandler) ;
+  void setInternalClock (  keyType index, bool internal ) noexcept(false) ;
 
   /** \brief Set the FEC, ring control register 0
    */
   void setFecRingCR0 ( keyType index, tscType16 value, bool force = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the FEC, ring control register 0
    */
   void setFecRingCR0 ( keyType index, tscType16 value, logicalOperationType op ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the FEC, ring control register 0
    */
   tscType16 getFecRingCR0 ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the FEC, ring control register 1
    */
   void setFecRingCR1 ( keyType index, tscType16 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Enable or disable the irq for the given FEC
    */
   void setIRQ ( keyType index, bool enable, tscType8 vmeLevel=1 ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Enable or disable the irq for the all the FECs
    */
   void setIRQ ( bool enable, tscType8 vmeLevel=1 ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /*----------- This method has no sense, the CR1 CANNOT BE READ ----------- 
   void setFecRingCR1 ( keyType index, 
 		       tscType16 value 
 		       logicalOperationType op )  ;
-  throw (FecExceptionHandler) ;
+  noexcept(false) ;
   ----------------------------------------------------------------------- */
 
   /** \brief Get the FEC, ring control register 1
    */
   tscType16 getFecRingCR1 ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the FEC, ring status register 0
    */
   tscType16 getFecRingSR0 ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the FEC, ring status register 1
    */
   tscType16 getFecRingSR1 ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Hard reset for all FEC, ring
    */
   void fecHardReset ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Hard reset for all FEC, ring
    */
   void fecHardReset ( keyType index, tscType8 value = 0 ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief only for VME crate, reset the crate
    */
   void crateReset ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief reset all FEC, ring FSM
    */
   void fecRingResetFSM ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief FEC, ring reset FSM
    */
   void fecRingResetFSM ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief reset all FEC, ring
    */
   void fecRingReset ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief FEC, ring reset
    */
   void fecRingReset ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Initialise the TTCRx
    */
   void initTTCRx ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Initialise the TTCRx
    */
   void initTTCRx ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Disable or enable the receive for a FEC (redundancy)
    */
   void setCR0Receive ( keyType index, bool enable ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief FEC, ring reset on ring B 
    */
   void fecRingResetB ( ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief FEC, ring reset on ring B 
    */
   void fecRingResetB ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief release the FEC so re-generate a token on the ring
    */
   void fecRingRelease ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Reconfiguration of the ring
    */
   tscType16 fecRingReconfigure ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Reconfiguration of the ring for a given set of data
    */
   tscType16 fecRingReconfigure ( keyType index, TkRingDescription &tkRing ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief retreive all status and control registers for a given FEC, ring
    */
   FecRingRegisters getFecRingRegisters ( keyType index )
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // ----------------------------------------------- CCU methods
 
   /** \brief check if a channel is enabled
    */
-  bool isChannelEnabled ( keyType index )  throw (FecExceptionHandler) ;
+  bool isChannelEnabled ( keyType index )  noexcept(false) ;
 
   /** \brief Set the CCU register A
    */
   void setCcuCRA ( keyType index, tscType8 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU control register A
    */
   tscType8 getCcuCRA ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the CCU register B
    */
   void setCcuCRB ( keyType index, tscType8 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU control register B
    */
   tscType8 getCcuCRB ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the CCU register C
    */
   void setCcuCRC ( keyType index, tscType8 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU control register C
    */
   tscType8 getCcuCRC ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the CCU register D
    */
   void setCcuCRD ( keyType index, tscType8 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU control register D
    */
   tscType8 getCcuCRD ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the CCU register E
    */
   void setCcuCRE ( keyType index, tscType24 value ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the CCU register E
    */
@@ -673,86 +673,86 @@ class FecAccess {
                    tscType8 valueMemory,
                    tscType8 valueTrigger,
                    tscType8 valueJTAG) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU control register E
    */
   tscType24 getCcuCRE ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register A
    */
   tscType8 getCcuSRA ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register B
    */
   tscType8 getCcuSRB ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register C
    */
   tscType8 getCcuSRC ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register D
    */
   tscType8 getCcuSRD ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register E
    */
   tscType24 getCcuSRE ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register F
    */
   tscType16 getCcuSRF ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register G
    */
   tscType8 getCcuSRG ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the CCU status register H
    */
   tscType8 getCcuSRH ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief retreive the list of the CCU on that FEC, ring
    */
   std::list<keyType> *getCcuList ( keyType index, bool noBroadcast = false, bool scan = true) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // ------------------------------- CCU Alarms
 
   /** \brief Enable or disable CCU alarms
    */
   void setCcuAlarmsEnable ( keyType index, bool enable1, bool enable2, bool enable3, bool enable4 ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Wait for any CCU alarms
    */ 
   void waitForAnyCcuAlarms ( keyType index, tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Enable the PIA interrupts
    */
   void setPiaInterruptEnable ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Clear the interrupt on PIA channels
    */
   void setPiaClearInterrupts ( keyType index ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // ----------------------------------------------- Channel method
 
   /** \brief re-enable a channel
    */
   void setChannelEnable ( keyType index, bool enable ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // --------------------------------------------- PIA channels
 
@@ -763,72 +763,72 @@ class FecAccess {
                          tscType8 ccuAddress,
                          tscType8 piaChannel,
                          enumAccessModeType accessMask ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Add a PIA access with the key
    */
   keyType addPiaAccess ( keyType index,
                          enumAccessModeType accessMask ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Remove a pia access
    */
-  void removePiaAccess ( keyType index) throw (FecExceptionHandler) ;
+  void removePiaAccess ( keyType index) noexcept(false) ;
 
   /** \brief Reset PIA channel
    */
   void piaChannelReset ( keyType index ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA general control register
    */
   void setPiaChannelGCR ( keyType index, tscType8 value ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA general control register
    */
   void setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Get the PIA general control register
    */
   tscType8 getPiaChannelGCR ( keyType index ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Get the PIA status register
    */
   tscType8 getPiaChannelStatus ( keyType index ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA data direction register
    */
   void setPiaChannelDDR ( keyType index, tscType8 value ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA data direction register
    */
   void setPiaChannelDDR ( keyType index, tscType8 value, logicalOperationType op ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Get the PIA data direction register
    */
   tscType8 getPiaChannelDDR ( keyType index ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA data register
    */
   void setPiaChannelDataReg ( keyType index, tscType8 value ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Set the PIA data register
    */
   void setPiaChannelDataReg ( keyType index, tscType8 value, logicalOperationType op ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Get the PIA data register
    */
   tscType8 getPiaChannelDataReg ( keyType index ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   // --------------------------------------------- I2C channels
 
@@ -841,59 +841,59 @@ class FecAccess {
                          tscType8 i2cAddress,
                          enumDeviceType deviceType,
                          enumAccessModeType accessMask ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Add an I2C access with a key
    */
   keyType addi2cAccess ( keyType index,
                          enumDeviceType deviceType,
                          enumAccessModeType accessMask ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief remove an I2C access
    */
   void removei2cAccess ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the I2C control register A
    */
   void seti2cChannelCRA ( keyType index, tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the I2C control register A with boolean operator
    */
   void seti2cChannelCRA ( keyType index, tscType8 value,logicalOperationType op)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Reset an I2C channel
    */
   void i2cChannelReset  ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
   
   /** \brief Get the I2C control register A
    */
   tscType8 geti2cChannelCRA ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the I2C status register A
    */
   tscType8 geti2cChannelSRA ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the I2C status register B
    */
   tscType8 geti2cChannelSRB ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the I2C status register C
    */
   tscType8 geti2cChannelSRC ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the I2C status register D
    */
   tscType8 geti2cChannelSRD ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief scan the ring for devices
    */
@@ -901,7 +901,7 @@ class FecAccess {
                                         tscType32 sizeDevices,
 					bool noBroadcast = false,
 					bool display = true) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief scan a ring for devices
    */
@@ -910,7 +910,7 @@ class FecAccess {
                                         tscType32 sizeDevices,
 					bool noBroadcast = false,
 					bool display = true) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 
   // --------------------------------------------- Memory channels
@@ -922,7 +922,7 @@ class FecAccess {
                             tscType8 ccuAddress,
                             tscType8 piaChannel,
                             enumAccessModeType accessMask )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 
 
@@ -930,99 +930,99 @@ class FecAccess {
    */
   keyType addMemoryAccess ( keyType index,
                          enumAccessModeType accessMask ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Remove a memory access
    */
   void removeMemoryAccess ( keyType index) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Reset Memory channel
    */
   void memoryChannelReset ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Set the memory control register A
    */
   void setMemoryChannelCRA ( keyType index, tscType8 value )  
-    throw (FecExceptionHandler) ;;
+    noexcept(false) ;;
 
   /** \brief Set the PIA control register A
    */
   void setMemoryChannelCRA ( keyType index, tscType8 value, logicalOperationType op )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the Memory control register A
    */
   tscType8 getMemoryChannelCRA ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Get the memory status register
    */
   tscType8 getMemoryChannelStatus ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to set the memory WIN1L register
    */
   void setMemoryChannelWin1LReg ( keyType index, tscType16 value )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to set the memory WIN1H register
    */
   void setMemoryChannelWin1HReg ( keyType index, tscType16 value )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to set the memory WIN2L register
    */
   void setMemoryChannelWin2LReg ( keyType index, tscType16 value )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to set the memory WIN2H register
    */
   void setMemoryChannelWin2HReg ( keyType index, tscType16 value )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to set the memory mask register
    */
   void setMemoryChannelMaskReg ( keyType index, tscType8 value )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory mask register
    */
   tscType8 getMemoryChannelMaskReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory WIN1L register
    */
   tscType16 getMemoryChannelWin1LReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory WIN1H register
    */
   tscType16 getMemoryChannelWin1HReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory WIN2L register
    */
   tscType16 getMemoryChannelWin2LReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory WIN2H register
    */
   tscType16 getMemoryChannelWin2HReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Method in order to retreive memory mask register
    */
   tscType8 getMemoryChanneMaskReg ( keyType index )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // ----------------------------------------------- Read / Write methods
 
   /** \brief Download a block of frames
    */
   unsigned int setBlockDevices ( keyType index, accessDeviceTypeList &vAccesses, std::list<FecExceptionHandler *> &errorList, bool piaChannel = false, bool debugMessageDisplay = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Download a block of frames to all rings (ring per ring)
    */
@@ -1035,68 +1035,68 @@ class FecAccess {
   /** \brief Read a value from the device specified in the key
    */
   tscType8 read (keyType index)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read a value from the device specified in the key
    */
   tscType8 readOffset (keyType index, tscType8 offset)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read a value from the device specified in the key
    */
   tscType8 readOffset (keyType index, tscType8 offset, tscType8 decal)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read a value from the device specified in the key
    */
   tscType8 read (keyType index, tscType8 offset)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read a value from the memory channel
    */
   tscType8 read (keyType index, tscType8 AH, tscType8 AL )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read a value from the memory channel
    */
   void read (keyType index, 
              tscType8 AH, tscType8 AL,
              unsigned size, tscType8 *values)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the device specified in the key
    */
   void write (keyType index, tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the device specified in the key
    */
   void writeOffset (keyType index, tscType8 offset, tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the device specified in the key
    */
   void writeOffset (keyType index, tscType8 offset, tscType8 decal, tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the device specified in the key
    */
   void write (keyType index, tscType8 offset, tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the memory channel
    */
   void write (keyType index, 
               tscType8 AH, tscType8 AL, 
               tscType8 value)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Write a value into the memory channel
    */
   void write (keyType index, 
               tscType8 AH, tscType8 AL, 
               tscType8 *values, unsigned size)  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Read modify write a value from the memory specified by the key in single byte
    */
@@ -1104,7 +1104,7 @@ class FecAccess {
                tscType8 AH, tscType8 AL, 
                logicalOperationType op, 
                tscType8 mask )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /* ---------------------------------------------------------------------------------- */
   /* ---------------------------------------------------------------------------------- */
@@ -1129,7 +1129,7 @@ class FecAccess {
 
   /** \brief create a FEC access with parameter
    */  
-  static FecAccess *createFecAccess ( int argc, char **argv, int *cnt, bool init = true ) throw (FecExceptionHandler) ;
+  static FecAccess *createFecAccess ( int argc, char **argv, int *cnt, bool init = true ) noexcept(false) ;
 
 };
 #endif
diff --git a/FecSoftwareV3_0/generic/include/FecAccessManager.h b/FecSoftwareV3_0/generic/include/FecAccessManager.h
index dd54554..7b2c36e 100755
--- a/FecSoftwareV3_0/generic/include/FecAccessManager.h
+++ b/FecSoftwareV3_0/generic/include/FecAccessManager.h
@@ -347,11 +347,11 @@ class FecAccessManager {
 
   /** \brief set an access into an hash table
    */
-  virtual void setAccess ( deviceAccess *access ) throw (FecExceptionHandler) ;
+  virtual void setAccess ( deviceAccess *access ) noexcept(false) ;
 
   /** \brief download the values
    */
-  virtual unsigned int downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) throw (FecExceptionHandler) ;
+  virtual unsigned int downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) noexcept(false) ;
 
   /** \brief calibrate the DOH (find for a specific gain the bias values)
    */
@@ -359,7 +359,7 @@ class FecAccessManager {
 
   /** \brief download the values into the hardware through block of frames
    */
-  virtual unsigned int downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) throw (FecExceptionHandler) ;
+  virtual unsigned int downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset = false, bool dohSet = true) noexcept(false) ;
 
   /** \brief Download the values only for certain APV registers on all APVs
    */
@@ -426,11 +426,11 @@ class FecAccessManager {
 
   /** \brief reset all modules by using PIA channel
    */
-  unsigned int resetPiaModules ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) ;
+  unsigned int resetPiaModules ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) noexcept(false) ;
 
   /** \brief reset all modules by using PIA channel
    */
-  unsigned int resetPiaModulesMultipleFrames ( piaResetVector *vPiaReset,  std::list<FecExceptionHandler *> &errorList) throw (FecExceptionHandler) ;
+  unsigned int resetPiaModulesMultipleFrames ( piaResetVector *vPiaReset,  std::list<FecExceptionHandler *> &errorList) noexcept(false) ;
 
   /** \brief cold reset for PLL
    */
diff --git a/FecSoftwareV3_0/generic/include/FecDetectionUpload.h b/FecSoftwareV3_0/generic/include/FecDetectionUpload.h
index 97be72c..7aa587c 100755
--- a/FecSoftwareV3_0/generic/include/FecDetectionUpload.h
+++ b/FecSoftwareV3_0/generic/include/FecDetectionUpload.h
@@ -720,7 +720,7 @@ class FecDetectionUpload {
    */
   static void getCrateFecSupervisorInstance ( FecAccess &fecAccess, keyType fecInstance[MAX_NUMBER_OF_SLOTS], 
 					      std::string partitionName = "", std::ofstream *instanceStream = NULL )
-    throw (FecExceptionHandler) {
+    noexcept(false) {
 
     // Initialise the list of instance
     for (int i = 0 ; i < MAX_NUMBER_OF_SLOTS ; i ++) fecInstance[i] = NOFECRING ;
@@ -806,7 +806,7 @@ class FecDetectionUpload {
 				 keyType fecRingSlotStart = NOFECRING,
 				 keyType fecRingSlotStop = NOFECRING,
 				 unsigned int crateId = 1 ) 
-    throw (FecExceptionHandler) {
+    noexcept(false) {
 
     // Get the FEC list or get the index of the corresponding FEC
     std::list<keyType> *fecSlotList = NULL ;
diff --git a/FecSoftwareV3_0/generic/include/FecDeviceFactory.h b/FecSoftwareV3_0/generic/include/FecDeviceFactory.h
index 55ebb10..618d616 100755
--- a/FecSoftwareV3_0/generic/include/FecDeviceFactory.h
+++ b/FecSoftwareV3_0/generic/include/FecDeviceFactory.h
@@ -126,21 +126,21 @@ class FecDeviceFactory: public DeviceFactoryInterface {
    */
   void getFecDeviceDescriptions ( bool fileUsed, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajorId, unsigned int pMaskVersionMinorId, std::string partitionName, std::string fecHardwareId, deviceVector &outVector, bool allDevices = false, bool forceDbReload = false ) 
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #else
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief return the DCU descriptions values
    */
   void getDcuValuesDescriptions ( std::string partitionName, unsigned long dcuHardId, unsigned long timeStampStart, unsigned long timeStampStop, deviceVector &outVector )
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 
 #ifdef DATABASE
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   std::list<unsigned int *> getPartitionVersion ( std::string partitionName ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
  public:
@@ -154,7 +154,7 @@ class FecDeviceFactory: public DeviceFactoryInterface {
   /** \brief Buid a FEC factory for database
    */
   FecDeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Buid a FEC factory for FEC database
    */
@@ -162,7 +162,7 @@ class FecDeviceFactory: public DeviceFactoryInterface {
 
   /** \brief uploads the tkRing description to the datavase
     */
-  void setDbRingDescription ( std::string partitionName, TkRingDescription ringD )  throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+  void setDbRingDescription ( std::string partitionName, TkRingDescription ringD )  noexcept(false) ;
 
 #endif
 
@@ -212,12 +212,12 @@ class FecDeviceFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -232,17 +232,17 @@ class FecDeviceFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   void getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskVersionMajor, unsigned int *maskVersionMinor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief set version for the partition retreive from database with partition name
    */
   void setPartitionVersion ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Upload the description in the output and create new partition
    */
   void createPartition ( deviceVector devices, unsigned int *versionMajor = NULL, unsigned int *versionMinor = NULL, std::string partitionName="", bool createPartitionFlag = true )  
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 #endif
 
@@ -266,86 +266,86 @@ class FecDeviceFactory: public DeviceFactoryInterface {
    */ 
   void getFecDeviceDescriptions ( std::string partitionName, std::string fecHardwareId, deviceVector &outVector, unsigned int versionMajor = 0, unsigned int versionMinor = 0, bool allDevices = false, bool forceDbReload = false )
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #else
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for all devices from the input for a given partition
    */ 
     void getFecDeviceDescriptions ( std::string partitionName, deviceVector &outVector, unsigned int versionMajor = 0, unsigned int versionMinor = 0, unsigned int pMaskVersionMajorId = 0, unsigned int pMaskVersionMinorId = 0, bool allDevices = false, bool forceDbReload = false )
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #else
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for all devices from a file
    */
   void getFecDeviceDescriptions ( deviceVector &outVector, bool allDevices = false )
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #else
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Upload the description in the output
    */
   void setFecDeviceDescriptions ( deviceVector devices, std::string partitionName = "nil", unsigned int *versionMajor = NULL, unsigned int *versionMinor = NULL , bool majorVersion = false, bool uploadVersion = false ) 
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #else
-    throw (FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the DCU values for a given partition and timestamp
    */
   void getDcuValuesDescriptions ( std::string partitionName, deviceVector &outVector, unsigned long timeStampStart, unsigned long timeStampStop )   
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
    /** \brief Retreive the DCU values for a given timestamp
    */
   void getDcuValuesDescriptions ( deviceVector &outVector, unsigned long timeStampStart, unsigned long timeStampStop )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Retreive the descriptions for a given DCU hard id for a range of time
    */
   void getDcuValuesDescriptions ( unsigned long dcuHardId, deviceVector &outVector, unsigned long timeStampStart, unsigned long timeStampStop )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Upload the DCU descriptions to the output
    */
   void setDcuValuesDescriptions ( std::string partitionName, deviceVector dcuDevices, bool fileUpload = false ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   // ----------------------------- CCU descriptions
 
 #ifdef DATABASE
   /** \brief Retreive the tkRing description along with the corresponding CCU descriptions for a given partition name
    */
-  tkringVector getDbRingDescription ( std::string partitionName ) throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+  tkringVector getDbRingDescription ( std::string partitionName ) noexcept(false) ;
 
   /** \brief Retreive the tkRing description along with the corresponding CCU descriptions for a given partition name and given FEC hardware ID/ring
    */
-  TkRingDescription* getDbRingDescription ( std::string partitionName, std::string fecHardwareId, unsigned int ring ) throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+  TkRingDescription* getDbRingDescription ( std::string partitionName, std::string fecHardwareId, unsigned int ring ) noexcept(false) ;
 
   /** \brief Retreive the tkRing description along with the corresponding CCU descriptions for a given FEC hardware ID/ring from the construction database
    */
-  TkRingDescription* getDbRingDescription ( std::string fecHardwareId, unsigned int ring ) throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+  TkRingDescription* getDbRingDescription ( std::string fecHardwareId, unsigned int ring ) noexcept(false) ;
 #endif
 
   /** \brief Retreive the CCU descriptions from a file
    */
-  TkRingDescription* getFileRingDescription ( std::string fileName, std::string fecHardwareId, unsigned int ring ) throw ( FecExceptionHandler ) ;
+  TkRingDescription* getFileRingDescription ( std::string fileName, std::string fecHardwareId, unsigned int ring ) noexcept(false) ;
   
   /** \brief Retreive the CCU descriptions from a file
    */
-  tkringVector getFileRingDescription ( std::string fileName ) throw ( FecExceptionHandler ) ;
+  tkringVector getFileRingDescription ( std::string fileName ) noexcept(false) ;
   
   /** \brief Upload the tkring descriptions to a file
    */
   void setFileRingDescription ( std::string fileName, TkRingDescription ringD ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
   unsigned int getMinorVersion() { return versionMinor_;}
   unsigned int getMajorVersion() { return versionMajor_;}
 } ;
diff --git a/FecSoftwareV3_0/generic/include/FecExceptionHandler.h b/FecSoftwareV3_0/generic/include/FecExceptionHandler.h
index 0a2f841..33ba459 100755
--- a/FecSoftwareV3_0/generic/include/FecExceptionHandler.h
+++ b/FecSoftwareV3_0/generic/include/FecExceptionHandler.h
@@ -194,7 +194,7 @@ class FecExceptionHandler {
   /**
    * \brief Default constructor for inheritance
    */
-  FecExceptionHandler ( ) throw ( ):
+  FecExceptionHandler ( ) noexcept:
     errorCode_(0),
     errorMessage_("Not an error"),
     faultSeverity_(INFORMATIONCODE),
@@ -236,7 +236,7 @@ class FecExceptionHandler {
 			errorType faultSeverity,
 			std::string method,
 			std::string sourceFileName,
-			unsigned int line ) throw ( ) :
+			unsigned int line ) noexcept :
     errorCode_(errorCode),
     errorMessage_(errorMessage),
     faultSeverity_(faultSeverity),
@@ -285,7 +285,7 @@ class FecExceptionHandler {
 			FecRingRegisters *fecRingRegisters = NULL,
 			tscType8 *frame = NULL,
 			tscType8 *dAck = NULL,
-			tscType8 *fAck = NULL ) throw ( ):
+			tscType8 *fAck = NULL ) noexcept:
     
     errorCode_(errorCode),
     errorMessage_(errorMessage),
@@ -337,7 +337,7 @@ class FecExceptionHandler {
 
   /** Delete the register given
    */
-  virtual ~FecExceptionHandler ( ) throw ( ) { 
+  virtual ~FecExceptionHandler ( ) noexcept { 
 
     if (fecRingRegisters_ != NULL) {
       delete fecRingRegisters_ ;
@@ -458,7 +458,7 @@ class FecExceptionHandler {
   /**
    * Display the last error
    */
-  virtual void writeTo ( std::ostringstream flux ) throw ( ) {    
+  virtual void writeTo ( std::ostringstream flux ) noexcept {    
 
     flux << "------------------ FecExceptionHandler error ---------------" << std::endl ;
     flux << what ( ) << std::endl ;
@@ -476,7 +476,7 @@ class FecExceptionHandler {
    * <li>More information
    * </lu>
    */
-  virtual std::string what ( ) throw ( ) {
+  virtual std::string what ( ) noexcept {
 
     std::stringstream strMsg ;
     strMsg << "FecExceptionHandler: " << std::endl 
@@ -578,7 +578,7 @@ class FecExceptionHandler {
    * \brief Returned an xml buffer containing all the information for the error
    * \return string - message
    */
-  virtual std::string getXMLBuffer ( std::string fecHardwareId = "", unsigned int crateSlot = 0xFFFFFFFF ) throw ( ) {
+  virtual std::string getXMLBuffer ( std::string fecHardwareId = "", unsigned int crateSlot = 0xFFFFFFFF ) noexcept {
 
     std::ostringstream xmlBuffer ;
 
diff --git a/FecSoftwareV3_0/generic/include/FecFactory.h b/FecSoftwareV3_0/generic/include/FecFactory.h
index 3fc4ec6..2a4af64 100755
--- a/FecSoftwareV3_0/generic/include/FecFactory.h
+++ b/FecSoftwareV3_0/generic/include/FecFactory.h
@@ -62,7 +62,7 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
   /** \brief Buid a FEC factory for database
    */
   FecFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Disconnect the database (if it is set)
@@ -85,19 +85,19 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
 
   /** \brief set a new input file
    */
-  void setInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) ;
+  void setInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief set a new input file
    */
-  void setInputFileName ( std::string inputFileName, std::string fecHardwareId ) throw ( FecExceptionHandler ) ;
+  void setInputFileName ( std::string inputFileName, std::string fecHardwareId ) noexcept(false) ;
 
   /** \brief Add a new file name in the descriptions
    */
-  void addFileName ( std::string fileName ) throw (FecExceptionHandler) ;
+  void addFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief Add a new file name in the descriptions
    */
-  void addFileName ( std::string fileName, std::string fecHardwareId ) throw (FecExceptionHandler) ;
+  void addFileName ( std::string fileName, std::string fecHardwareId ) noexcept(false) ;
 
   /** \brief Use or not the file
    */
@@ -113,7 +113,7 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
 
   /** \brief Use or not the database access
    */
-  void setUsingDb ( bool useIt = true ) throw ( std::string ) ;
+  void setUsingDb ( bool useIt = true ) noexcept(false) ;
 
   /** \brief Check if the database is used
    */
@@ -126,12 +126,12 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
   /** \brief Set a database access
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set a database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief return the FEC database access
    */
@@ -139,7 +139,7 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
 
   /** \brief return the partition name
    */
-  std::string getPartitionName ( unsigned int partitionId )  throw (oracle::occi::SQLException) ;
+  std::string getPartitionName ( unsigned int partitionId )  noexcept(false) ;
 
 #endif
 
@@ -154,37 +154,37 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
   /** \brief retreive information concerning the partition versus the version for the FEC devices 
    */
   void getFecDevicePartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskMajor, unsigned int *maskMinor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief set version for the partition retreive from database with the couple 
    */
   void setFecDevicePartitionVersion ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Upload a device description vector and a PIA description vector in the output and create new partition
    */
   void createPartition ( deviceVector devices, piaResetVector piadevices, unsigned int *deviceMajor = NULL, unsigned int *deviceMinor = NULL, std::string partitionName="", bool createPartitionFlag = true ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief In order to give the FecFactory to call the method FecDeviceFactory::createPartition ( ... ) ;
    */
   void createPartition ( deviceVector devices, unsigned int *versionMajor = NULL, unsigned int *versionMinor = NULL, std::string partitionName="", bool createPartitionFlag = true ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief In order to give the FecFactory to call the method PiaResetFactory::createPartition ( ... ) ;
    */
-  void createPartition ( piaResetVector devices, std::string partitionName="" ) throw (FecExceptionHandler) ;
+  void createPartition ( piaResetVector devices, std::string partitionName="" ) noexcept(false) ;
 
 #endif
 
   /** \brief Upload in file or database a device description vector and a PIA description vector in the output
    */
   void setFecDevicePiaDescriptions ( deviceVector devices, piaResetVector piaDevices, std::string partitionName, unsigned int *deviceMajor = NULL, unsigned int *deviceMinor = NULL ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Upload in file or database a device description vector and a PIA description vector in the output
    */
-  void setFecDevicePiaDescriptions ( deviceVector devices, piaResetVector piaDevices ) throw (FecExceptionHandler) ;
+  void setFecDevicePiaDescriptions ( deviceVector devices, piaResetVector piaDevices ) noexcept(false) ;
 
   // ------------------------------------------------------------------------------------------------------
   // 
@@ -308,7 +308,7 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
  /** \brief display a vector of devices
   * \param vDevice - vector of deviceAccess
   */
- static void display ( deviceVector vDevice ) throw (FecExceptionHandler) {
+ static void display ( deviceVector vDevice ) noexcept(false) {
     
    if (!vDevice.empty()) {
 
@@ -324,7 +324,7 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
  /** \brief display a vector of devices
   * \param vDevice - vector of deviceAccess
   */
- static void display ( piaResetVector vDevice ) throw (FecExceptionHandler) {
+ static void display ( piaResetVector vDevice ) noexcept(false) {
     
    if (!vDevice.empty()) {
 
@@ -520,11 +520,11 @@ class FecFactory: public FecDeviceFactory, public PiaResetFactory {
 
  /** \brief this method write into a memory to serialise it
   */
- static void *writeTo ( std::vector<TkRingDescription *> &rings, unsigned int &sizeOfAllocation ) throw (FecExceptionHandler) ;
+ static void *writeTo ( std::vector<TkRingDescription *> &rings, unsigned int &sizeOfAllocation ) noexcept(false) ;
  
  /** \brief this method read from a memory (deserialisation)
   */
- static std::vector<TkRingDescription *> readFrom ( const void *memory ) throw (FecExceptionHandler) ;
+ static std::vector<TkRingDescription *> readFrom ( const void *memory ) noexcept(false) ;
 
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/FecInterfaceRingDevice.h b/FecSoftwareV3_0/generic/include/FecInterfaceRingDevice.h
index 0bd3083..f8b2c9d 100755
--- a/FecSoftwareV3_0/generic/include/FecInterfaceRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecInterfaceRingDevice.h
@@ -146,7 +146,7 @@ class FecInterfaceRingDevice {
    /** \brief Get the FEC version register 
    * \return value read
    */
-   virtual tscType16 getFecFirmwareVersion( ) throw ( FecExceptionHandler ) ;
+   virtual tscType16 getFecFirmwareVersion( ) noexcept(false) ;
 	
   /******************************************************
 	FIFO ACCESS - NATIVE 32 BITS FORMAT
@@ -201,14 +201,14 @@ class FecInterfaceRingDevice {
 
   /** \brief write a block of words to the FIFO receive
    */
-  virtual void setFifoReceive ( tscType32 *value, int count) throw (FecExceptionHandler) {
+  virtual void setFifoReceive ( tscType32 *value, int count) noexcept(false) {
     int i;
     for(i=0;i<count;i++) setFifoReceive(value[i]) ;
   };
 
   /** \brief get block of words from the FIFO receive
    */
-  virtual tscType32* getFifoReceive (  tscType32 *value, int count ) throw (FecExceptionHandler) {
+  virtual tscType32* getFifoReceive (  tscType32 *value, int count ) noexcept(false) {
     int i;
     for(i=0;i<count;i++) value[i] = getFifoReceive() ;
     return value ;
@@ -216,14 +216,14 @@ class FecInterfaceRingDevice {
   
   /** \brief set a word into the FIFO return
    */
-  virtual void setFifoReturn ( tscType8 *value, int count ) throw (FecExceptionHandler) {
+  virtual void setFifoReturn ( tscType8 *value, int count ) noexcept(false) {
      int i;
      for(i=0;i<count;i++) setFifoReturn(value[i]) ;
   } ;
   
   /** \brief get a word from the FIFO return
    */
-  virtual tscType8* getFifoReturn (  tscType8 *value,int count ) throw (FecExceptionHandler) {
+  virtual tscType8* getFifoReturn (  tscType8 *value,int count ) noexcept(false) {
     int i;
     for(i=0;i<count;i++) value[i]  = getFifoReturn() ;
     return value ;
@@ -231,14 +231,14 @@ class FecInterfaceRingDevice {
   
   /** \brief set a word into the FIFO Transmit
    */
-  virtual void setFifoTransmit ( tscType32 *value, int count ) throw (FecExceptionHandler) {
+  virtual void setFifoTransmit ( tscType32 *value, int count ) noexcept(false) {
     int i;
     for(i=0;i<count;i++) setFifoTransmit(value[i]) ;
   };
   
   /** \brief get a word from the FIFO transmit
    */
-  virtual tscType32* getFifoTransmit (  tscType32 *value,int count ) throw (FecExceptionHandler) {
+  virtual tscType32* getFifoTransmit (  tscType32 *value,int count ) noexcept(false) {
     int i;
     for(i=0;i<count;i++) value[i]  = getFifoTransmit() ;
     return value ;
diff --git a/FecSoftwareV3_0/generic/include/FecPciRingDevice.h b/FecSoftwareV3_0/generic/include/FecPciRingDevice.h
index 2926dfe..ebad82c 100755
--- a/FecSoftwareV3_0/generic/include/FecPciRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecPciRingDevice.h
@@ -60,11 +60,11 @@ class FecPciRingDevice: public FecRingDevice {
    * \param ringSlot - ring slot on the corresponding FEC
    * \param init - initialise or not the FEC ring
    */
-  FecPciRingDevice ( tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) throw ( FecExceptionHandler ) ;
+  FecPciRingDevice ( tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) noexcept(false) ;
 
  /** \brief Close the device driver
   */
-  virtual ~FecPciRingDevice ( ) throw ( FecExceptionHandler ) ;
+  virtual ~FecPciRingDevice ( ) noexcept(false) ;
 
 
   /******************************************************
@@ -73,36 +73,36 @@ class FecPciRingDevice: public FecRingDevice {
 
   /** \brief Set the control register 0  the FEC
    */ 
-  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false )  throw ( FecExceptionHandler ) ;
+  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false )  noexcept(false) ;
 
   /** \brief Get the control register 0  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR0( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingCR0( ) noexcept(false) ;
 
   /** \brief Set the control register 1  the FEC
    * \param ctrl1Value - value to be set
    */ 
-  void setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) ;
+  void setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) ;
 
   /** \brief Get the control register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR1( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingCR1( ) noexcept(false) ;
 
   /** \brief Get the status register 0  the FEC
    * \return value read
    */
-  tscType32 getFecRingSR0( ) throw ( FecExceptionHandler ) ;
+  tscType32 getFecRingSR0( ) noexcept(false) ;
 
   /** \brief Get the status register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingSR1( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingSR1( ) noexcept(false) ;
 	
   /** \brief return the firmware version of the FEC
    */
-  tscType16 getFecFirmwareVersion( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecFirmwareVersion( ) noexcept(false) ;
 
   /******************************************************
 	FIFO ACCESS - NATIVE 32 BITS FORMAT
@@ -111,30 +111,30 @@ class FecPciRingDevice: public FecRingDevice {
 
   /** \brief return a word from the FIFO receive
    */
-  tscType32 getFifoReceive( ) throw ( FecExceptionHandler ) ;
+  tscType32 getFifoReceive( ) noexcept(false) ;
 	
   /** \brief write a word in the FIFO receive
    * \param value - value to be written
    */
-  void setFifoReceive( tscType32 value ) throw ( FecExceptionHandler ) ;
+  void setFifoReceive( tscType32 value ) noexcept(false) ;
   
   /** \brief return a word from the FIFO return
    */
-  tscType8 getFifoReturn( )  throw ( FecExceptionHandler ) ;
+  tscType8 getFifoReturn( )  noexcept(false) ;
 
   /** \brief write a word in the FIFO return
    * \param value - value to be written
    */
-  void setFifoReturn( tscType8 value )  throw ( FecExceptionHandler ) ;
+  void setFifoReturn( tscType8 value )  noexcept(false) ;
   
   /** \brief return a word from the FIFO transmit
    */
-  tscType32 getFifoTransmit( )  throw ( FecExceptionHandler ) ;
+  tscType32 getFifoTransmit( )  noexcept(false) ;
 
   /** \brief write a word in the FIFO transmit
    * \param value - value to be written
    */
-  void setFifoTransmit( tscType32 value )  throw ( FecExceptionHandler ) ;
+  void setFifoTransmit( tscType32 value )  noexcept(false) ;
 
 
    /******************************************************
@@ -143,7 +143,7 @@ class FecPciRingDevice: public FecRingDevice {
 
   /** \brief issue a PLX reset
    */
-  void fecHardReset ( )  throw ( FecExceptionHandler ) ;
+  void fecHardReset ( )  noexcept(false) ;
 
   /******************************************************
 		IRQ enable / disable
@@ -151,7 +151,7 @@ class FecPciRingDevice: public FecRingDevice {
 
   /** \brief Enable or disable the PLX irq (level is not used)
    */
-  void setIRQ ( bool enable, tscType8 level=1 ) throw ( FecExceptionHandler ) ;
+  void setIRQ ( bool enable, tscType8 level=1 ) noexcept(false) ;
 } ;
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/FecRingDevice.h b/FecSoftwareV3_0/generic/include/FecRingDevice.h
index d79b0c1..048e1c4 100755
--- a/FecSoftwareV3_0/generic/include/FecRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecRingDevice.h
@@ -156,15 +156,15 @@ class FecRingDevice {
 
   /** \brief Method for basic check
    */
-  void basicCheckError ( keyType index ) throw (FecExceptionHandler) ;
+  void basicCheckError ( keyType index ) noexcept(false) ;
 
   /** \brief connect and initialise a CCU
    */
-  bool connectCCU ( keyType index ) throw (FecExceptionHandler) ;
+  bool connectCCU ( keyType index ) noexcept(false) ;
 
   /** \brief reconfiguration if the ring after a reset 
    */
-  void ccuChannelReConfiguration ( ) throw (FecExceptionHandler) ;
+  void ccuChannelReConfiguration ( ) noexcept(false) ;
 
   /** \brief write bytes into the memory but used two bytes for the length
    * \see writeIntoMemory
@@ -172,7 +172,7 @@ class FecRingDevice {
   void writeIntoMemory2BytesLength ( keyType index, 
                                      tscType8 AH, tscType8 AL, 
                                      tscType8 *values,
-                                     unsigned long size ) throw (FecExceptionHandler) ;
+                                     unsigned long size ) noexcept(false) ;
 
   /** To know if a transaction number is used or not
    */
@@ -220,7 +220,7 @@ class FecRingDevice {
 
   /** \brief Check the FEC and initialise it
    */
-  void setInitFecRingDevice ( bool init, bool invertClockPolarity = false ) throw (FecExceptionHandler) ;
+  void setInitFecRingDevice ( bool init, bool invertClockPolarity = false ) noexcept(false) ;
   
   // ----------------------------------------------- Software methods
 
@@ -341,74 +341,74 @@ class FecRingDevice {
 
   /** \brief Write a frame
    */
-  virtual void writeFrame ( tscType8 *frame, bool ignoreDirectAck = false ) throw (FecExceptionHandler) ;
+  virtual void writeFrame ( tscType8 *frame, bool ignoreDirectAck = false ) noexcept(false) ;
 
   /** \brief Write a frame with nanosleep delay (use for the broadcast operation on the ring)
    */
-  virtual void writeFrameDelayed ( tscType8 *frame, bool ignoreDirectAck ) throw (FecExceptionHandler) ;
+  virtual void writeFrameDelayed ( tscType8 *frame, bool ignoreDirectAck ) noexcept(false) ;
 
   /** \brief read a frame
    */
   virtual void readFrame ( tscType8 transaction, tscType8 *frame, tscType8 expectedSize = 0 )
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // ----------------------------------------------- FEC methods
 
   /** \brief set the input of the FEC
    */
-  void setFecInputB ( bool inputB ) throw (FecExceptionHandler) ;
+  void setFecInputB ( bool inputB ) noexcept(false) ;
 
   /** \brief set the output of the FEC
    */
-  void setFecOutputB ( bool outputB ) throw (FecExceptionHandler) ;
+  void setFecOutputB ( bool outputB ) noexcept(false) ;
 
   /** \brief invert the clock polarity
    */
-  void setInvertClockPolarity ( bool invertPolarity ) throw (FecExceptionHandler) ;
+  void setInvertClockPolarity ( bool invertPolarity ) noexcept(false) ;
 
   /** \brief use the internal clock
    */
-  void setInternalClock ( bool internal ) throw (FecExceptionHandler) ;
+  void setInternalClock ( bool internal ) noexcept(false) ;
 
   /** \brief Set FEC control register 0 by read modify operation
    */
-  void setFecRingCR0 ( tscType16 mask, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setFecRingCR0 ( tscType16 mask, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Reset the FEC FSM
    */
-  void fecRingResetFSM ( ) throw (FecExceptionHandler) ;
+  void fecRingResetFSM ( ) noexcept(false) ;
 
   /** \brief Reset the FEC
    */
-  void fecRingReset ( ) throw (FecExceptionHandler) ;
+  void fecRingReset ( ) noexcept(false) ;
 
   /** \brief Reset the FEC
    */
-  void fecRingResetB ( ) throw (FecExceptionHandler) ;
+  void fecRingResetB ( ) noexcept(false) ;
 
   /** \brief this method must be issued after a hard reset
    */
-  void initAfterHardReset ( ) throw (FecExceptionHandler) ;
+  void initAfterHardReset ( ) noexcept(false) ;
 
   /** \brief Check and try to recover the ring (without reconfiguration)
    */
-  void checkRing ( ) throw (FecExceptionHandler) ;
+  void checkRing ( ) noexcept(false) ;
 
   /** \brief Regenerate a token on the CCU ring
    */
-  void fecRingRelease ( ) throw (FecExceptionHandler) ;
+  void fecRingRelease ( ) noexcept(false) ;
 
   /** \brief empty the FIFO receive
    */
-  virtual void emptyFifoReceive ( ) throw (FecExceptionHandler) ;
+  virtual void emptyFifoReceive ( ) noexcept(false) ;
 
   /** \brief empty the FIFO return
    */
-  virtual void emptyFifoReturn ( ) throw (FecExceptionHandler) ;
+  virtual void emptyFifoReturn ( ) noexcept(false) ;
 
   /** \brief empty the FIFO transmit
    */
-  virtual void emptyFifoTransmit ( ) throw (FecExceptionHandler) ;
+  virtual void emptyFifoTransmit ( ) noexcept(false) ;
 
   /** \brief check the FIFO receive, mainly used in the write frame in case of bad status
    */
@@ -416,107 +416,107 @@ class FecRingDevice {
 
   /** \brief Invert the clock polarity
    */
-  void setInvertClockPolarity ( ) throw (FecExceptionHandler) ;
+  void setInvertClockPolarity ( ) noexcept(false) ;
 
   // ------------------------ For the CCU ring scanned
 
   /** \brief This method scan the rings connected to the FEC and check if the order of the CCU
    */
-  void fecScanRingBroadcast ( ) throw (FecExceptionHandler) ;
+  void fecScanRingBroadcast ( ) noexcept(false) ;
 
   /** \brief This method scan the rings connected to the FEC and check if the order of the CCU
    */
-  void fecScanRingNoBroadcast ( ) throw (FecExceptionHandler) ;
+  void fecScanRingNoBroadcast ( ) noexcept(false) ;
 
   // ------------------------ For the ring reconfiguration
 
   /** \brief this method reconfigure the ring of the CCU because of a problem on it
    */
-  tscType16 fecRingReconfigure ( ) throw (FecExceptionHandler) ;
+  tscType16 fecRingReconfigure ( ) noexcept(false) ;
 
   /** \brief this method reconfigure the ring of the CCU because of a problem on it
    */
-  tscType16 fecRingReconfigure ( TkRingDescription &tkRing ) throw (FecExceptionHandler) ;
+  tscType16 fecRingReconfigure ( TkRingDescription &tkRing ) noexcept(false) ;
 
   // --------------------------- For the CCU registers
 
   /** \brief Get the CCU type (CCU 25 or old CCU)
    */
   bool getCcuType ( keyType index,
-                    tscType32 *CRE ) throw (FecExceptionHandler) ;
+                    tscType32 *CRE ) noexcept(false) ;
 
   /** \brief Get the CCU type (CCU 25 or old CCU)
    */
-  bool getCcuType ( keyType index ) throw (FecExceptionHandler) ;
+  bool getCcuType ( keyType index ) noexcept(false) ;
 
   /** \brief Set a CCU register
    */
   void setCcuRegister ( keyType index, 
                         tscType8 ccuRegister, 
-                        tscType8 value ) throw (FecExceptionHandler) ;
+                        tscType8 value ) noexcept(false) ;
 
   /** \brief Get a CCU register
    */
   tscType32 getCcuRegister ( keyType index, 
-                             tscType8 ccuRegister ) throw (FecExceptionHandler) ;
+                             tscType8 ccuRegister ) noexcept(false) ;
 
   /** \brief Set a CCU register (read-modify-write operation)
    */
   void setCcuRegister ( keyType index, 
                         tscType8 ccuRegister, 
                         tscType8 value,
-                        logicalOperationType op ) throw (FecExceptionHandler) ;
+                        logicalOperationType op ) noexcept(false) ;
 
   /** \brief Set CCU control register A
    */
-  void setCcuCRA ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setCcuCRA ( keyType index, tscType8 value ) noexcept(false) ;
 
   // setting CRA with ReadModifyWrite is useless as the CRA's bits are ever toggled to 0x0
   // void setCcuCRA ( keyType index, tscType8 value, logicalOperationType op ) ;
 
   /** \brief Get CCU control register A
    */
-  tscType8 getCcuCRA ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getCcuCRA ( keyType index ) noexcept(false) ;
 
   /** \brief Set CCU control register B
    */
-  void setCcuCRB ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setCcuCRB ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set CCU control register B (read-modify-write operation)
    */
-  void setCcuCRB ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setCcuCRB ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get CCU control register B
    */
-  tscType8  getCcuCRB ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuCRB ( keyType index ) noexcept(false) ;
 
   /** \brief Set CCU control register C
    */
-  void setCcuCRC ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setCcuCRC ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set CCU control register C (read-modify-write operation)
    */
-  void setCcuCRC ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setCcuCRC ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get CCU control register C
    */
-  tscType8  getCcuCRC ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuCRC ( keyType index ) noexcept(false) ;
 
   /** \brief Set CCU control register D
    */
-  void setCcuCRD ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setCcuCRD ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set CCU control register D (read-modify-write operation)
    */
-  void setCcuCRD ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setCcuCRD ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get CCU control register D
    */
-  tscType8  getCcuCRD ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuCRD ( keyType index ) noexcept(false) ;
 
   /** \brief Set CCU control register E
    */
-  void setCcuCRE ( keyType index, tscType24 value ) throw (FecExceptionHandler) ;
+  void setCcuCRE ( keyType index, tscType24 value ) noexcept(false) ;
 
   /** \brief Set CCU control register E
    */
@@ -525,51 +525,51 @@ class FecRingDevice {
                    tscType8 valuePIA,
                    tscType8 valueMemory,
                    tscType8 valueTrigger,
-                   tscType8 valueJTAG) throw (FecExceptionHandler) ;
+                   tscType8 valueJTAG) noexcept(false) ;
 
   /** \brief Set CCU control register E (read-modify-write operation)
    */
-  void setCcuCRE ( keyType index, tscType24 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setCcuCRE ( keyType index, tscType24 value, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get CCU control register E
    */
-  tscType24 getCcuCRE ( keyType index ) throw (FecExceptionHandler) ;
+  tscType24 getCcuCRE ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register A
    */
-  tscType8  getCcuSRA ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuSRA ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register B
    */
-  tscType8  getCcuSRB ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuSRB ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register C
    */
-  tscType8  getCcuSRC ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuSRC ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register D
    */
-  tscType8  getCcuSRD ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8  getCcuSRD ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register E
    */
-  tscType24 getCcuSRE ( keyType index ) throw (FecExceptionHandler) ;
+  tscType24 getCcuSRE ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register F
    */
-  tscType16 getCcuSRF ( keyType index ) throw (FecExceptionHandler) ;
+  tscType16 getCcuSRF ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register G
    */
-  tscType8 getCcuSRG ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getCcuSRG ( keyType index ) noexcept(false) ;
 
   /** \brief Get CCU status register H
    */
-  tscType8 getCcuSRH ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getCcuSRH ( keyType index ) noexcept(false) ;
 
   /** \brief this method return a list of CCUs scanned
    */
-  std::list<keyType> *getCcuList ( bool noBroadcast = false, bool scan = true ) throw (FecExceptionHandler) ;
+  std::list<keyType> *getCcuList ( bool noBroadcast = false, bool scan = true ) noexcept(false) ;
 
   /** \brief read all the registers (status and control) from FEC and CCUs
    */
@@ -579,149 +579,149 @@ class FecRingDevice {
 
   /** \brief Enable or disable CCU alarms and PIA channel interrupts
    */
-  void setCcuAlarmsEnable ( keyType index, bool enable1, bool enable2, bool enable3, bool enable4 ) throw (FecExceptionHandler) ;
+  void setCcuAlarmsEnable ( keyType index, bool enable1, bool enable2, bool enable3, bool enable4 ) noexcept(false) ;
 
   /** \brief Wait for any CCU alarms
    */ 
-  void waitForAnyCcuAlarms ( keyType index, tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) throw (FecExceptionHandler) ;
+  void waitForAnyCcuAlarms ( keyType index, tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) noexcept(false) ;
 
   /** \brief Wait for any CCU alarms
    */ 
-  void waitForAnyCcuAlarms ( tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) throw (FecExceptionHandler) ;
+  void waitForAnyCcuAlarms ( tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) noexcept(false) ;
 
   /** \brief Enable the PIA interrupts
    */
-  void setPiaInterruptEnable ( keyType index ) throw (FecExceptionHandler) ;
+  void setPiaInterruptEnable ( keyType index ) noexcept(false) ;
 
   /** \brief Clear the interrupt on PIA channels
    */
-  void setPiaClearInterrupts ( keyType index ) throw (FecExceptionHandler) ;
+  void setPiaClearInterrupts ( keyType index ) noexcept(false) ;
 
   // -------------------------------- Channel methods
 
   /** \brief Enable the channel corresponding to the key
    */
-  void setChannelEnable   ( keyType index, bool enable ) throw (FecExceptionHandler) ;
+  void setChannelEnable   ( keyType index, bool enable ) noexcept(false) ;
 
   /** \brief Get a channel register
    */
   tscType8 getChannelRegister ( keyType index, 
-                                          tscType8 channelRegister ) throw (FecExceptionHandler) ;
+                                          tscType8 channelRegister ) noexcept(false) ;
   
   /** \brief Set a channel register
    */
   void setChannelRegister ( keyType index, 
                             tscType8 channelRegister, 
-                            tscType8 value ) throw (FecExceptionHandler) ;
+                            tscType8 value ) noexcept(false) ;
 
   /** \brief Set a channel register (read-modify-write operation)
    */
   void setChannelRegister ( keyType index, 
                             tscType8 channelRegister, 
                             tscType8 value,
-                            logicalOperationType op ) throw (FecExceptionHandler) ;
+                            logicalOperationType op ) noexcept(false) ;
 
   // -------------------------- For the PIA channel registers
 
   /** \brief Initialisethe PIA channel general control register
    */
-  void setInitPiaChannel ( keyType index ) throw (FecExceptionHandler) ;
+  void setInitPiaChannel ( keyType index ) noexcept(false) ;
 
   /** \brief Set the PIA channel general control register
    */
-  void setPiaChannelGCR ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setPiaChannelGCR ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set the PIA channel general control register (read-modify-write operation)
    */
-  void setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get the PIA channel general control register
    */
-  tscType8 getPiaChannelGCR ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getPiaChannelGCR ( keyType index ) noexcept(false) ;
 
   /** \brief Get the PIA channel status register
    */
-  tscType8 getPiaChannelStatus ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getPiaChannelStatus ( keyType index ) noexcept(false) ;
 
   /** \brief Set the PIA channel data direction register
    */
-  void setPiaChannelDDR ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setPiaChannelDDR ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set the PIA channel data direction register (read-modify-write operation)
    */
-  void setPiaChannelDDR ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) ;
+  void setPiaChannelDDR ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) ;
 
   /* \brief Get the PIA channel data direction register 
    */
-  tscType8 getPiaChannelDDR ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getPiaChannelDDR ( keyType index ) noexcept(false) ;
 
   /** \brief Set the PIA channel data register
    */
-  void setPiaChannelDataReg ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setPiaChannelDataReg ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set the PIA channel data register (read-modify-write operation)
    */
   void setPiaChannelDataReg ( keyType index, 
                               tscType8 value, 
-                              logicalOperationType op ) throw (FecExceptionHandler) ;
+                              logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get the PIA channel data register
    */
-  tscType8 getPiaChannelDataReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getPiaChannelDataReg ( keyType index ) noexcept(false) ;
 
   /** \brief Reset a PIA channel
    */
-  void piaChannelReset ( keyType index ) throw (FecExceptionHandler) ;
+  void piaChannelReset ( keyType index ) noexcept(false) ;
 
   // -------------------------- For the i2c channel registers
 
   /** \brief Initialise the channel control register A and the force ack bit
    */
-  void setInitI2cChannelCRA ( keyType index, bool forceAck=false, tscType16 i2cSpeed=0 ) throw (FecExceptionHandler) ;
+  void setInitI2cChannelCRA ( keyType index, bool forceAck=false, tscType16 i2cSpeed=0 ) noexcept(false) ;
 
   /** \brief Set the i2c channel control register A
    */
-  void seti2cChannelCRA ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void seti2cChannelCRA ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Set the i2c channel control register A
    */
-  void seti2cChannelCRA ( keyType index, tscType8 value,logicalOperationType op ) throw (FecExceptionHandler) ;
+  void seti2cChannelCRA ( keyType index, tscType8 value,logicalOperationType op ) noexcept(false) ;
 
   /** \brief Get the i2c channel control register A
    */
-  tscType8 geti2cChannelCRA ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 geti2cChannelCRA ( keyType index ) noexcept(false) ;
 
   /** \brief Get the i2c channel status register A
    */
-  tscType8 geti2cChannelSRA ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 geti2cChannelSRA ( keyType index ) noexcept(false) ;
 
   /** \brief Get the i2c channel status register B
    */
-  tscType8 geti2cChannelSRB ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 geti2cChannelSRB ( keyType index ) noexcept(false) ;
 
   /** \brief Get the i2c channel status register C
    */
-  tscType8 geti2cChannelSRC ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 geti2cChannelSRC ( keyType index ) noexcept(false) ;
 
   /** \brief Get the i2c channel status register D
    */
-  tscType8 geti2cChannelSRD ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 geti2cChannelSRD ( keyType index ) noexcept(false) ;
   
   /** \brief Reset an I2C channel
    */
-  void i2cChannelReset  ( keyType index ) throw (FecExceptionHandler) ;
+  void i2cChannelReset  ( keyType index ) noexcept(false) ;
 
   /** \brief Reset an I2C channel and reconfigure the previous state
    */
-  void i2cChannelReset  ( keyType index, bool reconf ) throw (FecExceptionHandler) ;
+  void i2cChannelReset  ( keyType index, bool reconf ) noexcept(false) ;
 
   /** \brief test if an i2c channel is enable or not 
    */
-  bool isChannelEnabled ( keyType index ) throw (FecExceptionHandler) ;
+  bool isChannelEnabled ( keyType index ) noexcept(false) ;
 
   /** \brief test if an i2c channel is busy or not 
    */
-  bool isChannelBusy ( keyType index ) throw (FecExceptionHandler) ;
+  bool isChannelBusy ( keyType index ) noexcept(false) ;
 
   /** \brief scan the ring for i2c devices
    */
@@ -729,180 +729,180 @@ class FecRingDevice {
                                         tscType32 sizeDevices,
 					bool noBroadcast = false,
 					bool display = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief scan the ring for i2c devices
    */
   std::list<keyType> *scanRingForI2CDevice ( bool noBroadcast = false, bool display = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   // --------------------- I2C channels
 
   /** \brief Force the acknowledge bit for this i2c channel
    */
-  void setChannelForceAck ( keyType index, bool fack ) throw (FecExceptionHandler) ;
+  void setChannelForceAck ( keyType index, bool fack ) noexcept(false) ;
 
   /** \brief Write a value to a device connected onto a I2C CCU channel
    */
-  void writei2cDevice ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void writei2cDevice ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief Write a value to a device connected onto a I2C CCU channel
    */
-  void writei2cDevice ( keyType index, tscType8 offset, tscType8 value ) throw (FecExceptionHandler) ;
+  void writei2cDevice ( keyType index, tscType8 offset, tscType8 value ) noexcept(false) ;
 
   /** \brief Write a value to a device connected onto a I2C CCU channel
    */
-  void writei2cRalDevice ( keyType index, tscType8 offset, tscType8 value ) throw (FecExceptionHandler) ;
+  void writei2cRalDevice ( keyType index, tscType8 offset, tscType8 value ) noexcept(false) ;
 
   /** \brief Write a value to a device connected onto a I2C CCU channel
    */
   void writei2cDeviceOffset ( keyType index, 
                               tscType8 offset, 
-                              tscType8 value ) throw (FecExceptionHandler) ;
+                              tscType8 value ) noexcept(false) ;
 
   /** \brief Write a value to a device connected onto a I2C CCU channel
    */
   void writei2cDeviceOffset ( keyType index, 
                               tscType8 offset, 
                               tscType8 decal, 
-                              tscType8 value ) throw (FecExceptionHandler) ;
+                              tscType8 value ) noexcept(false) ;
 
   /** \brief Read a value from a device connected onto a I2C CCU channel
    */
-  tscType8 readi2cDevice ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 readi2cDevice ( keyType index ) noexcept(false) ;
 
   /** \brief Read a value from a device connected onto a I2C CCU channel
    */
-  tscType8 readi2cDevice ( keyType index, tscType8 addressMSB ) throw (FecExceptionHandler) ;
+  tscType8 readi2cDevice ( keyType index, tscType8 addressMSB ) noexcept(false) ;
 
   /** \brief Read a value from a device connected onto a I2C CCU channel
    */
-  tscType8 readi2cRalDevice ( keyType index, tscType8 offset ) throw (FecExceptionHandler) ;
+  tscType8 readi2cRalDevice ( keyType index, tscType8 offset ) noexcept(false) ;
 
   /** \brief Read a value from a device connected onto a I2C CCU channel
    */
-  tscType8 readi2cDeviceOffset ( keyType index, tscType8 offset ) throw (FecExceptionHandler) ;
+  tscType8 readi2cDeviceOffset ( keyType index, tscType8 offset ) noexcept(false) ;
 
   /** \brief Read a value from a device connected onto a I2C CCU channel
    */
   tscType8 readi2cDeviceOffset ( keyType index, 
                                            tscType8 offset, 
-                                           tscType8 decal ) throw (FecExceptionHandler) ;
+                                           tscType8 decal ) noexcept(false) ;
 
   // --------------------------- For the memory channel
 
   /** \brief reset the memory channel
    */
-  void memoryChannelReset( keyType index ) throw (FecExceptionHandler) ;
+  void memoryChannelReset( keyType index ) noexcept(false) ;
 
   /** \brief set the memory control register A
    */
-  void setMemoryChannelCRA ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelCRA ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief set the memory control register A (read-modify-write operation)
    */
-  void setMemoryChannelCRA ( keyType index, tscType8 value, logicalOperationType op  ) throw (FecExceptionHandler) ;
+  void setMemoryChannelCRA ( keyType index, tscType8 value, logicalOperationType op  ) noexcept(false) ;
 
   /** \brief set a memory channel WIN?? register
    */
   void setMemoryChannelWinReg ( keyType index, 
                                 tscType8 memoryRegister, 
-                                tscType16 value ) throw (FecExceptionHandler) ;
+                                tscType16 value ) noexcept(false) ;
 
   /** \brief set the memory WIN1L register
    */
-  void setMemoryChannelWin1LReg ( keyType index, tscType16 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelWin1LReg ( keyType index, tscType16 value ) noexcept(false) ;
 
   /** \brief set the memory WIN1H register
    */
-  void setMemoryChannelWin1HReg ( keyType index, tscType16 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelWin1HReg ( keyType index, tscType16 value ) noexcept(false) ;
 
   /** \brief set the memory WIN2L register
    */
-  void setMemoryChannelWin2LReg ( keyType index, tscType16 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelWin2LReg ( keyType index, tscType16 value ) noexcept(false) ;
 
   /** \brief set the memory WIN2H register
    */
-  void setMemoryChannelWin2HReg ( keyType index, tscType16 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelWin2HReg ( keyType index, tscType16 value ) noexcept(false) ;
   
   /** \brief set the memory mask register
    */
-  void setMemoryChannelMaskReg ( keyType index, tscType8 value ) throw (FecExceptionHandler) ;
+  void setMemoryChannelMaskReg ( keyType index, tscType8 value ) noexcept(false) ;
 
   /** \brief get the memory channel control register A
    */
-  tscType8 getMemoryChannelCRA ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getMemoryChannelCRA ( keyType index ) noexcept(false) ;
   
   /** \brief get the memory channel mask register
    */
-  tscType8 getMemoryChannelMaskReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getMemoryChannelMaskReg ( keyType index ) noexcept(false) ;
 
   /** \brief get a memory channel WIN?? register
    */
   tscType16 getMemoryChannelWinReg ( keyType index,
-                                     tscType8 memoryRegister ) throw (FecExceptionHandler) ;
+                                     tscType8 memoryRegister ) noexcept(false) ;
 
   /** \brief get the memory channel WIN1L register
    */
-  tscType16 getMemoryChannelWin1LReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType16 getMemoryChannelWin1LReg ( keyType index ) noexcept(false) ;
 
   /** \brief get the memory channel WIN1H register
    */
-  tscType16 getMemoryChannelWin1HReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType16 getMemoryChannelWin1HReg ( keyType index ) noexcept(false) ;
 
   /** \brief get the memory channel WIN2L register
    */
-  tscType16 getMemoryChannelWin2LReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType16 getMemoryChannelWin2LReg ( keyType index ) noexcept(false) ;
 
   /** \brief get the memory channel WIN1L register
    */
-  tscType16 getMemoryChannelWin2HReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType16 getMemoryChannelWin2HReg ( keyType index ) noexcept(false) ;
 
   /** \brief get the memory channel mask register
    */
-  tscType8 getMemoryChanneMaskReg ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getMemoryChanneMaskReg ( keyType index ) noexcept(false) ;
 
   /** \brief get the memory channel status register
    */
-  tscType8 getMemoryChannelStatus ( keyType index ) throw (FecExceptionHandler) ;
+  tscType8 getMemoryChannelStatus ( keyType index ) noexcept(false) ;
 
   /** \brief write a byte into the memory
    */
   void writeIntoMemory ( keyType index, 
                          tscType8 AH, tscType8 AL, 
-                         tscType8 value ) throw (FecExceptionHandler) ;
+                         tscType8 value ) noexcept(false) ;
 
   /** \brief write bytes into the memory
    */
   void writeIntoMemory ( keyType index, 
                          tscType8 AH, tscType8 AL, 
                          tscType8 *values,
-                         unsigned long size ) throw (FecExceptionHandler) ;
+                         unsigned long size ) noexcept(false) ;
 
   /** \brief read modify write on one byte into the memory
    */
   void writeIntoMemory ( keyType index, 
                          tscType8 AH, tscType8 AL,
                          logicalOperationType op, 
-                         tscType8 mask ) throw (FecExceptionHandler) ;
+                         tscType8 mask ) noexcept(false) ;
 
   /** \brief read modify write on one byte into the memory
    */
   void writeIntoMemory ( keyType index, 
                          tscType8 AH, tscType8 AL,
-                         logicalOperationType op ) throw (FecExceptionHandler) ; 
+                         logicalOperationType op ) noexcept(false) ; 
 
   /** \brief read a byte into the memory
    */
   tscType8 readFromMemory ( keyType index, 
-                            tscType8 AH, tscType8 AL ) throw (FecExceptionHandler) ;
+                            tscType8 AH, tscType8 AL ) noexcept(false) ;
 
   /** \brief read a byte into the memory
    */
   void readFromMemory ( keyType index, 
                         tscType8 AH, tscType8 AL,
                         unsigned long size,
-                        tscType8 *values ) throw (FecExceptionHandler) ;
+                        tscType8 *values ) noexcept(false) ;
 
   // -------------------------- For the trigger channel registers
   
@@ -930,17 +930,17 @@ class FecRingDevice {
   /** \brief Retreive the trigger counter
    */
   tscType32 getTriggerChannelCounter ( keyType index, 
-                                       int cnt ) throw (FecExceptionHandler);
+                                       int cnt ) noexcept(false);
 
   // --------------------------- For the FEC functionnalites
 
   /** \brief enable or disable receive for FEC optical link
    */
-  void setCR0Receive ( bool enable ) throw (FecExceptionHandler) ;
+  void setCR0Receive ( bool enable ) noexcept(false) ;
 
   /** \brief initialise the TTCRx
    */
-  void initTTCRx ( ) throw (FecExceptionHandler) ;
+  void initTTCRx ( ) noexcept(false) ;
 
   // -------------------------- Virtual methods, must be implemented by the child class (ie. FecVmeRingDevice, FecPciRingDevice, FecUsbRingDevice)
   
@@ -981,7 +981,7 @@ class FecRingDevice {
    /** \brief Get the FEC version register 
    * \return value read
    */
-   virtual tscType16 getFecFirmwareVersion( ) throw ( FecExceptionHandler ) = 0 ;
+   virtual tscType16 getFecFirmwareVersion( ) noexcept(false) = 0 ;
 	
   /******************************************************
 	FIFO ACCESS - NATIVE 32 BITS FORMAT
@@ -1030,27 +1030,27 @@ class FecRingDevice {
 
   /** \brief write a block of words to the FIFO receive
    */
-  virtual void setFifoReceive ( tscType32 *value, int count) throw (FecExceptionHandler) ;
+  virtual void setFifoReceive ( tscType32 *value, int count) noexcept(false) ;
 
   /** \brief get block of words from the FIFO receive
    */
-  virtual tscType32* getFifoReceive (  tscType32 *value, int count ) throw (FecExceptionHandler) ;
+  virtual tscType32* getFifoReceive (  tscType32 *value, int count ) noexcept(false) ;
   
   /** \brief set a word into the FIFO return
    */
-  virtual void setFifoReturn ( tscType8 *value, int count ) throw (FecExceptionHandler) ;
+  virtual void setFifoReturn ( tscType8 *value, int count ) noexcept(false) ;
   
   /** \brief get a word from the FIFO return
    */
-  virtual tscType8* getFifoReturn ( tscType8 *value,int count ) throw (FecExceptionHandler) ;
+  virtual tscType8* getFifoReturn ( tscType8 *value,int count ) noexcept(false) ;
  
   /** \brief set a word into the FIFO Transmit
    */
-  virtual void setFifoTransmit ( tscType32 *value, int count ) throw (FecExceptionHandler) ;
+  virtual void setFifoTransmit ( tscType32 *value, int count ) noexcept(false) ;
   
   /** \brief get a word from the FIFO transmit
    */
-  virtual tscType32* getFifoTransmit (  tscType32 *value,int count ) throw (FecExceptionHandler) ;
+  virtual tscType32* getFifoTransmit (  tscType32 *value,int count ) noexcept(false) ;
 
   /*****************************************
   Methods for block of frames
@@ -1066,21 +1066,21 @@ class FecRingDevice {
 
   /** This methods takes an array of values to be set and send it over the ring.
    */
-  void setBlockDevices ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) throw (FecExceptionHandler) ;
+  void setBlockDevices ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) noexcept(false) ;
 
   /** This methods retreive the frames sent by another methods and manage it with errors
    */
   void getBlockFrames ( bool forceChannelAck, accessTransactionFrameMap &tnumSent,
 			Sgi::hash_map<keyType, int> &busy, unsigned int &cptRead )
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** This methods takes an array of values to be set and send it over the ring.
    */
-  void setBlockDevicesBltMode ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) throw (FecExceptionHandler) ;
+  void setBlockDevicesBltMode ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) noexcept(false) ;
 
   /** This methods takes an array of values to be set and send it over the ring.
    */
-  //void setBlockDevicesBltMode1 ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) throw (FecExceptionHandler) ;
+  //void setBlockDevicesBltMode1 ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/FecUsbRingDevice.h b/FecSoftwareV3_0/generic/include/FecUsbRingDevice.h
index 6a9e8a1..4d1e23e 100755
--- a/FecSoftwareV3_0/generic/include/FecUsbRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecUsbRingDevice.h
@@ -89,10 +89,10 @@ class FecUsbRingDevice: public FecRingDevice {
    * \param ringSlot - ring slot on the corresponding FEC
    * \param init - initialise or not the FEC ring
    */
-  FecUsbRingDevice (std::string serial, tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) throw ( FecExceptionHandler ) ;
+  FecUsbRingDevice (std::string serial, tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) noexcept(false) ;
 	
   //Destructor
-  virtual ~FecUsbRingDevice() throw ( FecExceptionHandler );
+  virtual ~FecUsbRingDevice() noexcept(false);
 
 
   /******************************************************
@@ -111,39 +111,39 @@ class FecUsbRingDevice: public FecRingDevice {
 
   /** \brief Set the control register 0  the FEC
    */ 
-  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false ) throw ( FecExceptionHandler );
+  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false ) noexcept(false);
 
   /** \brief Get the control register 0  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR0( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingCR0( ) noexcept(false);
 
   /** \brief Set the control register 1  the FEC
    * \param ctrl1Value - value to be set
    */ 
-  void setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler );
+  void setFecRingCR1( tscType16 ctrl1Value ) noexcept(false);
 
   /** \brief Get the control register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR1( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingCR1( ) noexcept(false);
 
   /** \brief Get the status register 0  the FEC
    * \return value read
    */
-  tscType32 getFecRingSR0( ) throw ( FecExceptionHandler );
+  tscType32 getFecRingSR0( ) noexcept(false);
 
   /** \brief Get the status register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingSR1( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingSR1( ) noexcept(false);
 	
 
 
   /** \brief Get the FEC version register the FEC
    * \return value read
    */
-  tscType16 getFecFirmwareVersion( )  throw ( FecExceptionHandler );
+  tscType16 getFecFirmwareVersion( )  noexcept(false);
 	
 	
   /******************************************************
@@ -153,37 +153,37 @@ class FecUsbRingDevice: public FecRingDevice {
 
   /** \brief return a word from the FIFO receive
    */
-  tscType32 getFifoReceive( ) throw ( FecExceptionHandler );
+  tscType32 getFifoReceive( ) noexcept(false);
 	
   /** \brief write a word in the FIFO receive
    * \param value - value to be written
    */
-  void setFifoReceive( tscType32 fiforecValue ) throw ( FecExceptionHandler );
+  void setFifoReceive( tscType32 fiforecValue ) noexcept(false);
 
   /** \brief return a word from the FIFO return
    */
-  tscType8 getFifoReturn ( ) throw ( FecExceptionHandler );
+  tscType8 getFifoReturn ( ) noexcept(false);
 
   /** \brief write a word in the FIFO return
    * \param value - value to be written
    */
-  void setFifoReturn ( tscType8 fiforetValue ) throw ( FecExceptionHandler );
+  void setFifoReturn ( tscType8 fiforetValue ) noexcept(false);
 
   /** \brief return a word from the FIFO transmit
    */
-  tscType32 getFifoTransmit ( ) throw ( FecExceptionHandler );
+  tscType32 getFifoTransmit ( ) noexcept(false);
 
   /** \brief write a word in the FIFO transmit
    * \param value - value to be written
    */
-  void setFifoTransmit ( tscType32 fifotraValue ) throw ( FecExceptionHandler );
+  void setFifoTransmit ( tscType32 fifotraValue ) noexcept(false);
 
   /** \brief Use USB block transfer to write a set of values inside the FIFO
    * \param value - values to be written (array)
    * \param count - number of values
    */
   void setFifoReceive ( tscType32 *value, int count) 
-    throw (FecExceptionHandler);
+    noexcept(false);
 
   /** \brief Use USB block transfer to read values from the FIFO
    * \param value - value to be read
@@ -191,14 +191,14 @@ class FecUsbRingDevice: public FecRingDevice {
    * \return pointer to the array of value ( = value )
    */
   tscType32* getFifoReceive (  tscType32 *value, int count ) 
-    throw (FecExceptionHandler);
+    noexcept(false);
 
   /** \brief Use USB block transfer to word a set of values inside the FIFO
    * \param value - values to be written (array)
    * \param count - number of values
    */
   void setFifoReturn ( tscType8 *value, int count ) 
-    throw (FecExceptionHandler);
+    noexcept(false);
 
   /** \brief Use USB block transfer to read values from the FIFO
    * \param value - value to be read
@@ -206,14 +206,14 @@ class FecUsbRingDevice: public FecRingDevice {
    * \return pointer to the array of value ( = value )
    */
   tscType8* getFifoReturn (  tscType8 *value,int count ) 
-    throw (FecExceptionHandler);
+    noexcept(false);
 
   /** \brief Use USB block transfer to word a set of values inside the FIFO
    * \param value - values to be written (array)
    * \param count - number of values
    */
   void setFifoTransmit ( tscType32 *value, int count ) 
-    throw (FecExceptionHandler);
+    noexcept(false);
 
   /** \brief Use USB block transfer to read values from the FIFO
    * \param value - value to be read
@@ -221,7 +221,7 @@ class FecUsbRingDevice: public FecRingDevice {
    * \return pointer to the array of value ( = value )
    */
   tscType32* getFifoTransmit (  tscType32 *value,int count ) 
-    throw (FecExceptionHandler);
+    noexcept(false);
       
       
       
@@ -233,7 +233,7 @@ class FecUsbRingDevice: public FecRingDevice {
 
   /** \brief Issue a hard reset
    */
-  void fecHardReset ( ) throw ( FecExceptionHandler ) ;
+  void fecHardReset ( ) noexcept(false) ;
       
   /******************************************************
 		IRQ enable / disable
@@ -241,7 +241,7 @@ class FecUsbRingDevice: public FecRingDevice {
 
   /** \brief enable or disable the IRQ, not use in the USB FEC
    */
-  void setIRQ ( bool enable, tscType8 level=1 ) throw ( FecExceptionHandler ) ;
+  void setIRQ ( bool enable, tscType8 level=1 ) noexcept(false) ;
 
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/FecUtcaRingDevice.h b/FecSoftwareV3_0/generic/include/FecUtcaRingDevice.h
index d695f43..3ab6b36 100644
--- a/FecSoftwareV3_0/generic/include/FecUtcaRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecUtcaRingDevice.h
@@ -70,11 +70,11 @@ class FecUtcaRingDevice: public FecRingDevice {
    * \param ringSlot - ring slot on the corresponding FEC
    * \param init - initialise or not the FEC ring
    */
-  FecUtcaRingDevice ( tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) throw ( FecExceptionHandler ) ;
+  FecUtcaRingDevice ( tscType8 fecSlot, tscType8 ringSlot, bool init = true, bool invertClockPolarity = false ) noexcept(false) ;
 
  /** \brief Close the device driver
   */
-  virtual ~FecUtcaRingDevice ( ) throw ( FecExceptionHandler ) ;
+  virtual ~FecUtcaRingDevice ( ) noexcept(false) ;
 /** Initialize uHAL connection */
   static void configureUhal (const std::string& connectionFile, const std::string& boardId);
 /** Release uHAL connection object */
@@ -85,36 +85,36 @@ class FecUtcaRingDevice: public FecRingDevice {
 
   /** \brief Set the control register 0  the FEC
    */ 
-  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false )  throw ( FecExceptionHandler ) ;
+  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false )  noexcept(false) ;
 
   /** \brief Get the control register 0  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR0( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingCR0( ) noexcept(false) ;
 
   /** \brief Set the control register 1  the FEC
    * \param ctrl1Value - value to be set
    */ 
-  void setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) ;
+  void setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) ;
 
   /** \brief Get the control register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR1( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingCR1( ) noexcept(false) ;
 
   /** \brief Get the status register 0  the FEC
    * \return value read
    */
-  tscType32 getFecRingSR0(unsigned long ) throw ( FecExceptionHandler ) ;
+  tscType32 getFecRingSR0(unsigned long ) noexcept(false) ;
 
   /** \brief Get the status register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingSR1( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecRingSR1( ) noexcept(false) ;
 	
   /** \brief return the firmware version of the FEC
    */
-  tscType16 getFecFirmwareVersion( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecFirmwareVersion( ) noexcept(false) ;
 
 /** Read a string describing the Firmware version */
   std::string getFecFirmwareStringVersion( );
@@ -131,30 +131,30 @@ class FecUtcaRingDevice: public FecRingDevice {
 
   /** \brief return a word from the FIFO receive
    */
-  tscType32 getFifoReceive( ) throw ( FecExceptionHandler ) ;
+  tscType32 getFifoReceive( ) noexcept(false) ;
 	
   /** \brief write a word in the FIFO receive
    * \param value - value to be written
    */
-  void setFifoReceive( tscType32 value ) throw ( FecExceptionHandler ) ;
+  void setFifoReceive( tscType32 value ) noexcept(false) ;
   
   /** \brief return a word from the FIFO return
    */
-  tscType8 getFifoReturn( )  throw ( FecExceptionHandler ) ;
+  tscType8 getFifoReturn( )  noexcept(false) ;
 
   /** \brief write a word in the FIFO return
    * \param value - value to be written
    */
-  void setFifoReturn( tscType8 value )  throw ( FecExceptionHandler ) ;
+  void setFifoReturn( tscType8 value )  noexcept(false) ;
   
   /** \brief return a word from the FIFO transmit
    */
-  tscType32 getFifoTransmit( )  throw ( FecExceptionHandler ) ;
+  tscType32 getFifoTransmit( )  noexcept(false) ;
 
   /** \brief write a word in the FIFO transmit
    * \param value - value to be written
    */
-  void setFifoTransmit( tscType32 value )  throw ( FecExceptionHandler ) ;
+  void setFifoTransmit( tscType32 value )  noexcept(false) ;
 
 
    /******************************************************
@@ -163,7 +163,7 @@ class FecUtcaRingDevice: public FecRingDevice {
 
   /** \brief issue a PLX reset
    */
-  void fecHardReset ( )  throw ( FecExceptionHandler ) ;
+  void fecHardReset ( )  noexcept(false) ;
 
   /******************************************************
 		IRQ enable / disable
@@ -171,7 +171,7 @@ class FecUtcaRingDevice: public FecRingDevice {
 
   /** \brief Enable or disable the PLX irq (level is not used)
    */
-  void setIRQ ( bool enable, tscType8 level=1 ) throw ( FecExceptionHandler ) ;
+  void setIRQ ( bool enable, tscType8 level=1 ) noexcept(false) ;
  /** Empty the RECeive FIFO with a readBlock after reading its size
  * @return Content of the FIFO */
   std::vector<uint32_t> readBlockReceiveFifo();
diff --git a/FecSoftwareV3_0/generic/include/FecVmeRingDevice.h b/FecSoftwareV3_0/generic/include/FecVmeRingDevice.h
index 4a2b45a..96cfba0 100755
--- a/FecSoftwareV3_0/generic/include/FecVmeRingDevice.h
+++ b/FecSoftwareV3_0/generic/include/FecVmeRingDevice.h
@@ -155,11 +155,11 @@ class FecVmeRingDevice: public FecRingDevice {
 
   /** \brief create a VME FEC based on the VME device provided by HAL
    */
-FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ringSlot, bool init, fecRingDeviceFifoAccessModeEnum blockMode, uint32_t adapterSlot, bool invertClockPolarity = false ) throw ( FecExceptionHandler ) ;
+FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ringSlot, bool init, fecRingDeviceFifoAccessModeEnum blockMode, uint32_t adapterSlot, bool invertClockPolarity = false ) noexcept(false) ;
 
   /** Destructor
    */
-  virtual ~FecVmeRingDevice( ) throw ( FecExceptionHandler );
+  virtual ~FecVmeRingDevice( ) noexcept(false);
 
   /** \return the FEC hardware id
    */
@@ -201,27 +201,18 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
   static unsigned long getTraFifoSent();
   /** \brief create a bus adapter depending of which was chosen
    */
-  static HAL::VMEBusAdapterInterface *createBusAdapter ( uint32_t adapterSlot, std::string strBusAdapter ) throw ( HAL::BusAdapterException, FecExceptionHandler ) ;  
+  static HAL::VMEBusAdapterInterface *createBusAdapter ( uint32_t adapterSlot, std::string strBusAdapter ) noexcept(false) ;  
 
   //PnP initialisation function
   static HAL::VME64xCrate * configurePlugAndPlay( uint32_t adapteurSlot, std::string mapfile, std::string maptable, std::string strBusAdapter, hashMapVMEDevice &hashMapVMEDevice )
-    throw (HAL::BusAdapterException,
-	   HAL::NoSuchFileException,
-	   HAL::IllegalValueException,
-	   HAL::XMLProcessingException,
-	   HAL::HardwareProblemException,
-	   HAL::UnsupportedException);
+	   noexcept(false);
   
   //Hardcoded base address initialisation function
   static HAL::VME64xDevice * configureHardBaseAddress( uint32_t adapteurSlot, std::string addresstablefile, uint32_t baseaddress, uint32_t fecSlot, std::string strBusAdapter )
-    throw (HAL::BusAdapterException,
-	   HAL::NoSuchFileException,
-	   HAL::IllegalValueException,
-	   HAL::UnsupportedException, 
-	   FecExceptionHandler);
+	   noexcept(false);
 
   //Check if we really have a VME board on the allocated base address
-  static tscType16 detectVmeBoard(HAL::VME64xDevice *vmedevice, tscType8 fecSlot) throw ( FecExceptionHandler );
+  static tscType16 detectVmeBoard(HAL::VME64xDevice *vmedevice, tscType8 fecSlot) noexcept(false);
 
   /** \brief detect which numbering schema for the FEC rings
    */
@@ -237,11 +228,11 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
   /* \brief Clean up allocated memory on request
    */
-  static void closeFecVmeAccess ( ) throw (HAL::BusAdapterException) ;
+  static void closeFecVmeAccess ( ) noexcept(false) ;
   
   /* \brief Resets the whole VME crate 
    */
-  static void crateReset ( uint32_t adapterSlot) throw ( FecExceptionHandler ) ;
+  static void crateReset ( uint32_t adapterSlot) noexcept(false) ;
   
   /******************************************************
 		CONTROL & STATUS RTEGISTERS ACCESS
@@ -249,36 +240,36 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
   
   /** \brief Set the control register 0  the FEC
    */ 
-  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false ) throw ( FecExceptionHandler );
+  void setFecRingCR0 ( tscType16 ctrl0Value, bool force = false ) noexcept(false);
   
   /** \brief Get the control register 0  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR0( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingCR0( ) noexcept(false);
   
   /** \brief Set the control register 1  the FEC
    * \param ctrl1Value - value to be set
    */ 
-  void setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler );
+  void setFecRingCR1( tscType16 ctrl1Value ) noexcept(false);
   
   /** \brief Get the control register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingCR1( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingCR1( ) noexcept(false);
   
   /** \brief Get the status register 0  the FEC
    * \return value read
    */
-  tscType32 getFecRingSR0(unsigned long sleeptime=0) throw ( FecExceptionHandler );
+  tscType32 getFecRingSR0(unsigned long sleeptime=0) noexcept(false);
   
     /** \brief Get the status register 1  the FEC
    * \return value read
    */
-  tscType16 getFecRingSR1( ) throw ( FecExceptionHandler );
+  tscType16 getFecRingSR1( ) noexcept(false);
 
     /** \brief return the firmware version of the FEC
    */
-  tscType16 getFecFirmwareVersion( ) throw ( FecExceptionHandler ) ;
+  tscType16 getFecFirmwareVersion( ) noexcept(false) ;
 
   /******************************************************
 		FIFO ACCESS - NATIVE 32 BITS FORMAT
@@ -287,30 +278,30 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
   
   /** \brief return a word from the FIFO receive
    */
-  tscType32 getFifoReceive( ) throw ( FecExceptionHandler );
+  tscType32 getFifoReceive( ) noexcept(false);
   
   /** \brief write a word in the FIFO receive
    * \param value - value to be written
    */
-  void setFifoReceive( tscType32 fiforecValue ) throw ( FecExceptionHandler );
+  void setFifoReceive( tscType32 fiforecValue ) noexcept(false);
 
   /** \brief return a word from the FIFO return
    */
-  tscType8 getFifoReturn( ) throw ( FecExceptionHandler );
+  tscType8 getFifoReturn( ) noexcept(false);
   
   /** \brief write a word in the FIFO return
    * \param value - value to be written
    */
-  void setFifoReturn( tscType8 fiforetValue ) throw ( FecExceptionHandler );
+  void setFifoReturn( tscType8 fiforetValue ) noexcept(false);
   
   /** \brief return a word from the FIFO transmit
    */
-  tscType32 getFifoTransmit( ) throw ( FecExceptionHandler );
+  tscType32 getFifoTransmit( ) noexcept(false);
   
   /** \brief write a word in the FIFO transmit
    * \param value - value to be written
    */
-  void setFifoTransmit( tscType32 fifotraValue ) throw ( FecExceptionHandler );  
+  void setFifoTransmit( tscType32 fifotraValue ) noexcept(false);  
   
   /******************************************************
 		HARD RESET
@@ -318,7 +309,7 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
   /** \brief issue a crate reset
    */
-  void fecHardReset ( ) throw ( FecExceptionHandler ) ;
+  void fecHardReset ( ) noexcept(false) ;
 
   /******************************************************
    * The next methods is able to be overloaded in the sub-classes in order to implement
@@ -328,19 +319,19 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
    /** \brief get block of words from the FIFO transmit
     */
-   tscType32* getFifoTransmit (  tscType32 *value, int count ) throw (FecExceptionHandler) ;
+   tscType32* getFifoTransmit (  tscType32 *value, int count ) noexcept(false) ;
 
    /** \brief get block of words from the FIFO receive
     */
-   tscType32* getFifoReceive (  tscType32 *value, int count ) throw (FecExceptionHandler) ;
+   tscType32* getFifoReceive (  tscType32 *value, int count ) noexcept(false) ;
 
    /** \brief set a word into the FIFO Transmit
     */
-   void setFifoTransmit ( tscType32 *value, int count ) throw (FecExceptionHandler) ;
+   void setFifoTransmit ( tscType32 *value, int count ) noexcept(false) ;
 
    /** \brief set a word into the FIFO Transmit
     */
-   void setFifoReceive ( tscType32 *value, int count ) throw (FecExceptionHandler) ;
+   void setFifoReceive ( tscType32 *value, int count ) noexcept(false) ;
 
   /******************************************************
 		IRQ enable / disable
@@ -348,7 +339,7 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
   /** \brief Enable or disable the VME IRQ with the level
    */
-  void setIRQ ( bool enable, tscType8 level=1 ) throw ( FecExceptionHandler ) ;
+  void setIRQ ( bool enable, tscType8 level=1 ) noexcept(false) ;
   
   /******************************************************
            VME64x CSR/CR space operations
@@ -360,16 +351,16 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
   /** \brief return the trigger FPGA firmware version
    */
-  tscType32 getTriggerVersion() throw ( FecExceptionHandler ) ;
+  tscType32 getTriggerVersion() noexcept(false) ;
 
   /**  \brief return VMEslave version number
    */
-  tscType32 getVmeVersion() throw ( FecExceptionHandler );
+  tscType32 getVmeVersion() noexcept(false);
   /**  \brief return VMEslave version number
    */
   /**  \brief Reload all the uFECs on the board. Sleep about 1 sec after that.
    */
-  void uFecsReload(tscType8 value = 0x1) throw ( FecExceptionHandler );
+  void uFecsReload(tscType8 value = 0x1) noexcept(false);
 
 
   /******************************************************
@@ -378,7 +369,7 @@ FecVmeRingDevice ( HAL::VME64xDevice *vmedevice, tscType8 fecSlot, tscType8 ring
 
   /** \brief return the hardware id related to the slot
    */
-  static std::string getSerialNumber ( uint32_t slot, uint32_t adapterSlot) throw ( FecExceptionHandler ) ;
+  static std::string getSerialNumber ( uint32_t slot, uint32_t adapterSlot) noexcept(false) ;
   
   /** \brief return the min value of the ring 
    */
diff --git a/FecSoftwareV3_0/generic/include/FecVmeTemperature.h b/FecSoftwareV3_0/generic/include/FecVmeTemperature.h
index 742fb76..6ad00df 100755
--- a/FecSoftwareV3_0/generic/include/FecVmeTemperature.h
+++ b/FecSoftwareV3_0/generic/include/FecVmeTemperature.h
@@ -64,10 +64,10 @@ class FecVmeTemperature {
   ******************************************************/
 
   //Constructor
-  FecVmeTemperature (HAL::VME64xDevice *vmedevice, unsigned int fecSlot = 0 ) throw ( FecExceptionHandler ) ;
+  FecVmeTemperature (HAL::VME64xDevice *vmedevice, unsigned int fecSlot = 0 ) noexcept(false) ;
 	
   //Destructor
-  virtual ~FecVmeTemperature () throw ( FecExceptionHandler );
+  virtual ~FecVmeTemperature () noexcept(false);
 
   /** return the FEC slot
    */
@@ -76,7 +76,7 @@ class FecVmeTemperature {
   /******************************************************
 		Temperature  ACCESS - NATIVE 32 BITS FORMAT
   ******************************************************/
-  int getTemp(int tempSlot) throw ( FecExceptionHandler );
+  int getTemp(int tempSlot) noexcept(false);
        
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/GenericExceptionHandler.h b/FecSoftwareV3_0/generic/include/GenericExceptionHandler.h
index 6a323d8..d53dce7 100755
--- a/FecSoftwareV3_0/generic/include/GenericExceptionHandler.h
+++ b/FecSoftwareV3_0/generic/include/GenericExceptionHandler.h
@@ -64,7 +64,7 @@ class GenericExceptionHandler: public std::exception {
   /**
    * \brief Default constructor for inheritance
    */
-  GenericExceptionHandler ( ) throw ( ) {
+  GenericExceptionHandler ( ) noexcept {
 
     timestamp_ = time (NULL) ;
 
@@ -91,7 +91,7 @@ class GenericExceptionHandler: public std::exception {
                             errorType faultSeverity, 
                             errorType errorCode, 
                             std::string userMessage, 
-                            std::string developperMessage = "" ) throw ( ) {
+                            std::string developperMessage = "" ) noexcept {
 
     timestamp_ = time (NULL) ;
 
@@ -110,12 +110,12 @@ class GenericExceptionHandler: public std::exception {
   
   /** Nothing
    */
-  virtual ~GenericExceptionHandler ( ) throw ( ) { }
+  virtual ~GenericExceptionHandler ( ) noexcept { }
 
   /**
    * Display the last error
    */
-  virtual void displayError ( ) throw ( ) {    
+  virtual void displayError ( ) noexcept {    
 
     std::cout << "------------------ Exception error ---------------" << std::endl ;
     std::cout << what ( ) << std::endl ;
@@ -126,7 +126,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief Returned a message containing all the error
    * \return string - message
    */
-  virtual std::string what ( ) throw ( ) {
+  virtual std::string what ( ) noexcept {
 
     char msg[MAXCHARMSG] ;
 
@@ -143,7 +143,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief Returned the error code
    * \return error code value
    */
-  virtual errorType getErrorCode ( ) throw ( ) {
+  virtual errorType getErrorCode ( ) noexcept {
 
     return (errorCode_) ;
   }
@@ -153,7 +153,7 @@ class GenericExceptionHandler: public std::exception {
    * The values can be:
    * \return tscType8 - system number
    */
-  virtual unsigned int getSystemNumber ( ) throw ( ) {
+  virtual unsigned int getSystemNumber ( ) noexcept {
     
     return (systemNumber_) ;
   }
@@ -163,7 +163,7 @@ class GenericExceptionHandler: public std::exception {
    * \return tscType8 - subsystem number
    * \see getErrorCode method
    */
-  virtual unsigned int getSubSystemNumber (  ) throw ( ) {
+  virtual unsigned int getSubSystemNumber (  ) noexcept {
 
     return (subSystemNumber_) ;
   }
@@ -172,7 +172,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief Return the error severity 
    * \return the severity code error
    */
-  virtual errorType getSeverityError ( ) throw ( ) {
+  virtual errorType getSeverityError ( ) noexcept {
 
     return (faultSeverity_) ;
   }
@@ -181,7 +181,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief Return the timestamp
    * \return the timestamp
    */
-  virtual time_t getTimeStamp ( ) throw ( ) {
+  virtual time_t getTimeStamp ( ) noexcept {
 
     return (timestamp_) ;
   }
@@ -190,7 +190,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief return the user message
    * \return user message
    */
-  virtual std::string getErrorUserMessage ( ) throw ( ) {
+  virtual std::string getErrorUserMessage ( ) noexcept {
 
     return (userErrorMessage_) ;
   }
@@ -199,7 +199,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief return the developper message
    * \return developper message
    */
-  virtual std::string getErrorDevelopperMessage ( ) throw ( ){
+  virtual std::string getErrorDevelopperMessage ( ) noexcept{
 
     return (developperErrorMessage_) ;
   }
@@ -208,7 +208,7 @@ class GenericExceptionHandler: public std::exception {
    * \brief return the message from the exception
    * \return message
    */
-  virtual std::string getMessage ( ) throw ( ) {
+  virtual std::string getMessage ( ) noexcept {
 
     return (userErrorMessage_) ;
   }
diff --git a/FecSoftwareV3_0/generic/include/MemBufOutputSource.h b/FecSoftwareV3_0/generic/include/MemBufOutputSource.h
index 4960788..eae97f7 100755
--- a/FecSoftwareV3_0/generic/include/MemBufOutputSource.h
+++ b/FecSoftwareV3_0/generic/include/MemBufOutputSource.h
@@ -93,35 +93,35 @@ class MemBufOutputSource {
 
   /**Write on <I>memBuffer_</I> attribute device information
    */
-  virtual void generateDeviceTag(deviceVector deviceParameters, bool forDb=false) throw (FecExceptionHandler);
+  virtual void generateDeviceTag(deviceVector deviceParameters, bool forDb=false) noexcept(false);
 
   /**Write on <I>memConnection_</I> attribut connection information
    */
-  void generateConnectionTag(ConnectionVector connections, bool forDb=false) throw (FecExceptionHandler);
+  void generateConnectionTag(ConnectionVector connections, bool forDb=false) noexcept(false);
 
   /**Write on <I>memBufferCcu_</I> attribute ccu information
    */
-  void generateCcuTag(ccuVector, bool forDb=false) throw (FecExceptionHandler);
+  void generateCcuTag(ccuVector, bool forDb=false) noexcept(false);
 
   /**Write on <I>memBufferTkRing_</I> attribute ring information
    */
-  void generateTkRingTag(TkRingDescription ringParameters, bool forDb ) throw (FecExceptionHandler);
+  void generateTkRingTag(TkRingDescription ringParameters, bool forDb ) noexcept(false);
 
   /**Write on <I>memBuffer_</I> attribute piaReset information
    */
-  void generatePiaResetTag(piaResetVector piaResetParameters, bool forDb=false) throw (FecExceptionHandler);
+  void generatePiaResetTag(piaResetVector piaResetParameters, bool forDb=false) noexcept(false);
 
   /**Write on <I>memBuffer_</I> attribute dcuConversion information
    */
-  void generateTkDcuConversionTag(dcuConversionVector dcuConversionParameters, bool forDb=false) throw (FecExceptionHandler);
+  void generateTkDcuConversionTag(dcuConversionVector dcuConversionParameters, bool forDb=false) noexcept(false);
 
   /**Write on <I>memBuffer_</I> attribute dcuConversion information
    */
-  void generateTkIdVsHostnameTag( TkIdVsHostnameVector tkIdVsHostnameVector, bool forDb=false) throw (FecExceptionHandler);
+  void generateTkIdVsHostnameTag( TkIdVsHostnameVector tkIdVsHostnameVector, bool forDb=false) noexcept(false);
 
   /**Write on <I>memBuffer_</I> attribute analysis information
    */
-  void generateAnalysisTag( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) throw (FecExceptionHandler);
+  void generateAnalysisTag( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) noexcept(false);
 
   /**Generates a DcuConversion element
    */
@@ -137,7 +137,7 @@ class MemBufOutputSource {
 
   /**Write on <I>memBuffer_</I> attribute dcuInfo information
    */
-  void generateTkDcuInfoTag(tkDcuInfoVector dcuInfoParameters, bool forDb=false) throw (FecExceptionHandler);
+  void generateTkDcuInfoTag(tkDcuInfoVector dcuInfoParameters, bool forDb=false) noexcept(false);
 
   /**Generates a DcuInfo element
    */
@@ -145,7 +145,7 @@ class MemBufOutputSource {
 
   /**Write on <I>memBuffer_</I> attribute dcuPsuMap information
    */
-  void generateTkDcuPsuMapTag(tkDcuPsuMapVector dcuPsuMapParameters, bool forDb=false) throw (FecExceptionHandler);
+  void generateTkDcuPsuMapTag(tkDcuPsuMapVector dcuPsuMapParameters, bool forDb=false) noexcept(false);
 
   /**Generates a DcuPsuMap element
    */
@@ -239,53 +239,53 @@ class MemBufOutputSource {
 
   /** \brief Create a MemBufOuputSource object from a ccuVector
    */
-  MemBufOutputSource(ccuVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource(ccuVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a TkRingDescription
    *  \param withCcus bool parameter default value is false
    */
-  MemBufOutputSource (TkRingDescription, bool forDb, bool withCcus ) throw (FecExceptionHandler);
+  MemBufOutputSource (TkRingDescription, bool forDb, bool withCcus ) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a vector of TkRingDescription
    *  \param withCcus bool parameter default value is false
    */
-  MemBufOutputSource (tkringVector rings, bool forDb, bool withCcus) throw (FecExceptionHandler);
+  MemBufOutputSource (tkringVector rings, bool forDb, bool withCcus) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a deviceVector
    */
-  MemBufOutputSource(deviceVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource(deviceVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a deviceVector
    */
-  MemBufOutputSource(ConnectionVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource(ConnectionVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a piaResetVector
    */
-  MemBufOutputSource(piaResetVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource(piaResetVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a dcuConversionVector
    */
-  MemBufOutputSource (dcuConversionVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource (dcuConversionVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a dcuConversionVector
    */
-  MemBufOutputSource (TkIdVsHostnameVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource (TkIdVsHostnameVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a vector of commissioning analysis
    */
-  MemBufOutputSource (std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource (std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a tkDcuInfoVector
    */
-  MemBufOutputSource (tkDcuInfoVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource (tkDcuInfoVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a tkDcuPsuMapVector
    */
-  MemBufOutputSource (tkDcuPsuMapVector, bool forDb=false) throw (FecExceptionHandler);
+  MemBufOutputSource (tkDcuPsuMapVector, bool forDb=false) noexcept(false);
 
   /** \brief Create a MemBufOuputSource object from a deviceVector and a piaResetVector
    */
-  MemBufOutputSource(deviceVector, piaResetVector) throw (FecExceptionHandler);
+  MemBufOutputSource(deviceVector, piaResetVector) noexcept(false);
 
   /** \brief Destructor
    */
diff --git a/FecSoftwareV3_0/generic/include/PiaResetAccess.h b/FecSoftwareV3_0/generic/include/PiaResetAccess.h
index 103b5c2..3512e98 100755
--- a/FecSoftwareV3_0/generic/include/PiaResetAccess.h
+++ b/FecSoftwareV3_0/generic/include/PiaResetAccess.h
@@ -84,7 +84,7 @@ class PiaResetAccess: public PiaChannelAccess {
   void setPiaReset ( tscType8 mask, 
                      unsigned long delayActiveReset,
                      unsigned long intervalDelayReset ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief get the value from the resistor register
    */
@@ -96,7 +96,7 @@ class PiaResetAccess: public PiaChannelAccess {
 						     unsigned int delayActiveReset, unsigned int intervalDelayReset,
 						     tscType8 initialValue,
 						     std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/PiaResetFactory.h b/FecSoftwareV3_0/generic/include/PiaResetFactory.h
index 5c3b40e..0bed5ac 100755
--- a/FecSoftwareV3_0/generic/include/PiaResetFactory.h
+++ b/FecSoftwareV3_0/generic/include/PiaResetFactory.h
@@ -58,13 +58,13 @@ class PiaResetFactory: public DeviceFactoryInterface {
   /** \brief retreive the information from the input for one of the following parameters
    */
   void getPiaResetDescriptions ( bool fileUsed, std::string partitionName, std::string fecHardwareId, piaResetVector &outVector, bool allDevices = false, bool forceDbReload = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 #ifdef DATABASE
   /** \brief retreive information concerning the partition versus the version
    */
   std::list<unsigned int *> getPartitionVersion ( std::string partitionName ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
  public:
@@ -78,7 +78,7 @@ class PiaResetFactory: public DeviceFactoryInterface {
   /** \brief Buid a FEC factory for database
    */
   PiaResetFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Buid a FEC factory for FEC database
    */
@@ -127,12 +127,12 @@ class PiaResetFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -147,7 +147,7 @@ class PiaResetFactory: public DeviceFactoryInterface {
   /** \brief Create new PIA reset descriptions
    */
   void createPartition ( piaResetVector devices, std::string partitionName = "" )
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
 #endif
 
@@ -159,20 +159,20 @@ class PiaResetFactory: public DeviceFactoryInterface {
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
-  void getPiaResetDescriptions ( std::string partitionName, std::string fecHardwareId, piaResetVector &outVector, bool allDevices = false, bool forceDbReload = false ) throw ( FecExceptionHandler ) ;
+  void getPiaResetDescriptions ( std::string partitionName, std::string fecHardwareId, piaResetVector &outVector, bool allDevices = false, bool forceDbReload = false ) noexcept(false) ;
 
     /** \brief Retreive the descriptions for the given devices from the input
    */
-  void getPiaResetDescriptions ( std::string partitionName, piaResetVector &outVector, bool allDevices = false, bool forceDbReload = false ) throw ( FecExceptionHandler ) ;
+  void getPiaResetDescriptions ( std::string partitionName, piaResetVector &outVector, bool allDevices = false, bool forceDbReload = false ) noexcept(false) ;
 
   /** \brief Retreive the descriptions for the given devices from a file
    */
-  void getPiaResetDescriptions ( piaResetVector &outVector, bool allDevices = false ) throw ( FecExceptionHandler ) ;
+  void getPiaResetDescriptions ( piaResetVector &outVector, bool allDevices = false ) noexcept(false) ;
 
   /** \brief Upload the description in the output
    */
   void setPiaResetDescriptions ( piaResetVector devices, std::string partitionName = "nil" ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 } ;
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/TShare.h b/FecSoftwareV3_0/generic/include/TShare.h
index 786ca30..c5941e4 100644
--- a/FecSoftwareV3_0/generic/include/TShare.h
+++ b/FecSoftwareV3_0/generic/include/TShare.h
@@ -88,20 +88,20 @@ public:
      @param mode TShare_CREATE or TShare_OPEN (see TShare.h)
      @param size Share memory size
    */
-  TShare(char* name,int mode,int size) throw (std::string);
-  ~TShare() throw (std::string);
+  TShare(char* name,int mode,int size) noexcept(false);
+  ~TShare() noexcept(false);
   /** Lock the Semaphore to access safely the Share memory */
-  void Lock() throw (std::string);
+  void Lock() noexcept(false);
   /** Unlock the Semaphore  */
-  void Unlock() throw (std::string);
+  void Unlock() noexcept(false);
   /** Attach the Share memory 
       @return pointer to the Share memory
    */ 
-  void* Attach() throw (std::string);
+  void* Attach() noexcept(false);
   /** Detach the Share memory 
       @param ad  pointer to the Share memory
    */
-  void Detach(const void* ad) throw (std::string);
+  void Detach(const void* ad) noexcept(false);
   /** Return Share memory name */
   inline const char* GetName() { return fName;}
 };
diff --git a/FecSoftwareV3_0/generic/include/TkDcuConversionFactors.h b/FecSoftwareV3_0/generic/include/TkDcuConversionFactors.h
index 0da7782..c2a1396 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuConversionFactors.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuConversionFactors.h
@@ -611,50 +611,50 @@ class TkDcuConversionFactors {
   /** \brief Display the conversion factors
    * \param convertedValue - display the converted value with the DCU
    */
-  void display ( bool convertedValue = false ) throw (std::string) ;
+  void display ( bool convertedValue = false ) noexcept(false) ;
 
   /** \brief Display the conversion factors
    * \param convertedValue - display the converted value with the DCU
    */
-  std::string getDisplay ( bool convertedValue = false ) throw (std::string) ;
+  std::string getDisplay ( bool convertedValue = false ) noexcept(false) ;
 
   /** \brief Evaluate the silicon sensor temperature from the channel 0 for a FEH or a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return silicon sensor temperature
    * \warning return temperature are in degree celcuis
    */
-  double getSiliconSensorTemperature ( bool &quality ) throw (std::string) ;
+  double getSiliconSensorTemperature ( bool &quality ) noexcept(false) ;
 
   /** \brief V250 from channel 1 for a FEH or from a channel 2 for a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return V250 in mV
    */
-  double getV250 ( bool &quality ) throw (std::string) ;
+  double getV250 ( bool &quality ) noexcept(false) ;
 
   /** \brief V125 from channel 2 for a FEH or from channel 3 for a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return V125 in mV
    */
-  double getV125 ( bool &quality ) throw (std::string) ;
+  double getV125 ( bool &quality ) noexcept(false) ;
 
   /** \brief Leakage current from channel 3 for a FEH, cannot be recovered for a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return Leakage current in uA
    */
-  double getILeak ( bool &quality ) throw (std::string) ;
+  double getILeak ( bool &quality ) noexcept(false) ;
 
   /** \brief Temperature of each hybrid from channel 4 of FEH, cannnot be recovered for a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return Temperature of the corresponding hybrid
    * \warning return temperature are in degree celcuis
    */
-  double getHybridTemperature ( bool &quality ) throw (std::string) ;
+  double getHybridTemperature ( bool &quality ) noexcept(false) ;
       
   /** \brief Temperature of the DCU from channel 7 for a FEH or from channel 7 for a DCU on CCU
    * \param quality - data quality (good or bad)
    * \return Temperature of the DCU
    */
-  double getDcuTemperature ( bool &quality ) throw (std::string) ;
+  double getDcuTemperature ( bool &quality ) noexcept(false) ;
 
   /** \brief check if the difference between two DCUs and return true if it reach a certain level of %
    * \param dcu - dcu to be compare
@@ -668,7 +668,7 @@ class TkDcuConversionFactors {
   /** \brief return the corresponding subdetector from the det id
    * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
    */
-  std::string getSubDetectorFromDetId ( ) throw (std::string) ;
+  std::string getSubDetectorFromDetId ( ) noexcept(false) ;
 
   /** \brief Return a list of parameter name
    * must be delete by the owner of the description
diff --git a/FecSoftwareV3_0/generic/include/TkDcuConversionFactory.h b/FecSoftwareV3_0/generic/include/TkDcuConversionFactory.h
index bcab518..e39709b 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuConversionFactory.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuConversionFactory.h
@@ -63,7 +63,7 @@ class TkDcuConversionFactory: public DeviceFactoryInterface {
   /** \brief Buid a FEC factory for database
    */
   TkDcuConversionFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Buid a FEC factory for FEC database
    */
@@ -111,12 +111,12 @@ class TkDcuConversionFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -132,35 +132,35 @@ class TkDcuConversionFactory: public DeviceFactoryInterface {
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
-  TkDcuConversionFactors *getTkDcuConversionFactors ( unsigned long dcuHardId, bool forceDbReload = false ) throw ( FecExceptionHandler ) ;
+  TkDcuConversionFactors *getTkDcuConversionFactors ( unsigned long dcuHardId, bool forceDbReload = false ) noexcept(false) ;
 
 #ifdef DATABASE
   /** \brief Add the descriptions of the devices from the partitionName
    */
-  void addConversionPartition ( std::string partitionName )  throw (FecExceptionHandler);
+  void addConversionPartition ( std::string partitionName )  noexcept(false);
 #endif
   /** \brief Retreive the descriptions for the given devices from the input
    */
-  //Sgi::hash_map<unsigned long, TkDcuConversionFactors *> getTkDcuConversionFactors ( std::string partitionName, bool forceDbReload = false ) throw ( FecExceptionHandler ) ;
+  //Sgi::hash_map<unsigned long, TkDcuConversionFactors *> getTkDcuConversionFactors ( std::string partitionName, bool forceDbReload = false ) noexcept(false) ;
 
   /** \brief Upload new conversion factors for a given DCU
    */
-  void setTkDcuConversionFactors ( TkDcuConversionFactors tkDcuConversionFactors ) throw ( FecExceptionHandler ) ;
+  void setTkDcuConversionFactors ( TkDcuConversionFactors tkDcuConversionFactors ) noexcept(false) ;
 
   /** \brief Upload the description in the output
    */
   void setTkDcuConversionFactors ( dcuConversionVector vConversionFactors ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief upload an hash_map in the output
    */
   void setTkDcuConversionFactors ( Sgi::hash_map<unsigned long, TkDcuConversionFactors *> vConversionFactors ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief upload the hash_map (attribut of the class) in the output
    */
   void setTkDcuConversionFactors ( ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief delete a vector of DCU conversions
    */
diff --git a/FecSoftwareV3_0/generic/include/TkDcuInfo.h b/FecSoftwareV3_0/generic/include/TkDcuInfo.h
index abb2d05..ec8b345 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuInfo.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuInfo.h
@@ -145,7 +145,7 @@ class TkDcuInfo {
   /** \brief return the corresponding subdetector from the det id
    * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
    */
-  std::string getSubDetectorFromDetId ( ) throw (std::string) ;
+  std::string getSubDetectorFromDetId ( ) noexcept(false) ;
 
   // ------------------------------------------------------------------------------------------------------
   // 
@@ -157,7 +157,7 @@ class TkDcuInfo {
    * \param detId - detector ID
    * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
    */
-  static std::string getSubDetectorFromDetId ( unsigned int detId ) throw (std::string) ;
+  static std::string getSubDetectorFromDetId ( unsigned int detId ) noexcept(false) ;
 
   /** \brief Return a list of parameter name
    * must be delete by the owner of the description
diff --git a/FecSoftwareV3_0/generic/include/TkDcuInfoFactory.h b/FecSoftwareV3_0/generic/include/TkDcuInfoFactory.h
index 20e7300..81690c6 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuInfoFactory.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuInfoFactory.h
@@ -113,7 +113,7 @@ class TkDcuInfoFactory: public DeviceFactoryInterface {
   /** \brief Buid a FEC factory for database
    */
   TkDcuInfoFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Buid a FEC factory for FEC database
    */
@@ -161,12 +161,12 @@ class TkDcuInfoFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -175,83 +175,83 @@ class TkDcuInfoFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   void getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Add the DCU infos for the given partition (the data are extracted from the database)
    */
-  void addDetIdPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0, bool cleanCache = true, bool forceDbReload = false ) throw (FecExceptionHandler);
+  void addDetIdPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0, bool cleanCache = true, bool forceDbReload = false ) noexcept(false);
 
   /** \brief Add all the DCU infos that are in the database for the given version
    */
-  void addAllDetId (unsigned int majorVersionId = 0, unsigned int minorVersionId = 0, bool cleanCache = true, bool forceDbReload = false) throw (FecExceptionHandler);
+  void addAllDetId (unsigned int majorVersionId = 0, unsigned int minorVersionId = 0, bool cleanCache = true, bool forceDbReload = false) noexcept(false);
 
   /** \brief Update the channel delays (coarse and fine) according to the fibre length between detector and FED
    */
-  void updateChannelDelays ( std::string partitionName ) throw (oracle::occi::SQLException, FecExceptionHandler);
+  void updateChannelDelays ( std::string partitionName ) noexcept(false);
 
   /** \brief Get all the current states
    *  \return An array of TkState. YOU have to delete all TkState objects + the vector!
    */
-  tkStateVector &getCurrentStates () throw (FecExceptionHandler);
+  tkStateVector &getCurrentStates () noexcept(false);
 
   /** \brief Create a new current state
    *  \param states A list of state
    *  \return The new currentStateId
    */
-  unsigned int setCurrentState(tkStateVector states) throw (FecExceptionHandler);
+  unsigned int setCurrentState(tkStateVector states) noexcept(false);
 
   /** \brief Set the given state as current
    *  \param stateName The name of the chosen state
    *  \return The new current state ID
    */
-  unsigned int setCurrentState(std::string stateName) throw (FecExceptionHandler);
+  unsigned int setCurrentState(std::string stateName) noexcept(false);
 
   /** \brief Create a new state, copy of the current one. Update the partition with its values in the given state
    *  \param stateName The name of the regerence state
    *  \param partitionName The name of the partition to update
    *  \return The new current state ID
    */
-  unsigned int setCurrentState(std::string partitionName, std::string stateName) throw (FecExceptionHandler);
+  unsigned int setCurrentState(std::string partitionName, std::string stateName) noexcept(false);
 
   /** \brief update the current state based on the state coming from a run number
    */
-  unsigned int copyStateForRunNumber(unsigned int runNumber, bool allPartition) throw (FecExceptionHandler) ;
+  unsigned int copyStateForRunNumber(unsigned int runNumber, bool allPartition) noexcept(false) ;
 
   /** \brief Disable the devices linked to the dcuHardId in the given partition. 
    *  The currentState must not be used in a Run or it will generate an exception (protection of the run history). 
    *
    *  \param partitionName The name of the chosen partition
    */  
-  void disableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) throw (FecExceptionHandler);
+  void disableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) noexcept(false);
 
   /** \brief Enable the devices linked to the dcuHardId in the given partition
    *  \param partitionName The name of the chosen partition
    */  
-  void enableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) throw (FecExceptionHandler);
+  void enableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) noexcept(false);
 
   /** \brief Get the last run for the given partition
    *  \param partitionName The partition used for the run
    *  \return A TkRun object containing the last run
    */
-  TkRun* getLastRun (std::string partitionName) throw (FecExceptionHandler);
+  TkRun* getLastRun (std::string partitionName) noexcept(false);
 
   /** \brief Get the given run for the given partition
    *  \param partitionName The partition used for the run
    *  \param runNumber The number of the run
    *  \return A TkRun object containing the run
    */
-  TkRun* getRun (std::string partitionName, int runNumber) throw (FecExceptionHandler);
+  TkRun* getRun (std::string partitionName, int runNumber) noexcept(false);
 
   /** \brief Get all the runs from the DB
    *  \return A tkRunVector object containing the run. You have to delete this vector!
    */
-  tkRunVector getAllRuns () throw (FecExceptionHandler);
+  tkRunVector getAllRuns () noexcept(false);
 
   /** \brief Get the last run used by O2O for the given partition
    *  \param partitionName The partition used for the run
    *  \return A TkRun object containing the last run or NULL if no record was found. You have to delete the object!
    */
-  TkRun* getLastO2ORun (std::string partitionName) throw (FecExceptionHandler);
+  TkRun* getLastO2ORun (std::string partitionName) noexcept(false);
 
   /** \brief Create a new run
    *  \param partitionName The partition used for the run
@@ -259,94 +259,94 @@ class TkDcuInfoFactory: public DeviceFactoryInterface {
    *  \param runMode The mode of the run
    *  \param local 1 if local run, 0 otherwise
    */
-  void setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment = "") throw (FecExceptionHandler);
+  void setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment = "") noexcept(false);
 
    /** \brief Stop the current run on the partition
    *  \param partitionName The partition used for the run
    *  \param comment Modify the comment on the run if filled
    */
-  void stopRun(std::string partitionName, std::string comment = "") throw (FecExceptionHandler);
+  void stopRun(std::string partitionName, std::string comment = "") noexcept(false);
 
 #ifdef DATABASE
    /** \brief Create a new version for the dcu infos
    */
-  void createNewDcuInfoVersion() throw (FecExceptionHandler);
+  void createNewDcuInfoVersion() noexcept(false);
 #endif
 
   /** \brief Tag a run as transfered by O2O
    *  \param partitionName The partition used for the run
    *  \param runNumber The number of the run
    */
-  void setO2ORun(std::string partitionName, unsigned int runNumber) throw (FecExceptionHandler);
+  void setO2ORun(std::string partitionName, unsigned int runNumber) noexcept(false);
 
   /** \brief return the database version
    */
-  double getDbVersion ( ) throw (FecExceptionHandler) ;
+  double getDbVersion ( ) noexcept(false) ;
 
   /** \brief return the database size
    */
-  double getDbSize ( ) throw (FecExceptionHandler) ;
+  double getDbSize ( ) noexcept(false) ;
 
   /** \brief Update the comment of the run
    *  \param partitionName The partition used for the run
    *  \param runNumber The number of the run
    *  \param newComment The new comment
    */
-  void updateRunComment(std::string partitionName, unsigned int runNumber, std::string newComment) throw (FecExceptionHandler);
+  void updateRunComment(std::string partitionName, unsigned int runNumber, std::string newComment) noexcept(false);
 
   /** \brief Retrieve the partition names
    *  \return A list with all the partition names.
    */
-  std::list<std::string> getAllPartitionNames() throw (FecExceptionHandler);
+  std::list<std::string> getAllPartitionNames() noexcept(false);
 
   /** \brief Retrieve the partition names for a given run
    *  \return A list with all the partition names.
    */
-  std::list<std::string> getAllPartitionNames( unsigned int runNumber ) throw (FecExceptionHandler) ;
+  std::list<std::string> getAllPartitionNames( unsigned int runNumber ) noexcept(false) ;
 
   /** \brief Retrieve the partition names from the current state
    *  \return A list with all the partition names.
    */
-  std::list<std::string> getAllPartitionNamesFromCurrentState() throw (FecExceptionHandler);
+  std::list<std::string> getAllPartitionNamesFromCurrentState() noexcept(false);
 
   /** \brief Retrieve the state names
    *  \return A list with all the state names. YOU have to delete that list!
    */
-  std::list<std::string> getAllStateHistoryNames() throw (FecExceptionHandler);
+  std::list<std::string> getAllStateHistoryNames() noexcept(false);
 
   /** \brief Get all the Fec versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllFecVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllFecVersions (std::string partitionName) noexcept(false);
 
   /** \brief Get all the Fed versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllFedVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllFedVersions (std::string partitionName) noexcept(false);
 
   /** \brief Get all the Dcu Info versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllDcuInfoVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllDcuInfoVersions (std::string partitionName) noexcept(false);
 
   /** \brief Get all the Connection versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllConnectionVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllConnectionVersions (std::string partitionName) noexcept(false);
 
   /** \brief Get all the DcuPsuMap versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllDcuPsuMapVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllDcuPsuMapVersions (std::string partitionName) noexcept(false);
 
   /** \brief Get all the mask versions
    *  \return An array of TkVersion. 
    */
-  tkVersionVector &getAllMaskVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector &getAllMaskVersions (std::string partitionName) noexcept(false);
 
   /** \brief get the state history for the current state
    */
-  unsigned int getCurrentStateHistoryId() throw (FecExceptionHandler) ;
+  unsigned int getCurrentStateHistoryId() noexcept(false) ;
 
 #endif
 
@@ -358,22 +358,22 @@ class TkDcuInfoFactory: public DeviceFactoryInterface {
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
-  TkDcuInfo *getTkDcuInfo ( unsigned long dcuHardId ) throw ( FecExceptionHandler ) ;
+  TkDcuInfo *getTkDcuInfo ( unsigned long dcuHardId ) noexcept(false) ;
 
   /** \brief Upload the description in the output
    */
   void setTkDcuInfo ( tkDcuInfoVector vInfo ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief upload an hash_map in the output
    */
   void setTkDcuInfo ( Sgi::hash_map<unsigned long, TkDcuInfo *> vInfo ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief upload the hash_map (attribut of the class) in the output
    */
   void setTkDcuInfo ( ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** Delete the components of a vector
    */
diff --git a/FecSoftwareV3_0/generic/include/TkDcuPsuMap.h b/FecSoftwareV3_0/generic/include/TkDcuPsuMap.h
index 730372e..44ed624 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuPsuMap.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuPsuMap.h
@@ -83,11 +83,11 @@ class TkDcuPsuMap {
   
   /** Constructor
    */
-  TkDcuPsuMap ( tscType32 dcuHardId, std::string psuName, std::string psuType, keyType fecIndex = 0, std::string dcuType = "NONE" ) throw (FecExceptionHandler) ;
+  TkDcuPsuMap ( tscType32 dcuHardId, std::string psuName, std::string psuType, keyType fecIndex = 0, std::string dcuType = "NONE" ) noexcept(false) ;
 
   /** Constructor with the parameter definition extracted from the database or XML file
    */
-  TkDcuPsuMap ( parameterDescriptionNameType parameterNames ) throw (FecExceptionHandler) ;
+  TkDcuPsuMap ( parameterDescriptionNameType parameterNames ) noexcept(false) ;
   
   /** Set the DCU hard ID
    */
@@ -99,7 +99,7 @@ class TkDcuPsuMap {
 
   /** Set the PSU Name
    */
-  void setPsuName ( std::string psuName ) throw (FecExceptionHandler) ;
+  void setPsuName ( std::string psuName ) noexcept(false) ;
 
   /** Get the PSU Name
    */
diff --git a/FecSoftwareV3_0/generic/include/TkDcuPsuMapFactory.h b/FecSoftwareV3_0/generic/include/TkDcuPsuMapFactory.h
index 99aad79..a7aef90 100755
--- a/FecSoftwareV3_0/generic/include/TkDcuPsuMapFactory.h
+++ b/FecSoftwareV3_0/generic/include/TkDcuPsuMapFactory.h
@@ -76,7 +76,7 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
   /** \brief Build a FEC factory for database
    */
   TkDcuPsuMapFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Buid a FEC factory for FEC database
    */
@@ -92,7 +92,7 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   void getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief return the Dcu-Psu mapping for control group
@@ -146,7 +146,7 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
 
   /** \brief parse a text file to produce the datapoints and pvss name
    */
-  void setInputTextFile ( std::string inputFileName ) throw (FecExceptionHandler) ;
+  void setInputTextFile ( std::string inputFileName ) noexcept(false) ;
 
   /** \brief Produce a file for PVSS
    */
@@ -163,12 +163,12 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -176,27 +176,27 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
 
   /** \brief Retreive the data from the database
    */
-  void getDcuPsuMapPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) throw (FecExceptionHandler);
+  void getDcuPsuMapPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) noexcept(false);
 
   /** \brief Retreive the data from the database
    */
-  void getPsuNotConnectedPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) throw (FecExceptionHandler);
+  void getPsuNotConnectedPartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) noexcept(false);
 
   /** \brief Retreive the data from the database
    */
-  void getPsuNamePartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) throw (FecExceptionHandler);
+  void getPsuNamePartition ( std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0 ) noexcept(false);
 
 #endif
 
   /** \brief Upload the description in the output
    */
   void setTkDcuPsuMap ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName = "", unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   /** \brief Upload only the psu names in the output for the current version
    */
   void setTkPsuNames ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName = "", unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL ) 
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 
   // --------------------------------------------------------------------------------------------------------
   //
@@ -207,7 +207,7 @@ class TkDcuPsuMapFactory: public DeviceFactoryInterface {
 #ifdef DATABASE
   /** \brief This method calls trhe validation of the cooling loops
    */
-  bool checkTKCCCoolingLoop ( std::string partitionName, std::vector<std::pair<std::string, bool> > &coolingLoopResult ) throw ( FecExceptionHandler, oracle::occi::SQLException, std::string ) ;
+  bool checkTKCCCoolingLoop ( std::string partitionName, std::vector<std::pair<std::string, bool> > &coolingLoopResult ) noexcept(false) ;
 #endif
 
   /** delete the contents of a vector of PSU map
diff --git a/FecSoftwareV3_0/generic/include/TkDiagErrorAnalyser.h b/FecSoftwareV3_0/generic/include/TkDiagErrorAnalyser.h
index a727385..f9fddb0 100644
--- a/FecSoftwareV3_0/generic/include/TkDiagErrorAnalyser.h
+++ b/FecSoftwareV3_0/generic/include/TkDiagErrorAnalyser.h
@@ -148,7 +148,7 @@ class TkDiagErrorAnalyser {
 #ifdef DATABASE
   /** Build the PSU name to DCU hard ID
    */
-  void buildDatabaseInformation ( std::string partitionName, std::string login, std::string password, std::string path ) throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+  void buildDatabaseInformation ( std::string partitionName, std::string login, std::string password, std::string path ) noexcept(false) ;
 #endif
 
  public:
@@ -157,9 +157,9 @@ class TkDiagErrorAnalyser {
    */
   TkDiagErrorAnalyser ( std::string partitionName, std::string login = "nil", std::string password = "nil", std::string path = "nil" ) 
 #ifdef DATABASE
-    throw (oracle::occi::SQLException, FecExceptionHandler) ;
+    noexcept(false) ;
 #else 
-  throw (FecExceptionHandler) ;
+  noexcept(false) ;
 #endif
 
   /** \brief Destroy the database access
@@ -181,27 +181,27 @@ class TkDiagErrorAnalyser {
 
   /** \brief Set an error for a given FEC
    */
-  void setFecError ( std::string fecHardwareId, unsigned int ring = NOLIFEINPARAMETER, unsigned int ccu = NOLIFEINPARAMETER, unsigned int channel = NOLIFEINPARAMETER, unsigned int i2cAddress = NOLIFEINPARAMETER ) throw (std::string) ;
+  void setFecError ( std::string fecHardwareId, unsigned int ring = NOLIFEINPARAMETER, unsigned int ccu = NOLIFEINPARAMETER, unsigned int channel = NOLIFEINPARAMETER, unsigned int i2cAddress = NOLIFEINPARAMETER ) noexcept(false) ;
 
   /** \brief Set an error for a given FED
    */
-  void setFedSoftIdError ( unsigned int fedSoftId, unsigned int fedChannel = NOLIFEINPARAMETER ) throw (std::string) ;
+  void setFedSoftIdError ( unsigned int fedSoftId, unsigned int fedChannel = NOLIFEINPARAMETER ) noexcept(false) ;
 
   /** \brief Set an error for a given FED
    */
-  void setFedCrateIdError ( unsigned int crateId, unsigned int slot, unsigned int fedChannel = NOLIFEINPARAMETER ) throw (std::string) ;
+  void setFedCrateIdError ( unsigned int crateId, unsigned int slot, unsigned int fedChannel = NOLIFEINPARAMETER ) noexcept(false) ;
 
   /** \brief Set an error for a given PSU channel
    */
-  void setPsuError ( std::string psuName ) throw (std::string) ;
+  void setPsuError ( std::string psuName ) noexcept(false) ;
 
   /** \brief Set an error for a given DCU hard ID
    */
-  void setDcuHardIdError ( unsigned int dcuHardId ) throw (std::string) ;
+  void setDcuHardIdError ( unsigned int dcuHardId ) noexcept(false) ;
 
   /** \brief Set an error for given det id 
    */
-  void setDetIdError ( unsigned int detId ) throw (std::string) ;
+  void setDetIdError ( unsigned int detId ) noexcept(false) ;
 
   /** \brief Get the error counter by FEC
    */
diff --git a/FecSoftwareV3_0/generic/include/TkIdVsHostnameFactory.h b/FecSoftwareV3_0/generic/include/TkIdVsHostnameFactory.h
index b27dccb..9b43613 100755
--- a/FecSoftwareV3_0/generic/include/TkIdVsHostnameFactory.h
+++ b/FecSoftwareV3_0/generic/include/TkIdVsHostnameFactory.h
@@ -78,7 +78,7 @@ class TkIdVsHostnameFactory: public DeviceFactoryInterface {
   /** \brief Build a TkIdVsHostname factory for database
    */
   TkIdVsHostnameFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Build a TkIdVsHostname factory for database
    */
@@ -117,11 +117,11 @@ class TkIdVsHostnameFactory: public DeviceFactoryInterface {
 
   /** \brief Add a new file name in the descriptions
    */
-  void addFileName ( std::string fileName ) throw (FecExceptionHandler) ;
+  void addFileName ( std::string fileName ) noexcept(false) ;
 
   /** \brief set a new input file
    */
-  void setInputFileName ( std::string inputFileName ) throw (FecExceptionHandler) ;
+  void setInputFileName ( std::string inputFileName ) noexcept(false) ;
 
   // ------------------------------------------------------------------------------------------------------
   // 
@@ -134,12 +134,12 @@ class TkIdVsHostnameFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -157,53 +157,53 @@ class TkIdVsHostnameFactory: public DeviceFactoryInterface {
    */
   TkIdVsHostnameVector getAllTkIdVsHostname ( unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, bool forceDbReload = false ) 
 #ifdef DATABASE
-    throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+    noexcept(false) ;
 #else
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
   TkIdVsHostnameVector getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, bool forceDbReload = false ) 
 #ifdef DATABASE
-    throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+    noexcept(false) ;
 #else
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
   TkIdVsHostnameDescription *getAllTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, bool forceDbReload = false ) 
 #ifdef DATABASE
-    throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+    noexcept(false) ;
 #else
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Retreive the descriptions for the given devices from the input
    */
   void getSubDetectorCrateNumberFromHostname ( std::string hostname, std::string &subDetector, unsigned int &crateNumber, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0, bool forceDbReload = false ) 
 #ifdef DATABASE
-    throw ( FecExceptionHandler, oracle::occi::SQLException ) ;
+    noexcept(false) ;
 #else
-    throw ( FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   /** \brief Upload a new version of TkIdVsHostnameDescriptions
    */
-  void setTkIdVsHostnameDescription ( TkIdVsHostnameVector tkDcuConversionFactors, bool major = false) throw ( FecExceptionHandler ) ;
+  void setTkIdVsHostnameDescription ( TkIdVsHostnameVector tkDcuConversionFactors, bool major = false) noexcept(false) ;
 
   /** \brief upload the hash_map (attribut of the class) in the output
    */
-  void setTkIdVsHostnameDescription ( bool major = false ) throw ( FecExceptionHandler ) ;
+  void setTkIdVsHostnameDescription ( bool major = false ) noexcept(false) ;
 
   /** \brief return the crate ID
    */
-  unsigned int getFedCrate ( unsigned int fedId ) throw ( FecExceptionHandler ) ;
+  unsigned int getFedCrate ( unsigned int fedId ) noexcept(false) ;
 
   /** \brief return the crate slot
    */
-  unsigned int getFedSlot ( unsigned int fedId ) throw ( FecExceptionHandler ) ;
+  unsigned int getFedSlot ( unsigned int fedId ) noexcept(false) ;
 
   /** \brief delete a vector of TkIdVsHostnameDescription
    */
diff --git a/FecSoftwareV3_0/generic/include/TkMaskModulesFactory.h b/FecSoftwareV3_0/generic/include/TkMaskModulesFactory.h
index 783581e..722e6cc 100644
--- a/FecSoftwareV3_0/generic/include/TkMaskModulesFactory.h
+++ b/FecSoftwareV3_0/generic/include/TkMaskModulesFactory.h
@@ -56,7 +56,7 @@ class TkMaskModulesFactory: public DeviceFactoryInterface {
   /** \brief Build a FEC factory for database
    */
   TkMaskModulesFactory ( std::string login, std::string password, std::string path, bool threaded = false )
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Buid a FEC factory for FEC database
    */
@@ -72,7 +72,7 @@ class TkMaskModulesFactory: public DeviceFactoryInterface {
   /** \brief retreive information concerning the partition versus the version depending of the parameters passed 
    */
   void getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-    throw (oracle::occi::SQLException, FecExceptionHandler ) ;
+    noexcept(false) ;
 #endif
 
   // ------------------------------------------------------------------------------------------------------
@@ -100,12 +100,12 @@ class TkMaskModulesFactory: public DeviceFactoryInterface {
   /** \brief Create the database access
    */
   void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
   
   /** \brief Create the database access with the configuration given by the env. variable CONFDB
    */
   void setDatabaseAccess ( ) 
-    throw ( oracle::occi::SQLException ) ;
+    noexcept(false) ;
 
   /** \brief Set the database access
    */
@@ -114,101 +114,101 @@ class TkMaskModulesFactory: public DeviceFactoryInterface {
   /**
    * \brief Return the mask version for partition
    */
-  void getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) noexcept(false) ;
 
   /**\brief copy a mask from a version for a given partition to a new major version
    */
-  void copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief copy a mask from the current version for a given partition to a new major version
    */
-  void copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief Reset the masking version for a given partition. This method retreive the versions before the mask and put it to the StateHistory/CurrentState
    */
-  void resetMask ( std::string pPartitionName ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void resetMask ( std::string pPartitionName ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED channel
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /**
    * \brief Disable all modules for a FED channel and a given APV (1 or 2)
    */
-  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 
   /** 
    * \brief Disable all modules for a FEC
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel, device
    */
-  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /** 
    * \brief Disable all modules for a FEC, ring, CCU, channel, device
    */
-  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask a module with DCU hard ID
    */
-  void maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask a module with DET ID
    */
-  void maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
   
   /**
    * \brief mask all modules related to PSU name
    */
-  void maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) ;
+  void maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor ) noexcept(false) ;
 #endif
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/XMLCommissioningAnalysis.h b/FecSoftwareV3_0/generic/include/XMLCommissioningAnalysis.h
index 387770e..1b556e6 100755
--- a/FecSoftwareV3_0/generic/include/XMLCommissioningAnalysis.h
+++ b/FecSoftwareV3_0/generic/include/XMLCommissioningAnalysis.h
@@ -118,24 +118,24 @@ public:
 	/** 
 	 * @brief Default constructor
 	 */
-	XMLCommissioningAnalysis() throw ( FecExceptionHandler );
+	XMLCommissioningAnalysis() noexcept(false);
 
 	/** 
 	 * @brief Constructor with xml buffer
 	 */
-	XMLCommissioningAnalysis( const XMLByte* xmlBuffer ) throw ( FecExceptionHandler );
+	XMLCommissioningAnalysis( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
 	/** 
 	 * @brief Constructor with database access
 	 */
-	XMLCommissioningAnalysis( DbCommissioningAnalysisAccess *dbAccess ) throw ( FecExceptionHandler ) ;
+	XMLCommissioningAnalysis( DbCommissioningAnalysisAccess *dbAccess ) noexcept(false) ;
 #endif
 
 	/** 
 	 * @brief Constructor with file access
 	 */
-	XMLCommissioningAnalysis( std::string xmlFileName ) throw ( FecExceptionHandler );
+	XMLCommissioningAnalysis( std::string xmlFileName ) noexcept(false);
 
 	/** 
 	 * @brief Deletes the XMLCommissioningAnalysis
@@ -180,14 +180,14 @@ public:
 	/** 
 	 * @brief Sets the vector of descriptions
 	 */
-	void setDescriptions( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+	void setDescriptions( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
 	/**
 	 * @brief Uploads analysis into a ASCII XML file
 	 * @param outputFileName - Ouput filename to be filled
 	 */
-	void uploadAnalysis( std::string outputFileName ) throw ( FecExceptionHandler );
+	void uploadAnalysis( std::string outputFileName ) noexcept(false);
 
 
 	/**
@@ -198,7 +198,7 @@ public:
 	 * @param updateCurrentState - Indicates whether partition state has to be updated or not
 	 * @return The global state analysis version to be associated to the current state
 	 */
-	uint32_t uploadAnalysis( bool updateCurrentState ) throw ( FecExceptionHandler );
+	uint32_t uploadAnalysis( bool updateCurrentState ) noexcept(false);
 
 	/**
 	 * @brief This method has to be called by the device factory user whenever @uploadAnalysis has 
@@ -208,7 +208,7 @@ public:
 	void uploadAnalysisState( uint32_t uploadedVersion );
 
 	std::vector<CommissioningAnalysisDescription*> getCalibrationData( uint32_t runNumber,
-			std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+			std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
   /**
@@ -220,7 +220,7 @@ public:
    * @param type - analysis type
    * @return Vector of pair <run/ <versionMajor/versionMinor> > associated to the partition
    */
-  HashMapRunVersion getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+  HashMapRunVersion getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
   /**
    * @brief Retrieves analysis result descriptions (of the specified type) associated to a given run and partition
@@ -233,7 +233,7 @@ public:
    * @return Vector of analysis descriptions
    */
   std::vector<CommissioningAnalysisDescription*> getAnalysisHistory( std::string partitionName,
-			  uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler );
+			  uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) noexcept(false);
 
 
 
@@ -242,7 +242,7 @@ public:
    * @param globalAnalsysVersion - global version from which retreiving versions
    * @return Map of analysis type / analysis versions
    */
-  HashMapAnalysisVersions getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( FecExceptionHandler );
+  HashMapAnalysisVersions getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false);
 
 
 
diff --git a/FecSoftwareV3_0/generic/include/XMLCommonFec.h b/FecSoftwareV3_0/generic/include/XMLCommonFec.h
index f5db4e8..a561c54 100755
--- a/FecSoftwareV3_0/generic/include/XMLCommonFec.h
+++ b/FecSoftwareV3_0/generic/include/XMLCommonFec.h
@@ -105,22 +105,22 @@ class XMLCommonFec {
   /**
    * \brief Initialize Xerces XMLPlatformUtils and create a parser
    */
-  void init() throw (FecExceptionHandler);
+  void init() noexcept(false);
 
   /**
    * \brief Reads the parameter values from an XML buffer
    */
-  void readXMLBuffer(const XMLByte* buffer) throw (FecExceptionHandler);
+  void readXMLBuffer(const XMLByte* buffer) noexcept(false);
 
   /**
    * \brief Reads the parameter values from an XML file
    */
-  void readXMLFile(std::string xmlFileName) throw (FecExceptionHandler);
+  void readXMLFile(std::string xmlFileName) noexcept(false);
 
   /**
    * \brief Creates a SAX parser
    */
-  void createParser() throw (FecExceptionHandler);
+  void createParser() noexcept(false);
   
 #ifdef DATABASE
   /**
@@ -142,11 +142,11 @@ class XMLCommonFec {
 
   /** \brief Constructor with xml buffer
    */
-  XMLCommonFec ( const XMLByte* buffer, bool toBeDeleted = true ) throw (FecExceptionHandler);
+  XMLCommonFec ( const XMLByte* buffer, bool toBeDeleted = true ) noexcept(false);
 
   /** \brief Constructor with file access
    */
-  XMLCommonFec ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLCommonFec ( std::string xmlFileName ) noexcept(false);
 
   /** \brief Deletes the device vector private attribute
    */
@@ -162,15 +162,15 @@ class XMLCommonFec {
   
   /** \brief Parses the xml Buffer using the SAX interface
    */
-  void parseXMLBuffer( ) throw (FecExceptionHandler);
+  void parseXMLBuffer( ) noexcept(false);
 
   /** \brief Return the non fatal parsing error number
    */
-  int getParseErrorCount( ) throw (FecExceptionHandler);
+  int getParseErrorCount( ) noexcept(false);
 
   /** \brief Return the non fatal parsing error messages
    */
-  std::vector<std::string> *getParseErrorMessages( ) throw (FecExceptionHandler);
+  std::vector<std::string> *getParseErrorMessages( ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sets the database access attribute
@@ -183,7 +183,7 @@ class XMLCommonFec {
 
   /** \brief This method sends a request to the database and parse the input source retrieved from database
    */
-  void parseDatabaseResponse ( ) throw (FecExceptionHandler);
+  void parseDatabaseResponse ( ) noexcept(false);
 
   /** \brief Sets the SQL request
    */
@@ -208,7 +208,7 @@ class XMLCommonFec {
 
   /** \brief Writes the parameter values into an XML file
    */
-  static void writeXMLFile(std::string xmlBuffer, std::string xmlFileName) throw (FecExceptionHandler);
+  static void writeXMLFile(std::string xmlBuffer, std::string xmlFileName) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Display an XML clob buffer
diff --git a/FecSoftwareV3_0/generic/include/XMLConnection.h b/FecSoftwareV3_0/generic/include/XMLConnection.h
index 5c5b8a1..ce9fce9 100755
--- a/FecSoftwareV3_0/generic/include/XMLConnection.h
+++ b/FecSoftwareV3_0/generic/include/XMLConnection.h
@@ -59,21 +59,21 @@ class XMLConnection: public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLConnection () throw (FecExceptionHandler);
+  XMLConnection () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLConnection ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLConnection ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor with xml buffer
    */
-  XMLConnection ( DbConnectionsAccess *dbAccess ) throw (FecExceptionHandler);
+  XMLConnection ( DbConnectionsAccess *dbAccess ) noexcept(false);
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLConnection ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLConnection ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLConnection
    */
@@ -99,23 +99,23 @@ class XMLConnection: public XMLCommonFec {
 #ifdef DATABASE
   /** retreive buffer from database for a given partition
    */
-  void parseDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
+  void parseDatabaseResponse(std::string partitionName) noexcept(false);
 
   /** retreive buffer from database for a given partition and version
    */
-  void parseDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool retreiveApvNotConnected = false) throw (FecExceptionHandler);
+  void parseDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool retreiveApvNotConnected = false) noexcept(false);
 
   /** retreive from the database the connection list for a given partition
    */
-  ConnectionVector getConnections (std::string partitionName) throw (FecExceptionHandler) ;
+  ConnectionVector getConnections (std::string partitionName) noexcept(false) ;
 
   /** retreive from the database the connection list for a given partition and a given version
    */
-  ConnectionVector getConnections (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (FecExceptionHandler) ;
+  ConnectionVector getConnections (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) ;
 
   /** retreive from the database the APV which have no connection
    */
-  ConnectionVector getApvNotConnected (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (FecExceptionHandler) ;
+  ConnectionVector getApvNotConnected (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) ;
 #endif
 
   /** Generate the XML buffer for DB or for file
@@ -124,24 +124,24 @@ class XMLConnection: public XMLCommonFec {
 
   /** return the vector of connection
    */
-  ConnectionVector getConnections () throw (FecExceptionHandler) ;
+  ConnectionVector getConnections () noexcept(false) ;
 
   /** \brief Writes the device vector parameter in a ASCII file
    */
-  void setFileConnections ( ConnectionVector cVector, std::string outputFileName ) throw (FecExceptionHandler);
+  void setFileConnections ( ConnectionVector cVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the device vector attribute in a ASCII file
    */
-  void setFileConnections ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setFileConnections ( std::string outputFileName ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sends the descriptions from the description to the database
    */
-  void setDbConnectionDescription ( std::string partitionName, ConnectionVector cVector, unsigned int versionUpdate ) throw (FecExceptionHandler, oracle::occi::SQLException);
+  void setDbConnectionDescription ( std::string partitionName, ConnectionVector cVector, unsigned int versionUpdate ) noexcept(false);
 
   /** \brief Sends the descriptions from the description to the database
    */
-  void setDbConnectionDescription ( std::string partitionName, unsigned int versionUpdate ) throw (FecExceptionHandler, oracle::occi::SQLException);
+  void setDbConnectionDescription ( std::string partitionName, unsigned int versionUpdate ) noexcept(false);
 #endif
 
 };
diff --git a/FecSoftwareV3_0/generic/include/XMLFec.h b/FecSoftwareV3_0/generic/include/XMLFec.h
index 4e6bf89..4e5591c 100755
--- a/FecSoftwareV3_0/generic/include/XMLFec.h
+++ b/FecSoftwareV3_0/generic/include/XMLFec.h
@@ -49,17 +49,17 @@ class XMLFec: public XMLCommonFec {
 
   /** \brief Constructor with xml buffer
    */
-  XMLFec ( const XMLByte* buffer ) throw (FecExceptionHandler);
+  XMLFec ( const XMLByte* buffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor whith database access
    */
-  XMLFec ( DbAccess *dbAccess ) throw (FecExceptionHandler);
+  XMLFec ( DbAccess *dbAccess ) noexcept(false);
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLFec ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLFec ( std::string xmlFileName ) noexcept(false);
 
   /** \brief Deletes the device vector private attribute
    */
@@ -112,19 +112,19 @@ class XMLFec: public XMLCommonFec {
 #ifdef DATABASE
   /** \brief This method sends a request to the database and parse the input source retrieved from database
    */
-  void parseDatabaseResponse ( std::string partitionName ) throw (FecExceptionHandler);
+  void parseDatabaseResponse ( std::string partitionName ) noexcept(false);
 
   /** \brief This method sends a request to the database and parse the input source retrieved from database
    */
-  void parseDatabaseResponse ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor ) throw (FecExceptionHandler) ;
+  void parseDatabaseResponse ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor ) noexcept(false) ;
 
   /** \brief This method sends a request to the database and parse the input source retrieved from database
    */
-  void parseDatabaseResponse ( std::string partitionName,  std::string fecHardId ) throw (FecExceptionHandler);
+  void parseDatabaseResponse ( std::string partitionName,  std::string fecHardId ) noexcept(false);
 
   /** \brief This method sends a request to the database and parse the input source retrieved from database
    */
-  void parseDatabaseResponse ( std::string partitionName,  std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) ;
+  void parseDatabaseResponse ( std::string partitionName,  std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) ;
 #endif
 
   /** \brief prototype for the parser
diff --git a/FecSoftwareV3_0/generic/include/XMLFecCcu.h b/FecSoftwareV3_0/generic/include/XMLFecCcu.h
index 3fdcb42..185eb47 100755
--- a/FecSoftwareV3_0/generic/include/XMLFecCcu.h
+++ b/FecSoftwareV3_0/generic/include/XMLFecCcu.h
@@ -52,16 +52,16 @@ class XMLFecCcu: public XMLCommonFec {
 
   /** \brief Parse the inputSource and gets a pointer on the ccu vector private attribute
    */
-  ccuVector getCcusFromBuffer ( ) throw (FecExceptionHandler);
+  ccuVector getCcusFromBuffer ( ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Gets a pointer on the ccu vector private attribute from database
    */
-  ccuVector getCcusFromDb (std::string partitionName ) throw (FecExceptionHandler);
+  ccuVector getCcusFromDb (std::string partitionName ) noexcept(false);
 
   /** \brief Gets a pointer on the ccu vector private attribute from database
    */
-  ccuVector getCcusFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler);
+  ccuVector getCcusFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot ) noexcept(false);
 #endif
 
   /** \brief clear the temporary CCU vector
@@ -88,25 +88,25 @@ class XMLFecCcu: public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLFecCcu () throw (FecExceptionHandler);
+  XMLFecCcu () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLFecCcu ( const XMLByte* xmlBuffer, bool toBeDeleted = true ) throw (FecExceptionHandler);
+  XMLFecCcu ( const XMLByte* xmlBuffer, bool toBeDeleted = true ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor whith database access
    */
-  XMLFecCcu ( DbFecAccess *dbAccess ) throw (FecExceptionHandler) ;
+  XMLFecCcu ( DbFecAccess *dbAccess ) noexcept(false) ;
 
   /** \brief Constructor whith database access
    */
-  XMLFecCcu ( DbFecAccess *dbAccess, std::string partitionName, std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler);
+  XMLFecCcu ( DbFecAccess *dbAccess, std::string partitionName, std::string fecHardId, unsigned int ringSlot ) noexcept(false);
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLFecCcu ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLFecCcu ( std::string xmlFileName ) noexcept(false);
 
   /** \brief Deletes the XMLFecCcu
    */
@@ -122,7 +122,7 @@ class XMLFecCcu: public XMLCommonFec {
 
   /** \brief Sets the ccu vector private attribute
    */
-  //  void setCcuVector (ccuVector *cVector) throw (FecExceptionHandler);
+  //  void setCcuVector (ccuVector *cVector) noexcept(false);
 
   /** \brief parse the buffer
    */
@@ -135,84 +135,84 @@ class XMLFecCcu: public XMLCommonFec {
 #ifdef DATABASE
   /** \brief Gets a pointer on a new TkRingDescription object from database (with its CCUs inside)
    */
-  tkringVector getRingFromDb (std::string partitionName ) throw (FecExceptionHandler);
+  tkringVector getRingFromDb (std::string partitionName ) noexcept(false);
 
   /** \brief Gets a pointer on a new TkRingDescription object from construction database (with its CCUs inside)
    */
-  TkRingDescription *getRingFromDb (std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler);
+  TkRingDescription *getRingFromDb (std::string fecHardId, unsigned int ringSlot ) noexcept(false);
 
   /** \brief Gets a pointer on a new TkRingDescription object from database (with its CCUs inside)
    */
-  TkRingDescription *getRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler);
+  TkRingDescription *getRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot ) noexcept(false);
 
   /** \brief called to get all the rings for partition or partition/fec/ring
    */
-  void getVectorRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) throw (FecExceptionHandler) ;
+  void getVectorRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) noexcept(false) ;
 
 #endif
 
   /** \brief Returns a pointer on the <I>ringDescription_</I> private attribute
    */
-  TkRingDescription *getRing () throw (FecExceptionHandler);
+  TkRingDescription *getRing () noexcept(false);
 
   /** \brief Parse the inputSource and gets a pointer on the <I>ringDescription_</I> private attribute
    */
-  TkRingDescription *getRingFromBuffer (std::string fecHardwareId, unsigned int ringSlot) throw (FecExceptionHandler);
+  TkRingDescription *getRingFromBuffer (std::string fecHardwareId, unsigned int ringSlot) noexcept(false);
 
   /** \brief Parse the inputSource and gets a pointer on the <I>ringDescription_</I> private attribute
    */
-  tkringVector getRingFromBuffer () throw (FecExceptionHandler);
+  tkringVector getRingFromBuffer () noexcept(false);
 
   /** \brief Writes the ccu vector parameter in an ASCII file
    */
-  //  void setCcusToFile ( ccuVector *cVector, std::string outputFileName ) throw (FecExceptionHandler);
+  //  void setCcusToFile ( ccuVector *cVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the <I>ringDescription_</I> attribute in an ASCII file
    */
-  void setRingToFile ( std::string outputFileName) throw (FecExceptionHandler);
+  void setRingToFile ( std::string outputFileName) noexcept(false);
 
   /** \brief Writes the tkring vector parameter in an ASCII file
    */
-  void setRingToFile ( TkRingDescription ringD, std::string outputFileName) throw (FecExceptionHandler);
+  void setRingToFile ( TkRingDescription ringD, std::string outputFileName) noexcept(false);
 
   /** \brief Writes the ccu vector attribute in an ASCII file
    *  It should be used only for DEBUG purposes
    */
-  //  void setCcusToFile ( std::string outputFileName ) throw (FecExceptionHandler);
+  //  void setCcusToFile ( std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the tkring vector attribute in an ASCII file
    *  It should be used only for DEBUG purposes
    */
-  void setRingsToFile ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setRingsToFile ( std::string outputFileName ) noexcept(false);
 
 #ifdef DATABASE
    /* \brief Sends the parameter value from ccu vector to the database
     */ 
-  //  void setCcusToDb ( std::string partitionName, ccuVector *dVector ) throw (FecExceptionHandler);
+  //  void setCcusToDb ( std::string partitionName, ccuVector *dVector ) noexcept(false);
 
 /*   /\** \brief Sends the parameter value from ccu vector to the database */
 /*    *\/ */
-//  void setCcus ( std::string partitionName ) throw (FecExceptionHandler);
+//  void setCcus ( std::string partitionName ) noexcept(false);
 
   /** \brief Sends the parameter value from TkRingDescription to the database
    */
-  void setRingToDb (std::string partitionName, TkRingDescription ringD )  throw (FecExceptionHandler) ;
+  void setRingToDb (std::string partitionName, TkRingDescription ringD )  noexcept(false) ;
 
   /** \brief Configures the database 
    */
-  void dbConfigure(std::string partitionName, boolean newPartition = true) throw (FecExceptionHandler); 
+  void dbConfigure(std::string partitionName, boolean newPartition = true) noexcept(false); 
 
   /** \brief Configures the database 
    */
-  void dbConfigure(std::string partitionName, TkRingDescription ringD, boolean newPartition = true) throw (FecExceptionHandler); 
+  void dbConfigure(std::string partitionName, TkRingDescription ringD, boolean newPartition = true) noexcept(false); 
 
   /** \brief retreive XML Clob from database
    */
-  void parseDatabaseResponse ( std::string partitionName, std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler) ;
+  void parseDatabaseResponse ( std::string partitionName, std::string fecHardId, unsigned int ringSlot ) noexcept(false) ;
 
   /** \brief retreive XML Clob from TKCC database
    */
-  void parseDatabaseResponse ( std::string fecHardId, unsigned int ringSlot ) throw (FecExceptionHandler) ;
+  void parseDatabaseResponse ( std::string fecHardId, unsigned int ringSlot ) noexcept(false) ;
 
 #endif
 
diff --git a/FecSoftwareV3_0/generic/include/XMLFecDcu.h b/FecSoftwareV3_0/generic/include/XMLFecDcu.h
index 873e839..0d2c437 100755
--- a/FecSoftwareV3_0/generic/include/XMLFecDcu.h
+++ b/FecSoftwareV3_0/generic/include/XMLFecDcu.h
@@ -30,21 +30,21 @@ class XMLFecDcu : public XMLFecDevice {
  public:
   /** \brief Default constructor
    */
-  XMLFecDcu ()  throw (FecExceptionHandler);
+  XMLFecDcu ()  noexcept(false);
 
 #ifdef DATABASE
   /** \brief Retreive an XML input source from database
    */
-  XMLFecDcu ( DbFecAccess *dbAccess )  throw (FecExceptionHandler) ;
+  XMLFecDcu ( DbFecAccess *dbAccess )  noexcept(false) ;
 #endif
 
   /** \brief Constructor with xml buffer
    */
-  XMLFecDcu (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) ;
+  XMLFecDcu (const XMLByte* xmlBuffer ) noexcept(false) ;
 
   /** \brief Constructor with file access
    */
-  XMLFecDcu ( std::string xmlFileName ) throw (FecExceptionHandler) ;
+  XMLFecDcu ( std::string xmlFileName ) noexcept(false) ;
 
   /** \brief XMLFecDevice destructor
    */
@@ -57,19 +57,19 @@ class XMLFecDcu : public XMLFecDevice {
 #ifdef DATABASE
   /** \brief retrieve the DCU from the database
    */
-  deviceVector getDevices ( std::string partitionName, unsigned long timeStampStart, unsigned long timeStampStop ) throw (FecExceptionHandler) ;
+  deviceVector getDevices ( std::string partitionName, unsigned long timeStampStart, unsigned long timeStampStop ) noexcept(false) ;
 
   /** \brief retrieve the DCU from the database
    */
-  deviceVector getDevices ( unsigned long dcuHardId, unsigned long timeStampStart, unsigned long timeStampStop ) throw (FecExceptionHandler) ;
+  deviceVector getDevices ( unsigned long dcuHardId, unsigned long timeStampStart, unsigned long timeStampStop ) noexcept(false) ;
 
   /** \brief retrieve the DCU from the database
    */
-  deviceVector getDevices ( unsigned long timeStampStart, unsigned long timeStampStop ) throw (FecExceptionHandler) ;
+  deviceVector getDevices ( unsigned long timeStampStart, unsigned long timeStampStop ) noexcept(false) ;
 
   /** \brief Store DCU values in the database
    */
-  void setDcuValues (deviceVector dVector, std::string partitionName)  throw (FecExceptionHandler) ;
+  void setDcuValues (deviceVector dVector, std::string partitionName)  noexcept(false) ;
 #endif
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/XMLFecDevice.h b/FecSoftwareV3_0/generic/include/XMLFecDevice.h
index bd8dd8d..825dfcf 100755
--- a/FecSoftwareV3_0/generic/include/XMLFecDevice.h
+++ b/FecSoftwareV3_0/generic/include/XMLFecDevice.h
@@ -94,21 +94,21 @@ class XMLFecDevice : public XMLFec {
   //
   /** \brief Default constructor
    */
-  XMLFecDevice () throw (FecExceptionHandler);
+  XMLFecDevice () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLFecDevice ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLFecDevice ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor whith database access
    */
-  XMLFecDevice ( DbFecAccess *dbAccess ) throw (FecExceptionHandler);
+  XMLFecDevice ( DbFecAccess *dbAccess ) noexcept(false);
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLFecDevice ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLFecDevice ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLFecDevice
    */
@@ -128,11 +128,11 @@ class XMLFecDevice : public XMLFec {
 
   /** \brief Sets the device vector private attribute
    */
-  void setDeviceVector (deviceVector) throw (FecExceptionHandler);
+  void setDeviceVector (deviceVector) noexcept(false);
 
   /** \brief Parse the inputSource and gets a pointer on the device vector private attribute
    */
-  deviceVector getDevices ( ) throw (FecExceptionHandler);
+  deviceVector getDevices ( ) noexcept(false);
 
   /** \brief clear the vector of devices
    */
@@ -141,57 +141,57 @@ class XMLFecDevice : public XMLFec {
 #ifdef DATABASE
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  deviceVector getDevices (std::string partitionName) throw (FecExceptionHandler);
+  deviceVector getDevices (std::string partitionName) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  deviceVector getDevices (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor ) throw (FecExceptionHandler);
+  deviceVector getDevices (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor ) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  deviceVector getDevices (std::string partitionName, std::string fecHardId ) throw (FecExceptionHandler);
+  deviceVector getDevices (std::string partitionName, std::string fecHardId ) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  deviceVector getDevices (std::string partitionName, std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler);
+  deviceVector getDevices (std::string partitionName, std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false);
 #endif
 
   /** \brief Writes the device vector parameter in a ASCII file
    */
-  virtual void setDevices ( deviceVector dVector, std::string outputFileName ) throw (FecExceptionHandler);
+  virtual void setDevices ( deviceVector dVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the device vector attribute in a ASCII file
    */
-  virtual void setDevices ( std::string outputFileName ) throw (FecExceptionHandler);
+  virtual void setDevices ( std::string outputFileName ) noexcept(false);
 
   /** \brief Displays the contents of the device vector attribute
    */
-  void display() throw (FecExceptionHandler);
+  void display() noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDevices ( deviceVector dVector, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (FecExceptionHandler);
+  void setDevices ( deviceVector dVector, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false);
 
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDevices ( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (FecExceptionHandler);
+  void setDevices ( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false);
 
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDevices ( deviceVector dVector, std::string partitionName, unsigned int versionUpdate ) throw (FecExceptionHandler);
+  void setDevices ( deviceVector dVector, std::string partitionName, unsigned int versionUpdate ) noexcept(false);
 
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDevices ( std::string partitionName, unsigned int versionUpdate ) throw (FecExceptionHandler);
+  void setDevices ( std::string partitionName, unsigned int versionUpdate ) noexcept(false);
 
   /** \brief Configures the database
    */
-  unsigned int dbConfigure(std::string partitionName, boolean newPartition = true) throw (FecExceptionHandler);
+  unsigned int dbConfigure(std::string partitionName, boolean newPartition = true) noexcept(false);
 
   /** \brief Configures the database
    */
-  //  unsigned int newDbConfigure(std::string partitionName, boolean newPartition = true) throw (FecExceptionHandler);
+  //  unsigned int newDbConfigure(std::string partitionName, boolean newPartition = true) noexcept(false);
 #endif
 
 } ;
diff --git a/FecSoftwareV3_0/generic/include/XMLFecPiaReset.h b/FecSoftwareV3_0/generic/include/XMLFecPiaReset.h
index 226a81a..89af0bf 100755
--- a/FecSoftwareV3_0/generic/include/XMLFecPiaReset.h
+++ b/FecSoftwareV3_0/generic/include/XMLFecPiaReset.h
@@ -48,21 +48,21 @@ class XMLFecPiaReset : public XMLFec {
   //
   /** \brief Default constructor
    */
-  XMLFecPiaReset () throw (FecExceptionHandler);
+  XMLFecPiaReset () noexcept(false);
 
   /** \brief Constructor whith xml buffer
    */
-  XMLFecPiaReset ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLFecPiaReset ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor whith database access
    */
-  XMLFecPiaReset ( DbPiaResetAccess *dbAccess ) throw (FecExceptionHandler);
+  XMLFecPiaReset ( DbPiaResetAccess *dbAccess ) noexcept(false);
 #endif
   
   /** \brief Constructor with file access
    */
-  XMLFecPiaReset ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLFecPiaReset ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the device vector private attribute 
    */
@@ -78,31 +78,31 @@ class XMLFecPiaReset : public XMLFec {
   
   /** \brief Sets a pointer on the device vector private attribute
    */
-  void setPiaResetVector (piaResetVector) throw (FecExceptionHandler);
+  void setPiaResetVector (piaResetVector) noexcept(false);
   
   /** \brief Parse the InputSource and Gets a pointer on the device vector private attribute
    */
-  piaResetVector getPiaResets ( ) throw (FecExceptionHandler);
+  piaResetVector getPiaResets ( ) noexcept(false);
 
   void clearVector();
 
 #ifdef DATABASE
   /** \brief Parse the InputSource and Gets a pointer on the device vector private attribute
    */
-  piaResetVector getPiaResets (std::string partitionName) throw (FecExceptionHandler);
+  piaResetVector getPiaResets (std::string partitionName) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  piaResetVector getPiaResets (std::string partitionName, std::string fecHardId ) throw (FecExceptionHandler);
+  piaResetVector getPiaResets (std::string partitionName, std::string fecHardId ) noexcept(false);
 #endif
 
   /** \brief Writes the pVector parameter in a ASCII file
    */
-  void setFilePiaResets ( piaResetVector pVector, std::string outputFileName ) throw (FecExceptionHandler);
+  void setFilePiaResets ( piaResetVector pVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the pVector_ attribute in a ASCII file
    */
-  void setFilePiaResets ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setFilePiaResets ( std::string outputFileName ) noexcept(false);
 
   /** \brief Displays the contents of the vector of devices piaResetParameter
    */
@@ -111,11 +111,11 @@ class XMLFecPiaReset : public XMLFec {
 #ifdef DATABASE
   /** \brief Sends the parameter values to the database
    */
-  void setDbPiaResets ( piaResetVector pVector, std::string partitionName ) throw (FecExceptionHandler);
+  void setDbPiaResets ( piaResetVector pVector, std::string partitionName ) noexcept(false);
 
   /** \brief Sends the parameter values to the database
    */
-  void setDbPiaResets ( std::string partitionName ) throw (FecExceptionHandler);
+  void setDbPiaResets ( std::string partitionName ) noexcept(false);
 #endif
 
 } ;
diff --git a/FecSoftwareV3_0/generic/include/XMLTkDcuConversion.h b/FecSoftwareV3_0/generic/include/XMLTkDcuConversion.h
index cafd41b..131227e 100755
--- a/FecSoftwareV3_0/generic/include/XMLTkDcuConversion.h
+++ b/FecSoftwareV3_0/generic/include/XMLTkDcuConversion.h
@@ -51,21 +51,21 @@ class XMLTkDcuConversion : public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLTkDcuConversion () throw (FecExceptionHandler);
+  XMLTkDcuConversion () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLTkDcuConversion ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLTkDcuConversion ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor with xml buffer
    */
-  XMLTkDcuConversion ( DbTkDcuConversionAccess *dbAccess ) throw (FecExceptionHandler);
+  XMLTkDcuConversion ( DbTkDcuConversionAccess *dbAccess ) noexcept(false);
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLTkDcuConversion ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLTkDcuConversion ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLTkDcuConversion
    */
@@ -81,7 +81,7 @@ class XMLTkDcuConversion : public XMLCommonFec {
 
   /** \brief Sets the device vector private attribute
    */
-  void setDcuConversionVector (dcuConversionVector) throw (FecExceptionHandler);
+  void setDcuConversionVector (dcuConversionVector) noexcept(false);
 
   /** \brief parse the buffer
    */
@@ -89,44 +89,44 @@ class XMLTkDcuConversion : public XMLCommonFec {
 
   /** \brief Parse the inputSource and gets a pointer on the device vector private attribute
    */
-  dcuConversionVector getDcuConversions ( ) throw (FecExceptionHandler);
+  dcuConversionVector getDcuConversions ( ) noexcept(false);
 
   /** Clear the vector
    */
   void clearVector();
 
 #ifdef DATABASE
-  void parseDatabaseResponse(tscType32 dcuHardId) throw (FecExceptionHandler);
-  void parseDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
+  void parseDatabaseResponse(tscType32 dcuHardId) noexcept(false);
+  void parseDatabaseResponse(std::string partitionName) noexcept(false);
 
-  dcuConversionVector getDcuConversions (tscType32 dcuHardId) throw (FecExceptionHandler);
-  dcuConversionVector getDcuConversions (std::string partitionName) throw (FecExceptionHandler);
+  dcuConversionVector getDcuConversions (tscType32 dcuHardId) noexcept(false);
+  dcuConversionVector getDcuConversions (std::string partitionName) noexcept(false);
 #endif
 
   /** \brief Writes the device vector parameter in a ASCII file
    */
-  void setDcuConversions ( dcuConversionVector dVector, std::string outputFileName ) throw (FecExceptionHandler);
+  void setDcuConversions ( dcuConversionVector dVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the device vector attribute in a ASCII file
    */
-  void setDcuConversions ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setDcuConversions ( std::string outputFileName ) noexcept(false);
 
   /** \brief Displays the contents of the device vector attribute
    */
-  //void display() throw (FecExceptionHandler);
+  //void display() noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDcuConversions ( dcuConversionVector dVector ) throw (FecExceptionHandler);
+  void setDcuConversions ( dcuConversionVector dVector ) noexcept(false);
 
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDcuConversions ( ) throw (FecExceptionHandler);
+  void setDcuConversions ( ) noexcept(false);
  
   /** \brief Configures the database
    */
-  void dbConfigure() throw (FecExceptionHandler);
+  void dbConfigure() noexcept(false);
 #endif
 
 
diff --git a/FecSoftwareV3_0/generic/include/XMLTkDcuInfo.h b/FecSoftwareV3_0/generic/include/XMLTkDcuInfo.h
index 519ed00..86d8686 100755
--- a/FecSoftwareV3_0/generic/include/XMLTkDcuInfo.h
+++ b/FecSoftwareV3_0/generic/include/XMLTkDcuInfo.h
@@ -90,21 +90,21 @@ class XMLTkDcuInfo : public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLTkDcuInfo () throw (FecExceptionHandler);
+  XMLTkDcuInfo () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLTkDcuInfo ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLTkDcuInfo ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor with database access
    */
-  XMLTkDcuInfo ( DbTkDcuInfoAccess *dbAccess )throw (FecExceptionHandler) ;
+  XMLTkDcuInfo ( DbTkDcuInfoAccess *dbAccess )noexcept(false) ;
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLTkDcuInfo ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLTkDcuInfo ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLTkDcuInfo
    */
@@ -136,7 +136,7 @@ class XMLTkDcuInfo : public XMLCommonFec {
 
   /** \brief Sets the device vector private attribute
    */
-  void setDcuInfoVector (tkDcuInfoVector) throw (FecExceptionHandler);
+  void setDcuInfoVector (tkDcuInfoVector) noexcept(false);
 
   /** \brief Parse the XML buffer
    */
@@ -144,116 +144,116 @@ class XMLTkDcuInfo : public XMLCommonFec {
 
   /** \brief Parse the XML buffer and gets a pointer on the device vector private attribute
    */
-  tkDcuInfoVector getDcuInfos ( ) throw (FecExceptionHandler);
+  tkDcuInfoVector getDcuInfos ( ) noexcept(false);
 
   /** \brief clear the vector of elements
    */
   void clearVector();
 
 #ifdef DATABASE
-  void parseDatabaseResponse(std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0) throw (FecExceptionHandler);
-  void parseDatabaseResponse(unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler);
-  void parseDatabaseResponse() throw (FecExceptionHandler);
-  void parseStateDatabaseResponse() throw (FecExceptionHandler);
-  void parseFecVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseFedVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseDcuInfoVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseConnectionVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseDcuPsuMapVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseMaskVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseRunDatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
-  void parseRunDatabaseResponse() throw (FecExceptionHandler);
-  void parseRunDatabaseResponse(std::string partitionName, int runNumber) throw (FecExceptionHandler);
-  void parseLastRunO2ODatabaseResponse(std::string partitionName) throw (FecExceptionHandler);
+  void parseDatabaseResponse(std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0) noexcept(false);
+  void parseDatabaseResponse(unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false);
+  void parseDatabaseResponse() noexcept(false);
+  void parseStateDatabaseResponse() noexcept(false);
+  void parseFecVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseFedVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseDcuInfoVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseConnectionVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseDcuPsuMapVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseMaskVersionsDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseRunDatabaseResponse(std::string partitionName) noexcept(false);
+  void parseRunDatabaseResponse() noexcept(false);
+  void parseRunDatabaseResponse(std::string partitionName, int runNumber) noexcept(false);
+  void parseLastRunO2ODatabaseResponse(std::string partitionName) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  tkDcuInfoVector getDcuInfos (std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0) throw (FecExceptionHandler);
-  tkDcuInfoVector getAllDcuInfos (unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler);
-  tkDcuInfoVector getAllDcuInfos () throw (FecExceptionHandler);//last version only
+  tkDcuInfoVector getDcuInfos (std::string partitionName, unsigned int majorVersionId = 0, unsigned int minorVersionId = 0) noexcept(false);
+  tkDcuInfoVector getAllDcuInfos (unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false);
+  tkDcuInfoVector getAllDcuInfos () noexcept(false);//last version only
 
   /** \brief Gets a vector of TkState containing all the current states.
    *  YOU have to delete all TkState objects + the vector!
    */
-  tkStateVector getAllCurrentStates () throw (FecExceptionHandler);
+  tkStateVector getAllCurrentStates () noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fec versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllFecVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllFecVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fec versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllDcuInfoVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllDcuInfoVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fec versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllConnectionVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllConnectionVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fec versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllDcuPsuMapVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllDcuPsuMapVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fec versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllMaskVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllMaskVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a vector of TkVersion containing all the Fed versions.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkVersionVector getAllFedVersions (std::string partitionName) throw (FecExceptionHandler);
+  tkVersionVector getAllFedVersions (std::string partitionName) noexcept(false);
 
   /** \brief Gets a TkRun containing the last run.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  TkRun *getLastRun(std::string partitionName) throw (FecExceptionHandler);
+  TkRun *getLastRun(std::string partitionName) noexcept(false);
 
   /** \brief Gets a TkRun containing the given run.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  TkRun *getRun(std::string partitionName, unsigned int runNumber) throw (FecExceptionHandler);
+  TkRun *getRun(std::string partitionName, unsigned int runNumber) noexcept(false);
 
   /** \brief Gets a TkRunVector containing all the Runs of the account.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  tkRunVector getAllRuns() throw (FecExceptionHandler);
+  tkRunVector getAllRuns() noexcept(false);
 
    /** \brief Gets a TkRun containing the last run of O2O.
    *  YOU have to delete all TkVersion objects + the vector!
    */
-  TkRun *getLastO2ORun(std::string partitionName) throw (FecExceptionHandler);
+  TkRun *getLastO2ORun(std::string partitionName) noexcept(false);
  
 #endif
 
 
 /** \brief Writes the device vector parameter in a ASCII file
    */
-  void setDcuInfos ( tkDcuInfoVector dVector, std::string outputFileName ) throw (FecExceptionHandler);
+  void setDcuInfos ( tkDcuInfoVector dVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the device vector attribute in a ASCII file
    */
-  void setDcuInfos ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setDcuInfos ( std::string outputFileName ) noexcept(false);
 
   /** \brief Displays the contents of the device vector attribute
    */
-  //void display() throw (FecExceptionHandler);
+  //void display() noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDcuInfos ( tkDcuInfoVector dVector ) throw (FecExceptionHandler);
+  void setDcuInfos ( tkDcuInfoVector dVector ) noexcept(false);
 
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setDcuInfos ( ) throw (FecExceptionHandler);
+  void setDcuInfos ( ) noexcept(false);
 
   /** \brief Configures the database
    */
-  void dbConfigure() throw (FecExceptionHandler);
+  void dbConfigure() noexcept(false);
 #endif
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/XMLTkDcuPsuMap.h b/FecSoftwareV3_0/generic/include/XMLTkDcuPsuMap.h
index 4d0f081..232a93e 100755
--- a/FecSoftwareV3_0/generic/include/XMLTkDcuPsuMap.h
+++ b/FecSoftwareV3_0/generic/include/XMLTkDcuPsuMap.h
@@ -51,21 +51,21 @@ class XMLTkDcuPsuMap : public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLTkDcuPsuMap () throw (FecExceptionHandler);
+  XMLTkDcuPsuMap () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLTkDcuPsuMap ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLTkDcuPsuMap ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor with database access
    */
-  XMLTkDcuPsuMap ( DbTkDcuPsuMapAccess *dbAccess )throw (FecExceptionHandler) ;
+  XMLTkDcuPsuMap ( DbTkDcuPsuMapAccess *dbAccess )noexcept(false) ;
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLTkDcuPsuMap ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLTkDcuPsuMap ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLTkDcuPsuMap
    */
@@ -85,7 +85,7 @@ class XMLTkDcuPsuMap : public XMLCommonFec {
 
   /** \brief Sets the device vector private attribute
    */
-  void setDcuPsuMapVector (tkDcuPsuMapVector ) throw (FecExceptionHandler);
+  void setDcuPsuMapVector (tkDcuPsuMapVector ) noexcept(false);
 
   /** \brief Parse the XML buffer
    */
@@ -93,51 +93,51 @@ class XMLTkDcuPsuMap : public XMLCommonFec {
 
   /** \brief Parse the XML buffer and gets a pointer on the device vector private attribute
    */
-  tkDcuPsuMapVector getDcuPsuMaps ( ) throw (FecExceptionHandler);
+  tkDcuPsuMapVector getDcuPsuMaps ( ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Retreive the XML clob from the database 
    */
-  void parsePsuNameDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  void parsePsuNameDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
   /** \brief Retreive the XML clob from the database 
    */
-  void parseDcuPsuMapDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  void parseDcuPsuMapDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
   /** \brief Retreive the XML clob from the database 
    */
-  void parsePsuNotConnectedDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  void parsePsuNotConnectedDatabaseResponse(std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
   /** \brief Retreive the PSU names from database
    */
-  tkDcuPsuMapVector getPsuNames (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  tkDcuPsuMapVector getPsuNames (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
   /** \brief Retreive the PSU names from database
    */
-  tkDcuPsuMapVector getDcuPsuMap (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  tkDcuPsuMapVector getDcuPsuMap (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
   /** \brief Retreive the PSU names from database
    */
-  tkDcuPsuMapVector getPsuNotConnected (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) throw (FecExceptionHandler) ;
+  tkDcuPsuMapVector getPsuNotConnected (std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0) noexcept(false) ;
 
 #endif
 
   /** \brief Upload the DCU PSU map in a file
    */
-  void setFileDcuPsuMap (tkDcuPsuMapVector dVector, std::string outputFileName) throw (FecExceptionHandler) ;
+  void setFileDcuPsuMap (tkDcuPsuMapVector dVector, std::string outputFileName) noexcept(false) ;
 
   /** \brief Upload the PSU name in a file
    */
-  void setFilePsuName (tkDcuPsuMapVector dVector, std::string outputFileName) throw (FecExceptionHandler) ;
+  void setFilePsuName (tkDcuPsuMapVector dVector, std::string outputFileName) noexcept(false) ;
 
 #ifdef DATABASE
   /** \brief Upload the DCU PSU map in database
    */
-  void setDbDcuPsuMaps (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) throw (FecExceptionHandler) ;
+  void setDbDcuPsuMaps (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) noexcept(false) ;
 
   /** \brief Upload the PSU names in database
    */
-  void setDbPsuNames (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) throw (FecExceptionHandler) ;
+  void setDbPsuNames (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId = NULL, unsigned int *versionMinorId = NULL) noexcept(false) ;
 #endif
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/XMLTkIdVsHostname.h b/FecSoftwareV3_0/generic/include/XMLTkIdVsHostname.h
index fcb91e7..19a73c2 100755
--- a/FecSoftwareV3_0/generic/include/XMLTkIdVsHostname.h
+++ b/FecSoftwareV3_0/generic/include/XMLTkIdVsHostname.h
@@ -55,21 +55,21 @@ class XMLTkIdVsHostname: public XMLCommonFec {
   //
   /** \brief Default constructor
    */
-  XMLTkIdVsHostname () throw (FecExceptionHandler);
+  XMLTkIdVsHostname () noexcept(false);
 
   /** \brief Constructor with xml buffer
    */
-  XMLTkIdVsHostname ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler);
+  XMLTkIdVsHostname ( const XMLByte* xmlBuffer ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Constructor with database access
    */
-  XMLTkIdVsHostname ( DbTkIdVsHostnameAccess *dbAccess )throw (FecExceptionHandler) ;
+  XMLTkIdVsHostname ( DbTkIdVsHostnameAccess *dbAccess )noexcept(false) ;
 #endif
 
   /** \brief Constructor with file access
    */
-  XMLTkIdVsHostname ( std::string xmlFileName ) throw (FecExceptionHandler);
+  XMLTkIdVsHostname ( std::string xmlFileName ) noexcept(false);
   
   /** \brief Deletes the XMLTkIdVsHostname
    */
@@ -85,7 +85,7 @@ class XMLTkIdVsHostname: public XMLCommonFec {
 
   /** \brief Sets the device vector private attribute
    */
-  void setTkIdVsHostnameVector (TkIdVsHostnameVector) throw (FecExceptionHandler);
+  void setTkIdVsHostnameVector (TkIdVsHostnameVector) noexcept(false);
 
   /** \brief Parse the XML buffer
    */
@@ -97,40 +97,40 @@ class XMLTkIdVsHostname: public XMLCommonFec {
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  TkIdVsHostnameVector getAllTkIdVsHostnameFromFile (  ) throw (FecExceptionHandler) ;
+  TkIdVsHostnameVector getAllTkIdVsHostnameFromFile (  ) noexcept(false) ;
 
 #ifdef DATABASE
-  void parseDatabaseResponse( unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler);
-  void parseDatabaseResponse( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler);
-  void parseDatabaseResponse( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler);
+  void parseDatabaseResponse( unsigned int versionMajor, unsigned int versionMinor ) noexcept(false);
+  void parseDatabaseResponse( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false);
+  void parseDatabaseResponse( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  TkIdVsHostnameVector getAllTkIdVsHostname ( unsigned int versionMajor = 0, unsigned int versionMinor = 0  ) throw (FecExceptionHandler);
+  TkIdVsHostnameVector getAllTkIdVsHostname ( unsigned int versionMajor = 0, unsigned int versionMinor = 0  ) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  TkIdVsHostnameVector getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajor = 0, unsigned int versionMinor = 0 ) throw (FecExceptionHandler);
+  TkIdVsHostnameVector getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajor = 0, unsigned int versionMinor = 0 ) noexcept(false);
 
   /** \brief Gets a pointer on the device vector private attribute from database
    */
-  TkIdVsHostnameVector getTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajor = 0, unsigned int versionMinor = 0 ) throw (FecExceptionHandler);
+  TkIdVsHostnameVector getTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajor = 0, unsigned int versionMinor = 0 ) noexcept(false);
 
 #endif
 
 
 /** \brief Writes the device vector parameter in a ASCII file
    */
-  void setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, std::string outputFileName ) throw (FecExceptionHandler);
+  void setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, std::string outputFileName ) noexcept(false);
 
   /** \brief Writes the device vector attribute in a ASCII file
    */
-  void setTkIdVsHostnameVector ( std::string outputFileName ) throw (FecExceptionHandler);
+  void setTkIdVsHostnameVector ( std::string outputFileName ) noexcept(false);
 
 #ifdef DATABASE
   /** \brief Sends the parameter value from device vector to the database
    */
-  void setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, bool major ) throw (FecExceptionHandler);
+  void setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, bool major ) noexcept(false);
 #endif
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/apvAccess.h b/FecSoftwareV3_0/generic/include/apvAccess.h
index 7f07d66..77ada74 100755
--- a/FecSoftwareV3_0/generic/include/apvAccess.h
+++ b/FecSoftwareV3_0/generic/include/apvAccess.h
@@ -236,7 +236,7 @@ class apvAccess: public deviceAccess {
    */
   static unsigned int getApvValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, apvAccess *> &apvSet, deviceVector &apvVector,
 						   std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/ccuChannelAccess.h b/FecSoftwareV3_0/generic/include/ccuChannelAccess.h
index 2046594..e64a405 100755
--- a/FecSoftwareV3_0/generic/include/ccuChannelAccess.h
+++ b/FecSoftwareV3_0/generic/include/ccuChannelAccess.h
@@ -71,7 +71,7 @@ class ccuChannelAccess {
                      enumDeviceType deviceType,
                      enumAccessModeType accessMask,
                      FecRingDevice *fec) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief Destructor: remove the access into the FecRingDevice class
    */
diff --git a/FecSoftwareV3_0/generic/include/ccuDevice.h b/FecSoftwareV3_0/generic/include/ccuDevice.h
index aacdde0..3e64ccc 100755
--- a/FecSoftwareV3_0/generic/include/ccuDevice.h
+++ b/FecSoftwareV3_0/generic/include/ccuDevice.h
@@ -257,7 +257,7 @@ class ccuDevice {
    * <li>TSCFEC_FECPARAMETERNOTMANAGED: wrong CCU input (ring A/B) value
    * </ul>
    */
-  void setInput ( tscType16 input ) throw (FecExceptionHandler) {
+  void setInput ( tscType16 input ) noexcept(false) {
 
 #ifdef T3TDLEVELCHECK
     if ( (input == 0) || (input == 1) )
@@ -281,7 +281,7 @@ class ccuDevice {
    * <li>TSCFEC_FECPARAMETERNOTMANAGED: wrong CCU output (ring A/B) value
    * </ul>
    */
-  void setOutput ( tscType16 output ) throw (FecExceptionHandler) {
+  void setOutput ( tscType16 output ) noexcept(false) {
     if ( (output == 0) || (output == 1) )
       ccuOutput_    = output   ;
     else {
@@ -315,7 +315,7 @@ class ccuDevice {
    * <li>TSCFEC_FECPARAMETERNOTMANAGED: wrong CCU alarm
    * </ul>
    */
-  bool isCcuAlarmEnable ( tscType16 ccuAlarm ) throw (FecExceptionHandler) {
+  bool isCcuAlarmEnable ( tscType16 ccuAlarm ) noexcept(false) {
 
     if (ccuAlarm > 3) {
       RAISEFECEXCEPTIONHANDLER_INFOSUP (TSCFEC_FECPARAMETERNOTMANAGED,
diff --git a/FecSoftwareV3_0/generic/include/dcuAccess.h b/FecSoftwareV3_0/generic/include/dcuAccess.h
index dbffc37..61ad126 100755
--- a/FecSoftwareV3_0/generic/include/dcuAccess.h
+++ b/FecSoftwareV3_0/generic/include/dcuAccess.h
@@ -108,63 +108,63 @@ class dcuAccess: public deviceAccess {
 
   /**\brief Get all values from an DCU
    */
-  dcuDescription *getValues ( ) throw (FecExceptionHandler) ;
+  dcuDescription *getValues ( ) noexcept(false) ;
 
   /**\brief get the value of DCU hardware address
    */
-  tscType32 getDcuHardId ( ) throw (FecExceptionHandler) ;
+  tscType32 getDcuHardId ( ) noexcept(false) ;
 
   /**\brief get the value of DCU channels
    */
-  tscType16 getDcuChannel ( tscType8 channel, bool setTreg=true ) throw (FecExceptionHandler) ;
+  tscType16 getDcuChannel ( tscType8 channel, bool setTreg=true ) noexcept(false) ;
 
   /** \brief Set DCU control register (CREG)
    */
-  void setDcuCREG( tscType8 value ) throw (FecExceptionHandler) ;
+  void setDcuCREG( tscType8 value ) noexcept(false) ;
 
   /** \brief get the DCU control register (CREG)
    */
-  tscType8 getDcuCREG() throw (FecExceptionHandler) ;
+  tscType8 getDcuCREG() noexcept(false) ;
 
   /** \brief Set DCU test register (TREG)
    */
-  void setDcuTREG( tscType8 value ) throw (FecExceptionHandler) ;
+  void setDcuTREG( tscType8 value ) noexcept(false) ;
 
   /** \brief get the DCU test register (TREG)
    */
-  tscType8 getDcuTREG() throw (FecExceptionHandler) ;
+  tscType8 getDcuTREG() noexcept(false) ;
 
   /**\brief set the DCU test register 
    */
-  void setDcuTestRegister( tscType8 value)throw (FecExceptionHandler) ;
+  void setDcuTestRegister( tscType8 value)noexcept(false) ;
   
   /**\brief read  the DCU test register 
    */
-  tscType8 getDcuTestRegister() throw (FecExceptionHandler) ;
+  tscType8 getDcuTestRegister() noexcept(false) ;
 
   /** \brief Set DCU auxilairy register (AREG)
    */
-  void setDcuAREG( tscType8 value ) throw (FecExceptionHandler) ;
+  void setDcuAREG( tscType8 value ) noexcept(false) ;
 
   /** \brief get the DCU auxiliary register (AREG)
    */
-  tscType8 getDcuAREG() throw (FecExceptionHandler) ;
+  tscType8 getDcuAREG() noexcept(false) ;
 
   /** \brief get the DCU status and data high register (SHREG)
    */
-  tscType8 getDcuSHREG() throw (FecExceptionHandler) ;
+  tscType8 getDcuSHREG() noexcept(false) ;
 
   /** \brief Set DCU data low register (LREG)
    */
-  void setDcuLREG( tscType8 value ) throw (FecExceptionHandler) ;
+  void setDcuLREG( tscType8 value ) noexcept(false) ;
 
   /** \brief get the DCU data low register (LREG)
    */
-  tscType8 getDcuLREG() throw (FecExceptionHandler) ;
+  tscType8 getDcuLREG() noexcept(false) ;
 
   /** \brief returns true if as SEU is detected ( bit 6  of Satais & DataReg = 1 )
    */
-  bool getSeuStatus() throw (FecExceptionHandler);
+  bool getSeuStatus() noexcept(false);
   
   /** DCU Reset function
    */
@@ -174,7 +174,7 @@ class dcuAccess: public deviceAccess {
    */
   static unsigned int getDcuValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, dcuAccess *> &dcuSet, deviceVector &dcuVector,
 						   std::list<FecExceptionHandler *> &errorList, bool ducHardIdOnly = false ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/delay25Access.h b/FecSoftwareV3_0/generic/include/delay25Access.h
index 52f48e7..8d781c0 100755
--- a/FecSoftwareV3_0/generic/include/delay25Access.h
+++ b/FecSoftwareV3_0/generic/include/delay25Access.h
@@ -64,107 +64,107 @@ class delay25Access: public deviceAccess {
 
   /** \brief Get all values from a DELAY25
    */
-  delay25Description *getValues ( ) throw (FecExceptionHandler) ;
+  delay25Description *getValues ( ) noexcept(false) ;
 
   /** \brief Set the value in the specified register
    */
-  void setDelay0 ( tscType8 delay_step ) throw (FecExceptionHandler) ;
+  void setDelay0 ( tscType8 delay_step ) noexcept(false) ;
 
   /** \brief Set the value in the specified register
    */
-  void setDelay1 ( tscType8 delay_step ) throw (FecExceptionHandler) ; 
+  void setDelay1 ( tscType8 delay_step ) noexcept(false) ; 
 
   /** \brief Set the value in the specified register
    */
-  void setDelay2 ( tscType8 delay_step ) throw (FecExceptionHandler) ; 
+  void setDelay2 ( tscType8 delay_step ) noexcept(false) ; 
 
   /** \brief Set the value in the specified register
    */
-  void setDelay3 ( tscType8 delay_step ) throw (FecExceptionHandler) ; 
+  void setDelay3 ( tscType8 delay_step ) noexcept(false) ; 
 
   /** \brief Set the value in the specified register
    */
-  void setDelay4 ( tscType8 delay_step ) throw (FecExceptionHandler) ;
+  void setDelay4 ( tscType8 delay_step ) noexcept(false) ;
  
   /** \brief Set the value in the specified register
    */
-  void set40HzFrequencyMode ( ) throw (FecExceptionHandler) ;
+  void set40HzFrequencyMode ( ) noexcept(false) ;
 
   /** \brief Get the delay
    */
-  tscType8 getDelay0 ( ) throw (FecExceptionHandler) ;
+  tscType8 getDelay0 ( ) noexcept(false) ;
 
   /** \brief Get the delay
    */
-  tscType8 getDelay1 ( ) throw (FecExceptionHandler) ;
+  tscType8 getDelay1 ( ) noexcept(false) ;
 
   /** \brief Get the delay
    */
-  tscType8 getDelay2 ( ) throw (FecExceptionHandler) ;
+  tscType8 getDelay2 ( ) noexcept(false) ;
 
   /** \brief Get the delay
    */
-  tscType8 getDelay3 ( ) throw (FecExceptionHandler) ;
+  tscType8 getDelay3 ( ) noexcept(false) ;
 
   /** \brief Get the delay
    */
-  tscType8 getDelay4 ( ) throw (FecExceptionHandler) ;
+  tscType8 getDelay4 ( ) noexcept(false) ;
 
   /** \brief Get the frequency mode (has to be 40Hz)
    */
-  tscType8 getFrequencyMode ( ) throw (FecExceptionHandler) ;
+  tscType8 getFrequencyMode ( ) noexcept(false) ;
 
   /** \brief return the contents of the CR0 register
    */
-  tscType8 getCR0 ( ) throw (FecExceptionHandler) ; 
+  tscType8 getCR0 ( ) noexcept(false) ; 
 
   /** \brief return the contents of the CR1 register
    */
-  tscType8 getCR1 ( ) throw (FecExceptionHandler) ; 
+  tscType8 getCR1 ( ) noexcept(false) ; 
 
   /** \brief return the contents of the CR2 register
    */
-  tscType8 getCR2 ( ) throw (FecExceptionHandler) ;
+  tscType8 getCR2 ( ) noexcept(false) ;
 
   /** \brief return the contents of the CR3 register
    */
-  tscType8 getCR3 ( ) throw (FecExceptionHandler) ; 
+  tscType8 getCR3 ( ) noexcept(false) ; 
 
   /** \brief return the contents of the CR4 register
    */
-  tscType8 getCR4 ( ) throw (FecExceptionHandler) ; 
+  tscType8 getCR4 ( ) noexcept(false) ; 
 
   /** \brief return the contents of the GCR register
    */
-  tscType8 getGCR ( ) throw (FecExceptionHandler) ;
+  tscType8 getGCR ( ) noexcept(false) ;
 
   /** \brief set the register 0 of the DELAY25
    */
-  void setCR0 ( tscType8 value ) throw (FecExceptionHandler) ; 
+  void setCR0 ( tscType8 value ) noexcept(false) ; 
 
   /** \brief set the register 1 of the DELAY25
    */
-  void setCR1 ( tscType8 value ) throw (FecExceptionHandler) ; 
+  void setCR1 ( tscType8 value ) noexcept(false) ; 
 
   /** \brief set the register 2 of the DELAY25
    */
-  void setCR2 ( tscType8 value ) throw (FecExceptionHandler) ; 
+  void setCR2 ( tscType8 value ) noexcept(false) ; 
 
   /** \brief set the register 3 of the DELAY25
    */
-  void setCR3 ( tscType8 value ) throw (FecExceptionHandler) ;
+  void setCR3 ( tscType8 value ) noexcept(false) ;
 
   /** \brief set the register 4 of the DELAY25
    */
-  void setCR4 ( tscType8 value ) throw (FecExceptionHandler) ; 
+  void setCR4 ( tscType8 value ) noexcept(false) ; 
 
   /** \brief set the register 5 of the DELAY25
    */
-  void setGCR ( tscType8 value ) throw (FecExceptionHandler) ;
+  void setGCR ( tscType8 value ) noexcept(false) ;
 
   /** Array to make a correspondance between the frequency and the mode to set
    */
-  tscType8 getFrequencyModeMap ( tscType8 k ) throw (FecExceptionHandler) ;
+  tscType8 getFrequencyModeMap ( tscType8 k ) noexcept(false) ;
 
   /** Array to make a correspondance between the frequency and the mode to set
    */
@@ -184,15 +184,15 @@ class delay25Access: public deviceAccess {
 
   /** \brief static method to upload from the hardware the devices
    */
-  unsigned int getDelay25ValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, delay25Access *> &delay25Set, deviceVector &delay25Vector, std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) ;
+  unsigned int getDelay25ValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, delay25Access *> &delay25Set, deviceVector &delay25Vector, std::list<FecExceptionHandler *> &errorList ) noexcept(false) ;
 
   /** \brief method for DLL resynchronisation
    */
-  void forceDLLResynchronisation ( ) throw (FecExceptionHandler) ; 
+  void forceDLLResynchronisation ( ) noexcept(false) ; 
 
   /** \brief method to reset IDLL bit
    */
-  void SetIDLLBitToZero ( ) throw (FecExceptionHandler) ;
+  void SetIDLLBitToZero ( ) noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/deltaAccess.h b/FecSoftwareV3_0/generic/include/deltaAccess.h
index 132e388..05e7b5c 100755
--- a/FecSoftwareV3_0/generic/include/deltaAccess.h
+++ b/FecSoftwareV3_0/generic/include/deltaAccess.h
@@ -217,7 +217,7 @@ class deltaAccess : public deviceAccess {
    */
   static unsigned int getDeltaValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, deltaAccess *> &deltaSet, deviceVector &deltaVector,
 								  std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
   
 } ;
 
diff --git a/FecSoftwareV3_0/generic/include/laserdriverAccess.h b/FecSoftwareV3_0/generic/include/laserdriverAccess.h
index 3b4bbca..404828d 100755
--- a/FecSoftwareV3_0/generic/include/laserdriverAccess.h
+++ b/FecSoftwareV3_0/generic/include/laserdriverAccess.h
@@ -86,7 +86,7 @@ class laserdriverAccess: public deviceAccess {
 
   /** \brief Set all values for a laserdriver
    */
-  void setValues ( laserdriverDescription laserdriverValues ) throw (FecExceptionHandler) ;
+  void setValues ( laserdriverDescription laserdriverValues ) noexcept(false) ;
 
   /** \brief Set all values for a laserdriver in multiple frames
    */
@@ -94,33 +94,33 @@ class laserdriverAccess: public deviceAccess {
 
   /** \brief Get all values from a laserdriver
    */
-  laserdriverDescription *getValues ( ) throw (FecExceptionHandler) ;
+  laserdriverDescription *getValues ( ) noexcept(false) ;
 
   /** \brief Set the value in the specified register
    */
-  void setGain ( tscType8 gain ) throw (FecExceptionHandler) ;
+  void setGain ( tscType8 gain ) noexcept(false) ;
 
   /** \brief Set the value in the specified register
    */
-  void setBias ( tscType8 *bias ) throw (FecExceptionHandler) ;
+  void setBias ( tscType8 *bias ) noexcept(false) ;
 
   /** \brief Get the value from the specified register
    */
-  void getBias ( tscType8 *bias ) throw (FecExceptionHandler) ;
+  void getBias ( tscType8 *bias ) noexcept(false) ;
 
   /** \brief Get the value from the specified register
    */
-  tscType8 getGain ( ) throw (FecExceptionHandler) ;
+  tscType8 getGain ( ) noexcept(false) ;
 
   /** \brief returns true if as SEU is detected ( bit 8 of gainReg = 1 )
    */
-  bool getSeuStatus() throw (FecExceptionHandler) ;
+  bool getSeuStatus() noexcept(false) ;
 
   /** \brief static method to upload from the hardware the devices
    */
   static unsigned int getLaserdriverValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, laserdriverAccess *> &laserdriverSet, deviceVector &laserdriverVector,
 							   std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 };
 
 #endif
diff --git a/FecSoftwareV3_0/generic/include/laserdriverDescription.h b/FecSoftwareV3_0/generic/include/laserdriverDescription.h
index 8301e51..cbf64f0 100755
--- a/FecSoftwareV3_0/generic/include/laserdriverDescription.h
+++ b/FecSoftwareV3_0/generic/include/laserdriverDescription.h
@@ -209,13 +209,13 @@ class laserdriverDescription: public deviceDescription {
    * \return the value
    * \exception FecExceptionHandler in case of bad channel number
    */
-  tscType8 getGain ( tscType8 channel ) throw (FecExceptionHandler) ;
+  tscType8 getGain ( tscType8 channel ) noexcept(false) ;
 
   /** \brief set the gain value for a given channel
    * \param channel - channel value
    * \param gain - gain value
    */
-  void setGain ( tscType8 channel, tscType8 gain ) throw (FecExceptionHandler) ;
+  void setGain ( tscType8 channel, tscType8 gain ) noexcept(false) ;
 
   /** \brief return the value of the param
    * Return the value of laserdriver register
@@ -265,13 +265,13 @@ class laserdriverDescription: public deviceDescription {
    * \return the value
    * \exception FecExceptionHandler in case of bad channel number
    */
-  tscType8 getBias ( tscType8 channel ) throw (FecExceptionHandler) ;
+  tscType8 getBias ( tscType8 channel ) noexcept(false) ;
 
   /** \brief set the bias value for a given channel
    * \param channel - channel value
    * \param bias - bias value
    */
-  void setBias ( tscType8 channel, tscType8 bias) throw (FecExceptionHandler) ;
+  void setBias ( tscType8 channel, tscType8 bias) noexcept(false) ;
 
   /** \brief set the value for register
    * Set the value for a laserdriver description
diff --git a/FecSoftwareV3_0/generic/include/muxAccess.h b/FecSoftwareV3_0/generic/include/muxAccess.h
index f8860b3..5fd2df1 100755
--- a/FecSoftwareV3_0/generic/include/muxAccess.h
+++ b/FecSoftwareV3_0/generic/include/muxAccess.h
@@ -90,7 +90,7 @@ class muxAccess: public deviceAccess {
    */
   static unsigned int getMuxValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, muxAccess *> &muxSet, deviceVector &muxVector, 
 							      std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/philipsAccess.h b/FecSoftwareV3_0/generic/include/philipsAccess.h
index 6dba795..8851410 100755
--- a/FecSoftwareV3_0/generic/include/philipsAccess.h
+++ b/FecSoftwareV3_0/generic/include/philipsAccess.h
@@ -91,7 +91,7 @@ class philipsAccess: public deviceAccess {
    */
   static unsigned int getPhilipsValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, philipsAccess *> &philipsSet, deviceVector &philipsVector,
 						       std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
 };
 
diff --git a/FecSoftwareV3_0/generic/include/pllAccess.h b/FecSoftwareV3_0/generic/include/pllAccess.h
index 6e683a7..dac5f6a 100755
--- a/FecSoftwareV3_0/generic/include/pllAccess.h
+++ b/FecSoftwareV3_0/generic/include/pllAccess.h
@@ -184,7 +184,7 @@ class pllAccess: public deviceAccess {
 
   /** \brief Create a block of frames to be downloaded into the hardware
    */
-  void getBlockWriteValues ( pllDescription pllValues, std::list<accessDeviceType> &vAccess ) throw (FecExceptionHandler) ;
+  void getBlockWriteValues ( pllDescription pllValues, std::list<accessDeviceType> &vAccess ) noexcept(false) ;
 
   /** \brief Set a block of frames to be download into the hardware from a delay to be added regarding the previous values
    */
@@ -192,7 +192,7 @@ class pllAccess: public deviceAccess {
 
   /** \brief Get all values from a PLL
    */
-  pllDescription *getValues ( ) throw ( FecExceptionHandler ) ;
+  pllDescription *getValues ( ) noexcept(false) ;
 
   /** \brief set the PLL DAQ
    */
@@ -205,102 +205,102 @@ class pllAccess: public deviceAccess {
   /** \brief Set the value in the specified register
    * \deprecated use now the method setClockPhase()
    */
-  void setDelayFine ( tscType8 delay_step ) throw ( FecExceptionHandler ) { setClockPhase(delay_step) ; }
+  void setDelayFine ( tscType8 delay_step ) noexcept(false) { setClockPhase(delay_step) ; }
 
   /** \brief Set the clock phase
    */
-  void setClockPhase ( tscType8 delay_step ) throw ( FecExceptionHandler ) ;
+  void setClockPhase ( tscType8 delay_step ) noexcept(false) ;
 
   /** \brief Set the trigger delay
    * \deprecated use now the method setTriggerDelay()
    */
-  void setDelayCoarse ( tscType8 delay_step ) throw ( FecExceptionHandler ) { setTriggerDelay(delay_step) ; }
+  void setDelayCoarse ( tscType8 delay_step ) noexcept(false) { setTriggerDelay(delay_step) ; }
 
   /** \brief Set the trigger delay
    */
-  void setTriggerDelay ( tscType8 delay_step ) throw ( FecExceptionHandler ) ;
+  void setTriggerDelay ( tscType8 delay_step ) noexcept(false) ;
 
   /** \brief Get the clock phase
    * \deprecated use now getClockPhase () 
    */
-  tscType8 getDelayFine ( ) throw (FecExceptionHandler) { return (getClockPhase()) ; }
+  tscType8 getDelayFine ( ) noexcept(false) { return (getClockPhase()) ; }
 
   /** \brief Get the clock phase
    */
-  tscType8 getClockPhase ( ) throw (FecExceptionHandler) ;
+  tscType8 getClockPhase ( ) noexcept(false) ;
 
   /** \brief Get the trigger delay
    * \deprecated use now getTriggerDelay () 
    */
-  tscType8 getDelayCoarse ( ) throw (FecExceptionHandler) { return (getTriggerDelay()) ; }
+  tscType8 getDelayCoarse ( ) noexcept(false) { return (getTriggerDelay()) ; }
 
   /** \brief Get the trigger delay  
    */
-  tscType8 getTriggerDelay ( ) throw (FecExceptionHandler) ;
+  tscType8 getTriggerDelay ( ) noexcept(false) ;
 
   /** \brief check the going bit and make a PLL reset or a PLL init
    */
-  void setPllCheckGoingBit ( bool noCheck = false, bool coldReset = true ) throw (FecExceptionHandler) ;
+  void setPllCheckGoingBit ( bool noCheck = false, bool coldReset = true ) noexcept(false) ;
 
   /** \brief Specific function on the PLL: reset or initialise the PLL
    */
-  tscType8 pllReset ( ) throw (FecExceptionHandler) ; // Init ...
+  tscType8 pllReset ( ) noexcept(false) ; // Init ...
 
   /** \brief Specific function on the PLL for cold reset
    */
-  tscType8 pllInit  ( ) throw (FecExceptionHandler) ; // Init ...
+  tscType8 pllInit  ( ) noexcept(false) ; // Init ...
 
   /** \brief return the contents of the CTR1 register 
    */
-  tscType8 getCNTRL1()throw (FecExceptionHandler);
+  tscType8 getCNTRL1()noexcept(false);
 
   /** \brief return the contents of the CTR2 register 
    */
-  tscType8 getCNTRL2()throw (FecExceptionHandler);
+  tscType8 getCNTRL2()noexcept(false);
 
   /** \brief return the contents of the CTR3 register 
    */
-  tscType8 getCNTRL3()throw (FecExceptionHandler);
+  tscType8 getCNTRL3()noexcept(false);
 
   /** \brief return the contents of the CTR4 register 
    */
-  tscType8 getCNTRL4()throw (FecExceptionHandler);
+  tscType8 getCNTRL4()noexcept(false);
 
   /** \brief return the contents of the CTR4 register 
    */
-  tscType8 getCNTRL5()throw (FecExceptionHandler);
+  tscType8 getCNTRL5()noexcept(false);
 
   /** \brief set the register 1 of the PLL
    */
-  void setCNTRL1( tscType8 value )throw (FecExceptionHandler);
+  void setCNTRL1( tscType8 value )noexcept(false);
 
   /** \brief set the register 2 of the PLL
    */
-  void setCNTRL2( tscType8 value )throw (FecExceptionHandler);
+  void setCNTRL2( tscType8 value )noexcept(false);
 
   /** \brief set the register 3 of the PLL
    */
-  void setCNTRL3( tscType8 value )throw (FecExceptionHandler);
+  void setCNTRL3( tscType8 value )noexcept(false);
 
   /** \brief set the register 4 of the PLL
    */
-  void setCNTRL4( tscType8 value )throw (FecExceptionHandler);
+  void setCNTRL4( tscType8 value )noexcept(false);
 
   /** \brief set the register 5 of the PLL
    */
-  void setCNTRL5( tscType8 value )throw (FecExceptionHandler);
+  void setCNTRL5( tscType8 value )noexcept(false);
 
   /** \brief returns true if the PLL is running ( bit 0 of CNTRL1 =1)
    */
-  bool getGoingStatus()throw (FecExceptionHandler);
+  bool getGoingStatus()noexcept(false);
 
   /** \brief returns true if as SEU is detected ( bit 3 of CTNRL1=1)
    */
-  bool getSeuStatus()throw (FecExceptionHandler);
+  bool getSeuStatus()noexcept(false);
 
   /** Array to make a correspondance between the delay and the step to set
    */
-  static tscType8 getClockPhaseMap ( tscType8 k ) throw (FecExceptionHandler) ;
+  static tscType8 getClockPhaseMap ( tscType8 k ) noexcept(false) ;
 
   /** Array to make a correspondance between the delay and the step to set
    */
@@ -308,7 +308,7 @@ class pllAccess: public deviceAccess {
 
   /** Array to make a correspondance between the delay and the step to set
    */
-  static tscType8 getTriggerDelayMap ( tscType8 k ) throw (FecExceptionHandler) ;
+  static tscType8 getTriggerDelayMap ( tscType8 k ) noexcept(false) ;
 
   /** Array to make a correspondance between the delay and the step to set
    */
@@ -319,7 +319,7 @@ class pllAccess: public deviceAccess {
   static unsigned int setPllCheckGoingBitMultipleFrames ( FecAccess &fecAccess, std::list<FecExceptionHandler *> &errorList,
 							  Sgi::hash_map<keyType, pllAccess *> &pllSet, bool *errorGoingBit, 
 							  std::list<keyType> &pllErrorBefore, std::list<keyType> &pllErrorAfter, 
-							  bool noCheck = false, bool coldReset = true ) throw (FecExceptionHandler) ;
+							  bool noCheck = false, bool coldReset = true ) noexcept(false) ;
 
   /** \brief Display the register for a given set of PLL
    */
@@ -333,7 +333,7 @@ class pllAccess: public deviceAccess {
    */
   static unsigned int getPllValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, pllAccess *> &pllSet, deviceVector &pllVector,
 						   std::list<FecExceptionHandler *> &errorList ) 
-    throw (FecExceptionHandler) ;
+    noexcept(false) ;
 
   /** \brief return the version of the PLL cold init procedure
    */
diff --git a/FecSoftwareV3_0/generic/src/common/CCSTrigger.cc b/FecSoftwareV3_0/generic/src/common/CCSTrigger.cc
index 38378f4..42b7f81 100755
--- a/FecSoftwareV3_0/generic/src/common/CCSTrigger.cc
+++ b/FecSoftwareV3_0/generic/src/common/CCSTrigger.cc
@@ -41,7 +41,7 @@ const uint32_t CCSTrigger::CCSVALUESSID[8] = {0xB8,0xB8,0x60,0x1B8,0xB8,0xB8,0xB
  * \param fecSlot - slot of the FEC in the crate, optional parameter (default 255)
  * \warning the value set in the conf 0 is the value given by CCSVALUESSID and by the SSID
  */
-CCSTrigger::CCSTrigger(HAL::VME64xDevice *trgBoard, std::string subSystem, tscType8 fecSlot) throw (FecExceptionHandler) {
+CCSTrigger::CCSTrigger(HAL::VME64xDevice *trgBoard, std::string subSystem, tscType8 fecSlot) noexcept(false) {
 
   using namespace std; 
 
@@ -116,7 +116,7 @@ CCSTrigger::~CCSTrigger ( ) {
 /** This method set the CCSTrigger config 0
  * \param value - value to be set
  */
-void CCSTrigger::setCCSTriggerConfig0 ( uint32_t value ) throw (FecExceptionHandler) {
+void CCSTrigger::setCCSTriggerConfig0 ( uint32_t value ) noexcept(false) {
 
   try {
     trgboard_->write("TRIG_CONFIG0", value);
@@ -195,7 +195,7 @@ void CCSTrigger::setCCSTriggerConfig0 ( uint32_t value ) throw (FecExceptionHand
 /** This method get the CCSTrigger config 0
  * \return value from the hardware
  */
-uint32_t CCSTrigger::getCCSTriggerConfig0 ( ) throw (FecExceptionHandler) {
+uint32_t CCSTrigger::getCCSTriggerConfig0 ( ) noexcept(false) {
 
   uint32_t value = 0 ;
 
@@ -278,7 +278,7 @@ uint32_t CCSTrigger::getCCSTriggerConfig0 ( ) throw (FecExceptionHandler) {
 /** This method get the CCSTrigger config 0
  * \return value from the hardware
  */
-uint32_t CCSTrigger::getCCSTriggerStatus0 ( ) throw (FecExceptionHandler) {
+uint32_t CCSTrigger::getCCSTriggerStatus0 ( ) noexcept(false) {
 
   uint32_t value = 0 ;
 
@@ -361,7 +361,7 @@ uint32_t CCSTrigger::getCCSTriggerStatus0 ( ) throw (FecExceptionHandler) {
 /** Return the corresponding SSID
  * \return SSID for the given subsystem
  */
-std::string CCSTrigger::getSSID ( ) throw (FecExceptionHandler) {
+std::string CCSTrigger::getSSID ( ) noexcept(false) {
 
   uint32_t value = getCCSTriggerConfig0 ( ) ;
   uint32_t SSID  =  (value & SSIDMASK) >> SSIDOFFSET ;
@@ -373,7 +373,7 @@ std::string CCSTrigger::getSSID ( ) throw (FecExceptionHandler) {
  * \param SSID - SSID string
   * \warning the value set in the conf 0 is the value given by CCSVALUESSID and by the SSID
  */
-void CCSTrigger::setSSID ( std::string subSystem ) throw (FecExceptionHandler) {
+void CCSTrigger::setSSID ( std::string subSystem ) noexcept(false) {
 
   using namespace std; 
  
@@ -434,7 +434,7 @@ void CCSTrigger::setSSID ( std::string subSystem ) throw (FecExceptionHandler) {
 
 /** Set the CONFIG0
  */
-void CCSTrigger::setSSID ( std::string subSystem, uint32_t originalValue ) throw (FecExceptionHandler) {
+void CCSTrigger::setSSID ( std::string subSystem, uint32_t originalValue ) noexcept(false) {
  
   int i = 0 ; while (subSystem != SubSystems[i]) i ++ ;
   if (i > 7) 
@@ -455,7 +455,7 @@ void CCSTrigger::setSSID ( std::string subSystem, uint32_t originalValue ) throw
 
 /** Reset the TTCRx
  */
-void CCSTrigger::setResetTTCRx ( ) throw (FecExceptionHandler) {
+void CCSTrigger::setResetTTCRx ( ) noexcept(false) {
  
   // Read the value
   uint32_t value = getCCSTriggerConfig0() ;
@@ -471,7 +471,7 @@ void CCSTrigger::setResetTTCRx ( ) throw (FecExceptionHandler) {
 
 /** Reset the QPLL
  */
-void CCSTrigger::setResetQPLL ( ) throw (FecExceptionHandler) {
+void CCSTrigger::setResetQPLL ( ) noexcept(false) {
 
   // Read the value
   uint32_t value = getCCSTriggerConfig0() ;
@@ -487,7 +487,7 @@ void CCSTrigger::setResetQPLL ( ) throw (FecExceptionHandler) {
 
 /** Set the QPLL auto restart
  */
-void CCSTrigger::setQPLLAutoRestart ( ) throw (FecExceptionHandler) {
+void CCSTrigger::setQPLLAutoRestart ( ) noexcept(false) {
 
   // Read the value
   uint32_t value = getCCSTriggerConfig0() ;
@@ -508,7 +508,7 @@ void CCSTrigger::setQPLLAutoRestart ( ) throw (FecExceptionHandler) {
 /** Error on QPLL
  * \return true if error false if not
  */
-bool CCSTrigger::getStatusQPLLError ( ) throw (FecExceptionHandler) {
+bool CCSTrigger::getStatusQPLLError ( ) noexcept(false) {
 
   return (getCCSTriggerStatus0() & STATUS0_QPLLERROR) ;
 }
@@ -516,7 +516,7 @@ bool CCSTrigger::getStatusQPLLError ( ) throw (FecExceptionHandler) {
 /** QPLL locked
  * \return true if locked false if not
  */
-bool CCSTrigger::getStatusQPLLLocked ( ) throw (FecExceptionHandler) {
+bool CCSTrigger::getStatusQPLLLocked ( ) noexcept(false) {
 
   return (getCCSTriggerStatus0() & STATUS0_QPLLLOCKED) ;
 }
@@ -524,14 +524,14 @@ bool CCSTrigger::getStatusQPLLLocked ( ) throw (FecExceptionHandler) {
 /** TTCRx Ready
  * \return true if ready false if not
  */
-bool CCSTrigger::getStatusTTCRxReady ( ) throw (FecExceptionHandler) {
+bool CCSTrigger::getStatusTTCRxReady ( ) noexcept(false) {
 
   return (getCCSTriggerStatus0() & STATUS0_TTCRXREADY) ;
 }
 
 /**
  */
-void CCSTrigger::clear() throw (FecExceptionHandler) {
+void CCSTrigger::clear() noexcept(false) {
 
   try {
 
@@ -616,7 +616,7 @@ void CCSTrigger::clear() throw (FecExceptionHandler) {
 
 /**
  */
-bool CCSTrigger::SetFrequency(int frequency) throw (FecExceptionHandler) {
+bool CCSTrigger::SetFrequency(int frequency) noexcept(false) {
 
   try {
     uint32_t value;
@@ -696,7 +696,7 @@ bool CCSTrigger::SetFrequency(int frequency) throw (FecExceptionHandler) {
 
 /**
  */
-int CCSTrigger::GetFrequency() throw (FecExceptionHandler) {
+int CCSTrigger::GetFrequency() noexcept(false) {
 
   try {
     uint32_t value;
@@ -774,7 +774,7 @@ int CCSTrigger::GetFrequency() throw (FecExceptionHandler) {
 
 /**
  */
-uint32_t CCSTrigger::getID() throw (FecExceptionHandler) {
+uint32_t CCSTrigger::getID() noexcept(false) {
 
   try {
     uint32_t value;
@@ -852,7 +852,7 @@ uint32_t CCSTrigger::getID() throw (FecExceptionHandler) {
 
 /**
  */
-bool CCSTrigger::SetInput(std::string block, std::string input) throw (FecExceptionHandler) {
+bool CCSTrigger::SetInput(std::string block, std::string input) noexcept(false) {
 
   try {
     for (int bl=0; bl<8; bl++) {
@@ -942,7 +942,7 @@ bool CCSTrigger::SetInput(std::string block, std::string input) throw (FecExcept
 
 /**
  */
-bool CCSTrigger::AddInput(std::string block, std::string input) throw (FecExceptionHandler) {
+bool CCSTrigger::AddInput(std::string block, std::string input) noexcept(false) {
 
   try {
     for (int bl=0; bl<8; bl++) {
@@ -1030,7 +1030,7 @@ bool CCSTrigger::AddInput(std::string block, std::string input) throw (FecExcept
 
 /**
  */
-bool CCSTrigger::SetDelay(std::string block, int Delay) throw (FecExceptionHandler) {
+bool CCSTrigger::SetDelay(std::string block, int Delay) noexcept(false) {
 
   try {
     for (int bl=0; bl<8; bl++) {
@@ -1116,7 +1116,7 @@ bool CCSTrigger::SetDelay(std::string block, int Delay) throw (FecExceptionHandl
 
 /**
  */
-bool CCSTrigger::SetCounter(std::string input, int Counter) throw (FecExceptionHandler) {
+bool CCSTrigger::SetCounter(std::string input, int Counter) noexcept(false) {
 
   try {
     std::string extin;
@@ -1215,7 +1215,7 @@ bool CCSTrigger::SetCounter(std::string input, int Counter) throw (FecExceptionH
 
 /**
  */
-int CCSTrigger::GetCounter(std::string input) throw (FecExceptionHandler) {
+int CCSTrigger::GetCounter(std::string input) noexcept(false) {
 
   try {
     std::string extin;
@@ -1305,7 +1305,7 @@ int CCSTrigger::GetCounter(std::string input) throw (FecExceptionHandler) {
 
 /**
  */
-bool CCSTrigger::SetTTCCode(std::string block, int Code) throw (FecExceptionHandler) {
+bool CCSTrigger::SetTTCCode(std::string block, int Code) noexcept(false) {
 
   try {
     for (int bl=1; bl<8; bl++) {
@@ -1393,7 +1393,7 @@ bool CCSTrigger::SetTTCCode(std::string block, int Code) throw (FecExceptionHand
 
 /**
  */
-bool CCSTrigger::SendTrigger(std::string input) throw (FecExceptionHandler) {
+bool CCSTrigger::SendTrigger(std::string input) noexcept(false) {
 
   bool found=false;
   try {
diff --git a/FecSoftwareV3_0/generic/src/common/CCUDescription.cc b/FecSoftwareV3_0/generic/src/common/CCUDescription.cc
index 70df325..9ce1641 100755
--- a/FecSoftwareV3_0/generic/src/common/CCUDescription.cc
+++ b/FecSoftwareV3_0/generic/src/common/CCUDescription.cc
@@ -317,7 +317,7 @@ void CCUDescription::setCcuAlarmsEnable ( bool enable1, bool enable2, bool enabl
  * <li>TSCFEC_FECPARAMETERNOTMANAGED: wrong CCU alarm
  * </ul>
  */
-bool CCUDescription::isCcuAlarmEnable ( tscType16 ccuAlarm ) throw (FecExceptionHandler) {
+bool CCUDescription::isCcuAlarmEnable ( tscType16 ccuAlarm ) noexcept(false) {
 
   if (ccuAlarm > 3) {
     RAISEFECEXCEPTIONHANDLER_INFOSUP ( TSCFEC_FECPARAMETERNOTMANAGED, 
@@ -607,7 +607,7 @@ void CCUDescription::deleteParameterNames(parameterDescriptionNameType *paramete
  *          and Dummy CCU output B not connected
  */
 
-void CCUDescription::setCcuTrackerUsage ( std::list<CCUDescription *> &listCcu ) throw (FecExceptionHandler) {
+void CCUDescription::setCcuTrackerUsage ( std::list<CCUDescription *> &listCcu ) noexcept(false) {
 
   // Array with the order of the CCU
   unsigned int ccuNumber = 0 ;
@@ -676,7 +676,7 @@ void CCUDescription::setCcuTrackerUsage ( std::list<CCUDescription *> &listCcu )
  * \warning this method include the dummy CCU on ring A
  */
 
-void CCUDescription::setCcuUsage ( std::list<CCUDescription *> &listCcu ) throw (FecExceptionHandler) {
+void CCUDescription::setCcuUsage ( std::list<CCUDescription *> &listCcu ) noexcept(false) {
 
   // Array with the order of the CCU
   unsigned int ccuNumber = 0 ;
diff --git a/FecSoftwareV3_0/generic/src/common/CommissioningAnalysisFactory.cc b/FecSoftwareV3_0/generic/src/common/CommissioningAnalysisFactory.cc
index 8c3246a..4006160 100755
--- a/FecSoftwareV3_0/generic/src/common/CommissioningAnalysisFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/CommissioningAnalysisFactory.cc
@@ -26,7 +26,7 @@ CommissioningAnalysisFactory::CommissioningAnalysisFactory() : DeviceFactoryInte
 #ifdef DATABASE
 //---------------------------
 CommissioningAnalysisFactory::CommissioningAnalysisFactory( std::string login, std::string password, std::string path, bool threaded )
-  throw ( oracle::occi::SQLException ) : DeviceFactoryInterface ( login, password, path, threaded ) {
+  noexcept(false) : DeviceFactoryInterface ( login, password, path, threaded ) {
   setDatabaseAccess ( login, password, path );
 }
 
@@ -109,7 +109,7 @@ std::vector<CommissioningAnalysisDescription*> CommissioningAnalysisFactory::get
 /** 
  * @brief Create the database access
  */
-void CommissioningAnalysisFactory::setDatabaseAccess( std::string login, std::string password, std::string path ) throw ( oracle::occi::SQLException ) {
+void CommissioningAnalysisFactory::setDatabaseAccess( std::string login, std::string password, std::string path ) noexcept(false) {
 
   // delete the old one if needed
   if (dbAccess_ != NULL) {
@@ -131,7 +131,7 @@ void CommissioningAnalysisFactory::setDatabaseAccess( std::string login, std::st
 /** 
  * @brief Create the database access with the configuration given by the env. variable CONFDB
  */
-void CommissioningAnalysisFactory::setDatabaseAccess() throw ( oracle::occi::SQLException ) {
+void CommissioningAnalysisFactory::setDatabaseAccess() noexcept(false) {
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
     setDatabaseAccess (login, password, path) ;
@@ -164,7 +164,7 @@ void CommissioningAnalysisFactory::setDatabaseAccess( DbCommissioningAnalysisAcc
 
 //-----------------------------------
 uint32_t CommissioningAnalysisFactory::uploadAnalysis( uint32_t runNumber, std::string partitionName, CommissioningAnalysisDescription::commissioningType type, 
-						       std::vector<CommissioningAnalysisDescription*> &descriptions, bool updateCurrentState ) throw ( FecExceptionHandler ) {
+						       std::vector<CommissioningAnalysisDescription*> &descriptions, bool updateCurrentState ) noexcept(false) {
   uint32_t versionId = 0;
 
   if ( descriptions.empty() ) RAISEFECEXCEPTIONHANDLER (NODATAAVAILABLE, NODATAAVAILABLE_MSG + " to be uploaded in DB", ERRORCODE) ;
@@ -191,7 +191,7 @@ uint32_t CommissioningAnalysisFactory::uploadAnalysis( uint32_t runNumber, std::
 
 
 //-----------------------------------
-void CommissioningAnalysisFactory::uploadAnalysisState( uint32_t uploadedVersion ) throw ( FecExceptionHandler ) {
+void CommissioningAnalysisFactory::uploadAnalysisState( uint32_t uploadedVersion ) noexcept(false) {
 #ifndef DATABASE
   return;
 #else
@@ -215,7 +215,7 @@ void CommissioningAnalysisFactory::uploadAnalysisState( uint32_t uploadedVersion
 
 //-----------------------------------
 std::vector<CommissioningAnalysisDescription*> CommissioningAnalysisFactory::getCalibrationData( uint32_t runNumber,
-												 std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+												 std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 #ifdef DATABASE
   if ( getDbUsed() ) {
     this->deleteCalibrationVector();
@@ -244,7 +244,7 @@ std::vector<CommissioningAnalysisDescription*> CommissioningAnalysisFactory::get
 
 //-----------------------------------
 HashMapRunVersion CommissioningAnalysisFactory::getAnalysisHistory(std::string partitionName,
-								   CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+								   CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 
 #ifdef DATABASE
   if ( getDbUsed() ) {
@@ -266,7 +266,7 @@ HashMapRunVersion CommissioningAnalysisFactory::getAnalysisHistory(std::string p
 //-----------------------------------
 std::vector<CommissioningAnalysisDescription*> CommissioningAnalysisFactory::getAnalysisHistory(std::string partitionName,
 												uint32_t versionMajorID, uint32_t versionMinorID, 
-												CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+												CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 
 #ifdef DATABASE
   if ( getDbUsed() ) {
@@ -286,7 +286,7 @@ std::vector<CommissioningAnalysisDescription*> CommissioningAnalysisFactory::get
 
 
 //-----------------------------------
-HashMapAnalysisVersions CommissioningAnalysisFactory::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( FecExceptionHandler ) {
+HashMapAnalysisVersions CommissioningAnalysisFactory::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false) {
 #ifdef DATABASE
   if ( getDbUsed() ) {
     this->deleteAnalysisLocalVersions();
diff --git a/FecSoftwareV3_0/generic/src/common/ConnectionFactory.cc b/FecSoftwareV3_0/generic/src/common/ConnectionFactory.cc
index 2c8e1f2..6060ece 100755
--- a/FecSoftwareV3_0/generic/src/common/ConnectionFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/ConnectionFactory.cc
@@ -68,7 +68,7 @@ ConnectionFactory::ConnectionFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 ConnectionFactory::ConnectionFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-    throw ( oracle::occi::SQLException ): 
+    noexcept(false): 
   DeviceFactoryInterface ( login, password, path, threaded ) {
 
   setDatabaseAccess ( login, password, path ) ;
@@ -187,7 +187,7 @@ void ConnectionFactory::setInputFileName ( std::string inputFileName ) {
  * \warning in the destructor of ConnectionFactory, the dbAccess is deleted
  */
 void ConnectionFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For connection database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -215,7 +215,7 @@ void ConnectionFactory::setDatabaseAccess ( std::string login, std::string passw
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void ConnectionFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // Retreive the parameters
   std::string login, password, path ;
@@ -253,7 +253,7 @@ void ConnectionFactory::setDatabaseAccess ( DbConnectionsAccess *dbAccess ) {
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 std::list<unsigned int *> ConnectionFactory::getPartitionVersion ( std::string partitionName ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "Retreive the current version for the partition " << partitionName << std::endl ;
@@ -305,7 +305,7 @@ std::list<unsigned int *> ConnectionFactory::getPartitionVersion ( std::string p
  * \param partitionNumber - partition number returned
  */
 void ConnectionFactory::getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskVersionMajor, unsigned int *maskVersionMinor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "Retreive the current version for the partition " << partitionName << std::endl ;
@@ -354,7 +354,7 @@ void ConnectionFactory::getPartitionVersion ( std::string partitionName, unsigne
  * \warning You must delete the vector you pass to the method with ConnectionFactory::deleteVector method
  */ 
 void ConnectionFactory::getConnectionDescriptions ( bool fileUsed, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, std::string partitionName, ConnectionVector &outVector, bool allConnections, bool forceDbReload ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << versionMajor << "." << versionMinor << std::endl ;
@@ -599,7 +599,7 @@ void ConnectionFactory::buildModuleList( ) {
  * \warning this method is the same than getConnectionDescriptionsPartitionName, it is maintained for backward compatilibility
  */ 
 void ConnectionFactory::getConnectionDescriptions ( std::string partitionName, ConnectionVector &outVector, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool allConnections, bool forceDbReload ) 
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 
   getConnectionDescriptions ( false, versionMajor, versionMinor, maskVersionMajor, maskVersionMinor, partitionName, outVector, allConnections, forceDbReload ) ;
 }
@@ -610,7 +610,7 @@ void ConnectionFactory::getConnectionDescriptions ( std::string partitionName, C
  * \warning You must delete the vector you pass to the method
  */
 void ConnectionFactory::getConnectionDescriptions ( ConnectionVector &outVector, bool allConnections )
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 
   getConnectionDescriptions ( true, 0, 0, 0, 0, "nil", outVector, allConnections ) ;
 }
@@ -630,7 +630,7 @@ void ConnectionFactory::getConnectionDescriptions ( ConnectionVector &outVector,
  * \warning the version uploaded is set automatically as the next version to be downloaded
  */
 void ConnectionFactory::setConnectionDescriptions ( ConnectionVector connectionVector, std::string partitionName, unsigned int *versionMajor, unsigned int *versionMinor, bool majorVersion )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
diff --git a/FecSoftwareV3_0/generic/src/common/DbAccess.cc b/FecSoftwareV3_0/generic/src/common/DbAccess.cc
index f639043..47cfeb1 100755
--- a/FecSoftwareV3_0/generic/src/common/DbAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbAccess.cc
@@ -34,7 +34,7 @@
  * @exception oracle::occi::SQLException thrown by <I>DbAccess::DbConnect</I>
  * @see <I>DbAccess::getDbConfiguration</I>, <I>DbAccess::DbConnect</I>
  */
-DbAccess::DbAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {
+DbAccess::DbAccess ( bool threaded ) noexcept(false) : DbCommonAccess (threaded) {
 }
 
 /**Create a database access. <BR>
@@ -49,7 +49,7 @@ DbAccess::DbAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbComm
  * @exception oracle::occi::SQLException thrown by DbAccess::DbConnect
  * @see DbAccess::DbConnect
  */
-DbAccess::DbAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbCommonAccess (user, passwd, dbPath, threaded) {
+DbAccess::DbAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Delete the database access. <BR>
@@ -58,7 +58,7 @@ DbAccess::DbAccess (std::string user, std::string passwd, std::string dbPath, bo
  * Closes the environnement.<BR>
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in closing the environnement or the connection
  * */
-DbAccess::~DbAccess () throw (oracle::occi::SQLException) { }
+DbAccess::~DbAccess () noexcept(false) { }
 
 /**Get the partition name from partition identifier. <BR>
  * A query is defined to get the partition name from the partition identifier. <BR>
@@ -68,7 +68,7 @@ DbAccess::~DbAccess () throw (oracle::occi::SQLException) { }
  * @return the corresponding partition name
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::string DbAccess::getPartitionName (unsigned int partitionId)  throw (oracle::occi::SQLException) {
+std::string DbAccess::getPartitionName (unsigned int partitionId)  noexcept(false) {
 
   std::string partitionName;
   static std::string queryString = "BEGIN :a := PkgPartition.getPartitionName(:b);END;";
@@ -99,7 +99,7 @@ std::string DbAccess::getPartitionName (unsigned int partitionId)  throw (oracle
  * @return the corresponding partition name
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-unsigned int DbAccess::getPartitionId (std::string partitionName)  throw (oracle::occi::SQLException){
+unsigned int DbAccess::getPartitionId (std::string partitionName)  noexcept(false){
 
   unsigned int partitionId;
   static std::string queryString = "BEGIN :a := PkgPartition.getPartitionId(:b);END;";
@@ -130,7 +130,7 @@ unsigned int DbAccess::getPartitionId (std::string partitionName)  throw (oracle
  * @return a version number
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement.
  */
-unsigned int DbAccess::getVersion(std::string sqlQuery) throw (oracle::occi::SQLException) {
+unsigned int DbAccess::getVersion(std::string sqlQuery) noexcept(false) {
 
   int versionNumber = -1;
   oracle::occi::Statement *stmt = NULL ;
@@ -162,7 +162,7 @@ unsigned int DbAccess::getVersion(std::string sqlQuery) throw (oracle::occi::SQL
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -199,7 +199,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::s
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -242,7 +242,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::s
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQueryWithoutMask(std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQueryWithoutMask(std::string readString, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -280,7 +280,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQueryWithoutMask(std::string readStr
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string id) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string id) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -318,7 +318,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::s
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string id, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -356,7 +356,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::s
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -390,7 +390,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString) throw
  * @return a pointer on a Clob containing the data from the database.
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string fecHardId, unsigned int ringSlot) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::string partitionName, std::string fecHardId, unsigned int ringSlot) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": readString " << readString << std::endl;
@@ -431,7 +431,7 @@ oracle::occi::Clob *DbAccess::getXMLClobFromQuery(std::string readString, std::s
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the buffer is empty
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-void DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": writeString : " << writeString << std::endl;
@@ -502,7 +502,7 @@ std::cerr << __PRETTY_FUNCTION__ << ": write into xmlClob_" << std::endl;
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the buffer is empty
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-void DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName, int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName, int versionUpdate) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": buffer : " << buffer << std::endl;
@@ -571,7 +571,7 @@ std::cerr << __PRETTY_FUNCTION__ << ": write into xmlClob_" << std::endl;
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the buffer is empty
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-unsigned int DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+unsigned int DbAccess::setXMLClobFromQuery(std::string writeString, std::string buffer, std::string partitionName) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": writeString : " << writeString << std::endl;
@@ -636,7 +636,7 @@ unsigned int DbAccess::setXMLClobFromQuery(std::string writeString, std::string
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the buffer is empty
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-unsigned int DbAccess::setXMLClobFromQuery(std::string writeString, std::string *buffer, std::string partitionName, bool newPartition) throw (oracle::occi::SQLException, FecExceptionHandler) {
+unsigned int DbAccess::setXMLClobFromQuery(std::string writeString, std::string *buffer, std::string partitionName, bool newPartition) noexcept(false) {
 
 #ifdef DATABASEDEBUG
     std::cerr << __PRETTY_FUNCTION__ << ": writeString : " << writeString << std::endl;
diff --git a/FecSoftwareV3_0/generic/src/common/DbClient.cc b/FecSoftwareV3_0/generic/src/common/DbClient.cc
index f7ed749..4e18244 100644
--- a/FecSoftwareV3_0/generic/src/common/DbClient.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbClient.cc
@@ -4,7 +4,7 @@
 /**
   -Create a DbClient with the Share Memory name
 */
-DbClient::DbClient(std::string name) throw (std::string)
+DbClient::DbClient(std::string name) noexcept(false)
     {
       dbmem_ = new TShare((char*)name.c_str(),TShare_OPEN,0x200000);
       start_ = (char*) dbmem_->Attach();
@@ -94,7 +94,7 @@ void DbClient::purge()
   /**
      Parse the Sahre memory and create and fill local vectors
   */
-  void DbClient::parse() throw (std::string)
+  void DbClient::parse() noexcept(false)
     {
       purge();
     // FEC devices
diff --git a/FecSoftwareV3_0/generic/src/common/DbCommissioningAnalysisAccess.cc b/FecSoftwareV3_0/generic/src/common/DbCommissioningAnalysisAccess.cc
index 9294711..dc0b364 100755
--- a/FecSoftwareV3_0/generic/src/common/DbCommissioningAnalysisAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbCommissioningAnalysisAccess.cc
@@ -33,16 +33,16 @@
 
 //---------------------------------
 DbCommissioningAnalysisAccess::DbCommissioningAnalysisAccess(bool threaded) 
-  throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {;}
+  noexcept(false) : DbCommonAccess (threaded) {;}
 
 
 //---------------------------------
 DbCommissioningAnalysisAccess::DbCommissioningAnalysisAccess(std::string user, std::string passwd, std::string dbPath, bool threaded) 
-  throw (oracle::occi::SQLException): DbCommonAccess (user, passwd, dbPath, threaded) {;}
+  noexcept(false): DbCommonAccess (user, passwd, dbPath, threaded) {;}
 
 
 //---------------------------------
-DbCommissioningAnalysisAccess::~DbCommissioningAnalysisAccess() throw (oracle::occi::SQLException) {;}
+DbCommissioningAnalysisAccess::~DbCommissioningAnalysisAccess() noexcept(false) {;}
 
 
 
@@ -50,7 +50,7 @@ DbCommissioningAnalysisAccess::~DbCommissioningAnalysisAccess() throw (oracle::o
 
 
 //---------------------------------
-void DbCommissioningAnalysisAccess::setXMLClob( std::string buffer, bool updateCurrentState, unsigned int &partitionStateVersionId ) throw ( oracle::occi::SQLException, FecExceptionHandler ) {
+void DbCommissioningAnalysisAccess::setXMLClob( std::string buffer, bool updateCurrentState, unsigned int &partitionStateVersionId ) noexcept(false) {
   //std::cout<<buffer<<std::endl;
   static std::string writeString = "BEGIN PkgAnalysisXML.configureXMLClob(:buffer,:updateState,:partitionStateVersion); END;";
   oracle::occi::Statement *stmt = NULL;
@@ -116,7 +116,7 @@ void DbCommissioningAnalysisAccess::setXMLClob( std::string buffer, bool updateC
 
 
 //---------------------------------
-void DbCommissioningAnalysisAccess::setPartitionState( uint32_t uploadedVersion ) throw ( oracle::occi::SQLException ) {
+void DbCommissioningAnalysisAccess::setPartitionState( uint32_t uploadedVersion ) noexcept(false) {
 
   static std::string writeString = "BEGIN PkgAnalysisXML.setPartitionState(:partitionStateVersion); END;";
   oracle::occi::Statement *stmt = NULL;
@@ -140,7 +140,7 @@ void DbCommissioningAnalysisAccess::setPartitionState( uint32_t uploadedVersion
 
 //---------------------------------
 oracle::occi::Clob* DbCommissioningAnalysisAccess::getCalibrationData( uint32_t runNumber,
-								       std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException ) {
+								       std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgAnalysisXML.getDowloadAnalysisData(:runNumber, :partitionName, :analysisType); END;";
 
@@ -187,7 +187,7 @@ oracle::occi::Clob* DbCommissioningAnalysisAccess::getCalibrationData( uint32_t
 }
 
 //---------------------------------
-oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException ) {
+oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgAnalysisXML.getDownloadAnalysisHistory(:partitionName,:analysisType); END;";
 
@@ -233,7 +233,7 @@ oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::stri
 }
 
 //---------------------------------
-oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::string partitionName, uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) throw ( oracle::occi::SQLException ) {
+oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::string partitionName, uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgAnalysisXML.getDownloadAnalysisHistory(:partitionName, :versionMajorID, :versionMinorID, :analysisType); END;";
 
@@ -282,7 +282,7 @@ oracle::occi::Clob* DbCommissioningAnalysisAccess::getAnalysisHistory( std::stri
 }
 
 //---------------------------------
-oracle::occi::Clob* DbCommissioningAnalysisAccess::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( oracle::occi::SQLException ) {
+oracle::occi::Clob* DbCommissioningAnalysisAccess::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgAnalysisXML.getLocalAnalysisVersions(:globalVersionID); END;";
 
 #ifdef DATABASEDEBUG
diff --git a/FecSoftwareV3_0/generic/src/common/DbCommonAccess.cc b/FecSoftwareV3_0/generic/src/common/DbCommonAccess.cc
index 01a9e3a..389ecc4 100755
--- a/FecSoftwareV3_0/generic/src/common/DbCommonAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbCommonAccess.cc
@@ -34,7 +34,7 @@
  * \see <I>DbCommonAccess::getDbConfiguration</I>, <I>DbCommonAccess::dbConnect</I>
  * \param threaded - if the process is thread then a connection is created for these process. In the other case then the process used a static variables
  */
-DbCommonAccess::DbCommonAccess ( bool threaded ) throw (oracle::occi::SQLException) {
+DbCommonAccess::DbCommonAccess ( bool threaded ) noexcept(false) {
   // Try to find the access through environment variables
   std::string login = "nil" ;
   std::string passwd = "nil" ;
@@ -59,7 +59,7 @@ DbCommonAccess::DbCommonAccess ( bool threaded ) throw (oracle::occi::SQLExcepti
  * \exception oracle::occi::SQLException thrown by DbCommonAccess::dbConnect
  * \see DbCommonAccess::dbConnect
  */
-DbCommonAccess::DbCommonAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) {
+DbCommonAccess::DbCommonAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) {
   dbConnect (user, passwd, dbPath, threaded) ;
   xmlClob_ = new oracle::occi::Clob();
   xmlClobArray_ = new oracle::occi::Clob[8];
@@ -75,7 +75,7 @@ DbCommonAccess::DbCommonAccess (std::string user, std::string passwd, std::strin
  * \param dbPath - path for the database
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating the environnement or the connection
  */
-void DbCommonAccess::dbConnect (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException){
+void DbCommonAccess::dbConnect (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false){
 
   dbEnvironment_ = NULL ; xmlClob_ = NULL ; xmlClobArray_ = NULL ;
 
@@ -135,7 +135,7 @@ void DbCommonAccess::dbConnect (std::string user, std::string passwd, std::strin
  * Closes the environnement.<BR>
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in closing the environnement or the connection
  * */
-DbCommonAccess::~DbCommonAccess () throw (oracle::occi::SQLException) {
+DbCommonAccess::~DbCommonAccess () noexcept(false) {
 
   if (xmlClob_) { delete xmlClob_; xmlClob_ = NULL ; }
   if (xmlClobArray_) { delete[] xmlClobArray_;  xmlClobArray_ = NULL ; }
@@ -238,7 +238,7 @@ void DbCommonAccess::prepareXmlClobArray( int index ) {
  * \return a pointer to a initialized Clob
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in statement creation or statement execution
  */
-oracle::occi::Clob DbCommonAccess::initializeClob () throw (oracle::occi::SQLException) {
+oracle::occi::Clob DbCommonAccess::initializeClob () noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::getXMLClob initialize a Clob" << std::endl;
@@ -286,7 +286,7 @@ oracle::occi::Clob DbCommonAccess::initializeClob () throw (oracle::occi::SQLExc
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement.
  * \warning to retreive the next run number, retreive the current run number and add 1 to it
  */
-unsigned int DbCommonAccess::getCurrentRunNumber() throw (FecExceptionHandler) {
+unsigned int DbCommonAccess::getCurrentRunNumber() noexcept(false) {
 
   static std::string queryString = "BEGIN :a := PkgRun.GetCurrentRun(); END;";
   unsigned int nextRunId = 0;
@@ -323,7 +323,7 @@ unsigned int DbCommonAccess::getCurrentRunNumber() throw (FecExceptionHandler) {
  * @return a pointer to a list of unsigned int pointers (partitionId, versionMajorId, versionMinorId, maskVersionMajorId, maskVersionMinorId : THIS LIST OF POINTERS HAS TO BE REMOVED BY THE USER !!
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::list<unsigned int*> DbCommonAccess::getDatabaseVersionFromQuery (std::string sqlQuery, std::string partitionName) throw (oracle::occi::SQLException) {
+std::list<unsigned int*> DbCommonAccess::getDatabaseVersionFromQuery (std::string sqlQuery, std::string partitionName) noexcept(false) {
 
   oracle::occi::Statement *stmt = NULL ;
   oracle::occi::ResultSet *rset = NULL ; 
@@ -368,7 +368,7 @@ void DbCommonAccess::createStateHistory (unsigned int stateHistoryId, std::strin
 					 unsigned int connectionVersionMajorId, unsigned int connectionVersionMinorId,
 					 unsigned int dcuInfoVersionMajorId, unsigned int dcuInfoVersionMinorId, 
 					 unsigned int dcuPsuMapVersionMajorId, unsigned int dcuPsuMapVersionMinorId,
-					 unsigned int maskVersionMajorId, unsigned int maskVersionMinorId ) throw (oracle::occi::SQLException) {
+					 unsigned int maskVersionMajorId, unsigned int maskVersionMinorId ) noexcept(false) {
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::createState(...)" << std::endl;
 #endif
@@ -433,7 +433,7 @@ void DbCommonAccess::createStateHistory (unsigned int stateHistoryId, std::strin
 /**Create a new run <BR>
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in statement creation or statement execution
  */
-void DbCommonAccess::setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) throw (oracle::occi::SQLException, FecExceptionHandler){
+void DbCommonAccess::setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::setRun(" << partitionName << "," << runNumber << ", "<< runMode <<")"<<std::endl;
 #endif
@@ -472,7 +472,7 @@ void DbCommonAccess::setRun(std::string partitionName, unsigned int runNumber, i
 
 /** \brief Stop a run 
    */
-void DbCommonAccess::stopRun(std::string partitionName, std::string comment) throw (oracle::occi::SQLException,FecExceptionHandler){
+void DbCommonAccess::stopRun(std::string partitionName, std::string comment) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::stopRun(" << partitionName << ")"<<std::endl;
 #endif
@@ -510,7 +510,7 @@ void DbCommonAccess::stopRun(std::string partitionName, std::string comment) thr
 /**Tag the run as transfered by O2O <BR>
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in statement creation or statement execution
  */
-void DbCommonAccess::setO2ORun(std::string partitionName, unsigned int runNumber) throw (oracle::occi::SQLException, FecExceptionHandler){
+void DbCommonAccess::setO2ORun(std::string partitionName, unsigned int runNumber) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::setO2ORun(" << partitionName << "," << runNumber << ")"<<std::endl;
 #endif
@@ -543,7 +543,7 @@ void DbCommonAccess::setO2ORun(std::string partitionName, unsigned int runNumber
  * \param runNumber The number of the run
  * \param newComment The new value of the comment
  */
-void DbCommonAccess::setNewComment(std::string partitionName, unsigned int runNumber, std::string newComment) throw (oracle::occi::SQLException, FecExceptionHandler){
+void DbCommonAccess::setNewComment(std::string partitionName, unsigned int runNumber, std::string newComment) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::setNewComment(" << partitionName << "," << runNumber << "," << newComment << " )"<<std::endl;
 #endif
@@ -575,7 +575,7 @@ void DbCommonAccess::setNewComment(std::string partitionName, unsigned int runNu
 /** \brief Retreive the database version
  * \return version of the database as a double
  */
-double DbCommonAccess::getDbVersion( ) throw (oracle::occi::SQLException, FecExceptionHandler){
+double DbCommonAccess::getDbVersion( ) noexcept(false){
 
   static std::string query = "select version from dbversion" ;
 
@@ -616,7 +616,7 @@ double DbCommonAccess::getDbVersion( ) throw (oracle::occi::SQLException, FecExc
 /** \brief Retreive the database size
  * \return the database size in Mbytes
  */
-double DbCommonAccess::getDbSize( ) throw (oracle::occi::SQLException, FecExceptionHandler){
+double DbCommonAccess::getDbSize( ) noexcept(false){
 
   static std::string query = "select sum(bytes)/1024/1024 as space_used_in_MB from user_extents" ;
 
@@ -658,7 +658,7 @@ double DbCommonAccess::getDbSize( ) throw (oracle::occi::SQLException, FecExcept
 /** \brief Get the state ID from the current state
  *  \return The ID of the given state   
  */
-unsigned int DbCommonAccess::getCurrentStateHistoryId( ) throw (oracle::occi::SQLException, FecExceptionHandler){
+unsigned int DbCommonAccess::getCurrentStateHistoryId( ) noexcept(false){
 
   static std::string query = "" ;
   query = "select stateHistoryId from CurrentState";
@@ -696,7 +696,7 @@ unsigned int DbCommonAccess::getCurrentStateHistoryId( ) throw (oracle::occi::SQ
  * \return a pointer to a initialized Clob
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in statement creation or statement execution
  */
-unsigned int DbCommonAccess::getNewStateHistoryId () throw (oracle::occi::SQLException) {
+unsigned int DbCommonAccess::getNewStateHistoryId () noexcept(false) {
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::getNewStateHistoryId()" << std::endl;
 #endif
@@ -724,7 +724,7 @@ unsigned int DbCommonAccess::getNewStateHistoryId () throw (oracle::occi::SQLExc
  *  \param stateName The state name
  *  \return The ID of the given state   
  */
-unsigned int DbCommonAccess::getStateHistoryId(std::string stateHistoryName) throw (oracle::occi::SQLException, FecExceptionHandler){
+unsigned int DbCommonAccess::getStateHistoryId(std::string stateHistoryName) noexcept(false){
 
   static std::string query = "" ;
   query = "select stateHistoryId from StateHistory where stateHistoryName='"+stateHistoryName+"'";
@@ -760,7 +760,7 @@ unsigned int DbCommonAccess::getStateHistoryId(std::string stateHistoryName) thr
 
 /** \brief Create a new version of dcu psu mapping 
    */
-void DbCommonAccess::createNewDcuPsuMapVersion(unsigned int *majorVersion, unsigned int *minorVersion) throw (oracle::occi::SQLException,FecExceptionHandler){
+void DbCommonAccess::createNewDcuPsuMapVersion(unsigned int *majorVersion, unsigned int *minorVersion) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::createNewDcuPsuMapVersion(:major, :minor)"<<std::endl;
 #endif
@@ -797,7 +797,7 @@ void DbCommonAccess::createNewDcuPsuMapVersion(unsigned int *majorVersion, unsig
 
 /** \brief Create a new Version of dcu infos 
    */
-void DbCommonAccess::createNewDcuInfoVersion() throw (oracle::occi::SQLException,FecExceptionHandler){
+void DbCommonAccess::createNewDcuInfoVersion() noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::createNewDcuInfoVersion(:major, :minor)"<<std::endl;
 #endif
@@ -835,7 +835,7 @@ void DbCommonAccess::createNewDcuInfoVersion() throw (oracle::occi::SQLException
     \param partitionName The name of the concerned partition
     \param dcuHardId The list of the dcuHardId to change
 **/
-void DbCommonAccess::setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int newState) throw (oracle::occi::SQLException){
+void DbCommonAccess::setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int newState) noexcept(false){
   oracle::occi::Statement *stmt = NULL ;
   static std::string sqlQuery = "BEGIN PkgDcu.setState(:partitionName, :state);END;";
 
@@ -888,7 +888,7 @@ void DbCommonAccess::setDeviceState(std::string partitionName, std::vector<unsig
 
 /** Copy the given state and set it as currentState
  */
-unsigned int DbCommonAccess::setCurrentState(unsigned int stateHistoryId) throw (oracle::occi::SQLException){
+unsigned int DbCommonAccess::setCurrentState(unsigned int stateHistoryId) noexcept(false){
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::setCurrentState(" << stateHistoryId << ")"<<std::endl;
 #endif
@@ -958,7 +958,7 @@ unsigned int DbCommonAccess::setCurrentState(unsigned int stateHistoryId) throw
  * \param allPartition - copy or update/insert of the state coming from the run number
  * \param return the new state ID created
  */
-unsigned int DbCommonAccess::copyStateForRunNumber(unsigned int runNumber, bool allPartition) throw (oracle::occi::SQLException) {
+unsigned int DbCommonAccess::copyStateForRunNumber(unsigned int runNumber, bool allPartition) noexcept(false) {
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": for the run " << runNumber ;
   if (allPartition) std::cerr << " for all partitions in the run (" << allPartition << ")" << std::endl ;
@@ -995,7 +995,7 @@ unsigned int DbCommonAccess::copyStateForRunNumber(unsigned int runNumber, bool
 
 /** Copy the current state, update the given partition with its values in the given state set the state as current
  */
-unsigned int DbCommonAccess::setCurrentState(std::string partitionName, unsigned int stateHistoryId) throw (oracle::occi::SQLException){
+unsigned int DbCommonAccess::setCurrentState(std::string partitionName, unsigned int stateHistoryId) noexcept(false){
 
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::setCurrentState(" << partitionName << ", "<< stateHistoryId << ")"<<std::endl;
@@ -1035,7 +1035,7 @@ unsigned int DbCommonAccess::setCurrentState(std::string partitionName, unsigned
 //     \param partitionName The name of the concerned partition
 //     \param dcuHardId The list of the dcuHardId to change
 // **/
-// void DbCommonAccess::setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int newState) throw (oracle::occi::SQLException){
+// void DbCommonAccess::setDeviceState(std::string partitionName, std::vector<unsigned int> dcuHardId, int newState) noexcept(false){
 //   oracle::occi::Statement *stmt;
 //   static std::string sqlQuery = "BEGIN PkgDcu.setDevicesState(:partitionName, :dcuHardId, :state);END;";
 
@@ -1087,7 +1087,7 @@ unsigned int DbCommonAccess::setCurrentState(std::string partitionName, unsigned
  * @return The list containing the partition names - YOU have to delete that list!!!!!
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::list<std::string> DbCommonAccess::getAllPartitionNames ()  throw (oracle::occi::SQLException){
+std::list<std::string> DbCommonAccess::getAllPartitionNames ()  noexcept(false){
 
   std::list<std::string> partitionNameList ;
   oracle::occi::Statement *stmt = NULL ;
@@ -1119,7 +1119,7 @@ std::list<std::string> DbCommonAccess::getAllPartitionNames ()  throw (oracle::o
  * @return The list containing the partition names
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::list<std::string> DbCommonAccess::getAllPartitionNames ( unsigned int runNumber )  throw (oracle::occi::SQLException) {
+std::list<std::string> DbCommonAccess::getAllPartitionNames ( unsigned int runNumber )  noexcept(false) {
 
   std::list<std::string> partitionNameList ;
   oracle::occi::Statement *stmt = NULL ;
@@ -1159,7 +1159,7 @@ std::list<std::string> DbCommonAccess::getAllPartitionNames ( unsigned int runNu
  * @return The list containing the partition names
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::list<std::string> DbCommonAccess::getAllPartitionNamesFromCurrentState ( )  throw (oracle::occi::SQLException) {
+std::list<std::string> DbCommonAccess::getAllPartitionNamesFromCurrentState ( )  noexcept(false) {
 
   std::list<std::string> partitionNameList ;
   oracle::occi::Statement *stmt = NULL ;
@@ -1199,7 +1199,7 @@ std::list<std::string> DbCommonAccess::getAllPartitionNamesFromCurrentState ( )
  * @return The list containing the state names - YOU have to delete that list!!!!!
  * @exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-std::list<std::string> DbCommonAccess::getAllStateHistoryNames ()  throw (oracle::occi::SQLException){
+std::list<std::string> DbCommonAccess::getAllStateHistoryNames ()  noexcept(false){
   std::list<std::string> stateHistoryNameList ;
   oracle::occi::Statement *stmt = NULL ;
   oracle::occi::ResultSet *rset = NULL ; 
@@ -1231,7 +1231,7 @@ std::list<std::string> DbCommonAccess::getAllStateHistoryNames ()  throw (oracle
  * \return a pointer on a Clob containing the data from the database.
  * \exception oracle::occi::SQLException : an SQLException is raised in case of trouble in creating or executing the statement
  */
-oracle::occi::Clob *DbCommonAccess::getXMLClobFromQuery (std::string readString ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbCommonAccess::getXMLClobFromQuery (std::string readString ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << "readString " << readString << std::endl;
@@ -1298,7 +1298,7 @@ std::string DbCommonAccess::getErrorMessage() {
  * \param deleteValues - delete the values before doing the update: 0 do not delete, 1 delete the partitions which are not in the current state, 2 delete everything
  * \param withStrips - update the FED with strips
  */
-void DbCommonAccess::refreshCacheXMLClob ( int deleteValues, bool withStrips ) throw (oracle::occi::SQLException) {
+void DbCommonAccess::refreshCacheXMLClob ( int deleteValues, bool withStrips ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::refreshCacheXMLClob()" << std::endl;
@@ -1323,7 +1323,7 @@ void DbCommonAccess::refreshCacheXMLClob ( int deleteValues, bool withStrips ) t
 
 /** Delete the cache of the connections, FEC, FED
  */
-void DbCommonAccess::deleteCacheXMLClob ( ) throw (oracle::occi::SQLException) {
+void DbCommonAccess::deleteCacheXMLClob ( ) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << "DbCommonAccess::deleteCacheXMLClob()" << std::endl;
@@ -1355,7 +1355,7 @@ void DbCommonAccess::deleteCacheXMLClob ( ) throw (oracle::occi::SQLException) {
  * \param partitionName - partition name
  * \return a list of pairs containing the name of the cooling and if DCU/PSU map detected is the one expected
  */
-std::vector<std::pair<std::string, bool> > DbCommonAccess::setTKCCDcuPsuMapValidation(std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+std::vector<std::pair<std::string, bool> > DbCommonAccess::setTKCCDcuPsuMapValidation(std::string partitionName) noexcept(false) {
 
   // ----------------------------------------
   // Get the partition ID
@@ -1493,7 +1493,7 @@ std::vector<std::pair<std::string, bool> > DbCommonAccess::setTKCCDcuPsuMapValid
 /** \brief send a XML buffer to the database to be parsed
  * \param buffer - XML buffer to be sent
  */
-int DbCommonAccess::setGenericXMLClob(std::string buffer, std::string tableName) throw (oracle::occi::SQLException, FecExceptionHandler){
+int DbCommonAccess::setGenericXMLClob(std::string buffer, std::string tableName) noexcept(false){
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << ": " << buffer <<std::endl;
@@ -1571,7 +1571,7 @@ std::string DbCommonAccess::what ( std::string message, oracle::occi::SQLExcepti
  * \param o2oTimestamp - a given timestamp (o2o time operation)
  */
 void DbCommonAccess::setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int runNumber ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DATABASEDEBUG
   std::cerr << __PRETTY_FUNCTION__ << " for partition " << partitionName << " and subdetector " << subDetector << " at " << runNumber << std::endl;
@@ -1600,7 +1600,7 @@ void DbCommonAccess::setO2OOperation ( std::string partitionName, std::string su
  * \param partitionName - partition name
  * \return true if the versions for the partition is coherent, false if it is not coherent
  */
-int DbCommonAccess::getO2OXchecked ( std::string partitionName ) throw (FecExceptionHandler) {
+int DbCommonAccess::getO2OXchecked ( std::string partitionName ) noexcept(false) {
 
   static std::string queryString = "BEGIN :a := PkgO2OPartition.getO2OXChecked(:b); END;";
   int result = 0;
diff --git a/FecSoftwareV3_0/generic/src/common/DbConnectionsAccess.cc b/FecSoftwareV3_0/generic/src/common/DbConnectionsAccess.cc
index ac4ac0d..e7a536b 100755
--- a/FecSoftwareV3_0/generic/src/common/DbConnectionsAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbConnectionsAccess.cc
@@ -29,7 +29,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbConnectionsAccess::DbConnectionsAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbAccess (threaded) {
+DbConnectionsAccess::DbConnectionsAccess ( bool threaded ) noexcept(false) : DbAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -37,14 +37,14 @@ DbConnectionsAccess::DbConnectionsAccess ( bool threaded ) throw (oracle::occi::
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbConnectionsAccess::DbConnectionsAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbAccess (user, passwd, dbPath, threaded) {
+DbConnectionsAccess::DbConnectionsAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbConnectionsAccess::~DbConnectionsAccess ()  throw (oracle::occi::SQLException) {
+DbConnectionsAccess::~DbConnectionsAccess ()  noexcept(false) {
 }
 
 /**Get the current version for a given partition name
@@ -54,7 +54,7 @@ DbConnectionsAccess::~DbConnectionsAccess ()  throw (oracle::occi::SQLException)
  * @see DbAccess::getDatabaseVersion (std::string sqlQuery)
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbConnectionsAccess::getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException){
+std::list<unsigned int*> DbConnectionsAccess::getDatabaseVersion (std::string partitionName) noexcept(false){
 
   static std::string sqlQuery ;
   sqlQuery = "SELECT DISTINCT StateHistory.partitionId, StateHistory.connectionVersionMajorId, StateHistory.connectionVersionMinorId, StateHistory.maskVersionMajorId, StateHistory.maskVersionMinorId FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId = Partition.partitionId AND Partition.partitionName= :paramPartitionName";
@@ -67,7 +67,7 @@ std::list<unsigned int*> DbConnectionsAccess::getDatabaseVersion (std::string pa
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbConnectionsAccess::getNextMajorVersion() throw (FecExceptionHandler)
+unsigned int DbConnectionsAccess::getNextMajorVersion() noexcept(false)
 {
   static std::string sqlQuery = "SELECT MAX(versionMajorId)+1 FROM ConnectionVersion";
   return (unsigned int)DbAccess::getVersion(sqlQuery);
@@ -79,7 +79,7 @@ unsigned int DbConnectionsAccess::getNextMajorVersion() throw (FecExceptionHandl
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbConnectionsAccess::getNextMinorVersion(unsigned int majorId) throw (FecExceptionHandler)
+unsigned int DbConnectionsAccess::getNextMinorVersion(unsigned int majorId) noexcept(false)
 {
   static std::string sqlQuery ;
   sqlQuery = "SELECT MAX(versionMinorId)+1 FROM ConnectionVersion where versionMajorId =" + toString(majorId);
@@ -95,7 +95,7 @@ unsigned int DbConnectionsAccess::getNextMinorVersion(unsigned int majorId) thro
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName)
  * @see PkgConnectionsXML.getAllConnections ( partitionName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbConnectionsAccess::getXMLClob( std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbConnectionsAccess::getXMLClob( std::string partitionName ) noexcept(false) {
   static std::string readString = "BEGIN :result := PkgConnectionsXML.getAllConnectionFromPartition(:partitionName);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName);  
 }
@@ -114,7 +114,7 @@ oracle::occi::Clob *DbConnectionsAccess::getXMLClob( std::string partitionName )
  * @see PkgConnectionsXML.getAllConnections ( partitionName IN VARCHAR2, versionMajorId IN NUMBER, versionMinorId IN NUMBER ) RETURN CLOB;
  * @todo : implement this method... if connections versionning is requiered...
  */
-oracle::occi::Clob *DbConnectionsAccess::getXMLClobWithVersion (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbConnectionsAccess::getXMLClobWithVersion (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgConnectionsXML.getAllConnectionFromPartition(:partitionName, :versionMajorId, :versionMinorId, :maskMajor, :maskMinor);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, versionMajor, versionMinor, maskVersionMajor, maskVersionMinor);  
 }
@@ -131,7 +131,7 @@ oracle::occi::Clob *DbConnectionsAccess::getXMLClobWithVersion (std::string part
  * @see PkgConnectionsXML.getAllConnections ( partitionName IN VARCHAR2, versionMajorId IN NUMBER, versionMinorId IN NUMBER ) RETURN CLOB;
  * @todo : implement this method... if connections versionning is requiered...
  */
-oracle::occi::Clob *DbConnectionsAccess::getApvNotConnectedWithVersion (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbConnectionsAccess::getApvNotConnectedWithVersion (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgConnectionsXML.getAllApvNotConnected(:partitionName, :versionMajorId, :versionMinorId);END;";
   return DbAccess::getXMLClobFromQueryWithoutMask(readString, partitionName, versionMajor, versionMinor);  
 }
@@ -149,7 +149,7 @@ oracle::occi::Clob *DbConnectionsAccess::getApvNotConnectedWithVersion (std::str
  * @see PkgConnectionsXML.uploadXMLClob ( xmlClob IN CLOB, versionMajor IN NUMBER, versionMinor IN NUMBER);
  * @todo : connections versionning is not yet implemented
  */
-void DbConnectionsAccess::setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (oracle::occi::SQLException) 
+void DbConnectionsAccess::setXMLClobWithVersion (std::string buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) 
 {
   static std::string writeString = "BEGIN PkgConnectionsXML.uploadXMLClob(:buffer, :partitionName, :versionMajorId, :versionMinorId);END;";
   DbAccess::setXMLClobFromQuery  (writeString, buffer, partitionName, versionMajorId, versionMinorId);
@@ -171,7 +171,7 @@ void DbConnectionsAccess::setXMLClobWithVersion (std::string buffer, std::string
  * @see PkgConnectionsXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  * @todo : connections versionning is not yet implemented
  */
-void DbConnectionsAccess::setXMLClob(std::string buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbConnectionsAccess::setXMLClob(std::string buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false) {
   static std::string writeString = "BEGIN PkgConnectionsXML.uploadXMLClob(:buffer, :partitionName, :versionUpdate);END;";
   DbAccess::setXMLClobFromQuery (writeString, buffer, partitionName, versionUpdate);
 }
diff --git a/FecSoftwareV3_0/generic/src/common/DbFecAccess.cc b/FecSoftwareV3_0/generic/src/common/DbFecAccess.cc
index b526a20..3b69715 100755
--- a/FecSoftwareV3_0/generic/src/common/DbFecAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbFecAccess.cc
@@ -25,7 +25,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbFecAccess::DbFecAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbAccess (threaded) {
+DbFecAccess::DbFecAccess ( bool threaded ) noexcept(false) : DbAccess (threaded) {
 #ifdef DATABASESTAT
   this->traceSql(true);
 #endif
@@ -39,14 +39,14 @@ DbFecAccess::DbFecAccess ( bool threaded ) throw (oracle::occi::SQLException) :
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbFecAccess::DbFecAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbAccess (user, passwd, dbPath, threaded) {
+DbFecAccess::DbFecAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbFecAccess::~DbFecAccess ()  throw (oracle::occi::SQLException) {
+DbFecAccess::~DbFecAccess ()  noexcept(false) {
 #ifdef DATABASESTAT
   this->traceSql(false);
 #endif
@@ -59,7 +59,7 @@ DbFecAccess::~DbFecAccess ()  throw (oracle::occi::SQLException) {
  * @see DbAccess::getDatabaseVersion (std::string sqlQuery)
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbFecAccess::getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException){
+std::list<unsigned int*> DbFecAccess::getDatabaseVersion (std::string partitionName) noexcept(false){
 
   static std::string sqlQuery = "SELECT DISTINCT StateHistory.partitionId, StateHistory.fecVersionMajorId, StateHistory.fecVersionMinorId, StateHistory.maskVersionMajorId, StateHistory.maskVersionMinorId FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId=Partition.partitionId AND Partition.partitionName = :partitionName" ;
 
@@ -77,7 +77,7 @@ std::list<unsigned int*> DbFecAccess::getDatabaseVersion (std::string partitionN
  * @see PkgStateHistory.createNewCurrentState RETURN NUMBER;
  * @see PkgStateHistory.setValues(paramStateId IN NUMBER, paramPartitionId IN NUMBER, fecVersionMajor IN NUMBER, fecVersionMinor IN NUMBER);	
  */
-void DbFecAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsList) throw (FecExceptionHandler){
+void DbFecAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsList) noexcept(false){
 
   oracle::occi::Statement *stmt = NULL ;
   oracle::occi::ResultSet *rset = NULL ;
@@ -157,7 +157,7 @@ void DbFecAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsL
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbFecAccess::getNextMajorVersion() throw (oracle::occi::SQLException)
+unsigned int DbFecAccess::getNextMajorVersion() noexcept(false)
 {
   static std::string sqlQuery = "SELECT MAX(versionMajorId)+1 FROM FecVersion";
   return DbAccess::getVersion(sqlQuery);
@@ -169,7 +169,7 @@ unsigned int DbFecAccess::getNextMajorVersion() throw (oracle::occi::SQLExceptio
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbFecAccess::getNextMinorVersion(unsigned int majorId) throw (oracle::occi::SQLException)
+unsigned int DbFecAccess::getNextMinorVersion(unsigned int majorId) noexcept(false)
 {
   static std::string sqlQuery = "SELECT MAX(versionMinorId)+1 FROM FecVersion where versionMajorId =" + toString(majorId);
   return DbAccess::getVersion(sqlQuery);
@@ -183,7 +183,7 @@ unsigned int DbFecAccess::getNextMinorVersion(unsigned int majorId) throw (oracl
  * @exception FecExceptionHandler : a FecExceptionHandler is raised in case of trouble in creating or executing the statement.
  * @see PkgStateHistory.createConfigurationState(paramPartitionName IN VARCHAR2, paramPartitionNb OUT NUMBER, paramFecVersionMajorNumber OUT NUMBER) RETURN NUMBER; 
  */
-unsigned int DbFecAccess::createNewStateHistory(std::string partitionName, unsigned int *partitionId, unsigned int *fecVersionMajorId)  throw (FecExceptionHandler) {
+unsigned int DbFecAccess::createNewStateHistory(std::string partitionName, unsigned int *partitionId, unsigned int *fecVersionMajorId)  noexcept(false) {
 
   unsigned int stateHistoryId = 0;
   unsigned int i = 0;
@@ -229,7 +229,7 @@ unsigned int DbFecAccess::createNewStateHistory(std::string partitionName, unsig
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName)
  * @see PkgFecXML.getAllFecFromPartition ( partitionName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgFecXML.getAllFecFromPartition(:partitionName);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName);  
 }
@@ -245,7 +245,7 @@ oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName ) throw (o
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int versionMajor, unsigned int versionMinor)
  * @see PkgFecXML.getAllFecFromPartition ( partitionName IN VARCHAR2, versionMajorId IN NUMBER, versionMinorId IN NUMBER ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgFecXML.getAllFecFromPartition(:partitionName, :versionMajorId, :versionMinorId, :maskMajor, :maskMinor);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, versionMajor, versionMinor, maskVersionMajor, maskVersionMinor);  
 }
@@ -260,7 +260,7 @@ oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::getXMLClob(std::string readString, unsigned int id)
  * @see PkgFecXML.getAllFecFromId ( fecHardId IN NUMBER ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName, std::string fecId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName, std::string fecId) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgFecXML.getAllFecFromPartitionAndId(:partitionName, :fecId);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, fecId);  
 }
@@ -277,7 +277,7 @@ oracle::occi::Clob *DbFecAccess::getXMLClob(std::string partitionName, std::stri
  * @see DbAccess::getXMLClob(std::string readString, unsigned int id, unsigned int versionMajorId, unsigned int versionMinorId)
  * @see PkgFecXML.getAllFecFromId ( fecHardId IN NUMBER, versionMajorId IN NUMBER, versionMinorId IN NUMBER ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName, std::string fecId, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName, std::string fecId, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgFecXML.getAllFecFromPartitionAndId(:partitionName, :fecId, :versionMajorId, :versionMinorId);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, fecId, versionMajorId, versionMinorId);  
 }
@@ -293,7 +293,7 @@ oracle::occi::Clob *DbFecAccess::getXMLClobWithVersion(std::string partitionName
  * @see PkgFecXML.configureXMLClob(xmlClob IN CLOB, partitionName IN VARCHAR2) RETURN NUMBER;
  * @see PkgFecXML.addXMLClob ( xmlClob IN CLOB, partitionName IN VARCHAR2) RETURN NUMBER;
  */
-unsigned int DbFecAccess::setXMLClob(std::string* buffer, std::string partitionName, boolean newPartition) throw (oracle::occi::SQLException, FecExceptionHandler) 
+unsigned int DbFecAccess::setXMLClob(std::string* buffer, std::string partitionName, boolean newPartition) noexcept(false) 
 {
   static std::string writeString("BEGIN :versionMajorId := PkgFecXML.configureXMLClob(:bufferPll, :bufferLaserdriver, :bufferApvFec, :bufferApvMux, :bufferDcu, :partitionName, :createNewPartition);END;");
   unsigned int versionMajorId = 0;
@@ -374,7 +374,7 @@ unsigned int DbFecAccess::setXMLClob(std::string* buffer, std::string partitionN
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
 void DbFecAccess::setXMLClobWithVersion(std::string* buffer, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) 
-  throw (oracle::occi::SQLException, FecExceptionHandler) {
+  noexcept(false) {
 
   static std::string writeString("BEGIN PkgFecXML.uploadXMLClob(:bufferPll, :bufferLaserdriver, :bufferApvFec, :bufferApvMux, :bufferDcu, :partitionName, :versionMajor, :versionMinorId); END;");
   oracle::occi::Statement *stmt = NULL ;
@@ -446,7 +446,7 @@ void DbFecAccess::setXMLClobWithVersion(std::string* buffer, std::string partiti
  * @see DbAccess::setXMLClob(std::string writeString, std::string buffer, boolean versionUpdate)  
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbFecAccess::setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFecAccess::setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false) {
 
   static std::string writeString("BEGIN PkgFecXML.uploadXMLClob(:bufferPll, :bufferLaserdriver, :bufferApvFec, :bufferApvMux, :bufferDcu, :partitionName, :versionUpdate); END;");
   oracle::occi::Statement *stmt = NULL ;
@@ -509,7 +509,7 @@ void DbFecAccess::setXMLClob(std::string* buffer, std::string partitionName, uns
  * @see DbAccess::getXMLClobFromQuery(readString, partitionName, fecId, ring);
  * @see PkgCcuXML.getCcus (partitionName IN VARCHAR2, fecHardId IN VARCHAR2, ringSlot IN NUMBER) RETURN CLOB ;
  */
-oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgCcuXML.getRingCcuFromPartition(:partitionName);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName);
 }
@@ -524,7 +524,7 @@ oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName) throw
  * @see DbAccess::getXMLClobFromQuery(readString, partitionName, fecId, ring);
  * @see PkgCcuXML.getCcus (partitionName IN VARCHAR2, fecHardId IN VARCHAR2, ringSlot IN NUMBER) RETURN CLOB ;
  */
-oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName, std::string fecId, unsigned int ring) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName, std::string fecId, unsigned int ring) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgCcuXML.getCcus(:partitionName, :fecId, :ring);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, fecId, ring);
 }
@@ -538,7 +538,7 @@ oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string partitionName, std::s
  * @see DbAccess::getXMLClobFromQuery(readString, partitionName, fecId, ring);
  * @see PkgCcuXML.getCcus (partitionName IN VARCHAR2, fecHardId IN VARCHAR2, ringSlot IN NUMBER) RETURN CLOB ;
  */
-oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string fecHardId, unsigned int ringSlot) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFecAccess::getCcuXMLClob(std::string fecHardId, unsigned int ringSlot) noexcept(false) {
 
 static std::string readString = "BEGIN :xmlClob := PkgCcuXML.getRingCcuConstructionTable(:fecHardId, :ring);END;";
 
@@ -577,7 +577,7 @@ static std::string readString = "BEGIN :xmlClob := PkgCcuXML.getRingCcuConstruct
  * @exception FecExceptionHandler
  * @see PkgFecXML.setXMLClob(stringRequest, buffer, partitionName);
  */
-void DbFecAccess::setCcuXMLClob(std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFecAccess::setCcuXMLClob(std::string buffer, std::string partitionName) noexcept(false) {
   static std::string stringRequest = "BEGIN PkgCcuXML.uploadXMLClob(:xmlClob, :partitionName); END;" ;
   return setXMLClob(stringRequest, buffer, partitionName);
 }
@@ -592,7 +592,7 @@ void DbFecAccess::setCcuXMLClob(std::string buffer, std::string partitionName) t
  * @exception FecExceptionHandler
  * @see PkgFecXML.setXMLClob(stringRequest, buffer, partitionName);
  */
-void DbFecAccess::setRingCcuXMLClob(std::string ringBuffer, std::string ccuBuffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFecAccess::setRingCcuXMLClob(std::string ringBuffer, std::string ccuBuffer, std::string partitionName) noexcept(false) {
   static std::string stringRequest = "BEGIN PkgCcuXML.uploadXMLClob(:ringXmlClob,:ccuXmlClob, :partitionName); END;" ;
   return setXMLClob(stringRequest, ringBuffer, ccuBuffer, partitionName);
 }
@@ -608,7 +608,7 @@ void DbFecAccess::setRingCcuXMLClob(std::string ringBuffer, std::string ccuBuffe
  * @see DbAccess::setXMLClob(std::string buffer, boolean newPartition)  
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbFecAccess::setXMLClob(std::string stringRequest, std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFecAccess::setXMLClob(std::string stringRequest, std::string buffer, std::string partitionName) noexcept(false) {
 
   oracle::occi::Statement *stmt = NULL ;
 
@@ -669,7 +669,7 @@ void DbFecAccess::setXMLClob(std::string stringRequest, std::string buffer, std:
  * @see DbAccess::setXMLClob(std::string bufferOne, std::string bufferTwo, boolean newPartition)  
  * @see PkgCcuXML.uploadXMLClob(xmlClobRing IN CLOB, xmlClobCcu IN CLOB, nextMajor IN NUMBER)
  */
-void DbFecAccess::setXMLClob(std::string stringRequest, std::string bufferOne, std::string bufferTwo, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFecAccess::setXMLClob(std::string stringRequest, std::string bufferOne, std::string bufferTwo, std::string partitionName) noexcept(false) {
   oracle::occi::Statement *stmt = NULL ;
   
   try {
diff --git a/FecSoftwareV3_0/generic/src/common/DbFedAccess.cc b/FecSoftwareV3_0/generic/src/common/DbFedAccess.cc
index 821c585..4af7547 100755
--- a/FecSoftwareV3_0/generic/src/common/DbFedAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbFedAccess.cc
@@ -28,7 +28,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbFedAccess::DbFedAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbAccess (threaded) {
+DbFedAccess::DbFedAccess ( bool threaded ) noexcept(false) : DbAccess (threaded) {
 #ifdef DATABASESTAT
   this->traceSql(true);
 #endif
@@ -42,14 +42,14 @@ DbFedAccess::DbFedAccess ( bool threaded ) throw (oracle::occi::SQLException) :
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbFedAccess::DbFedAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbAccess (user, passwd, dbPath, threaded) {
+DbFedAccess::DbFedAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbFedAccess::~DbFedAccess ()  throw (oracle::occi::SQLException){
+DbFedAccess::~DbFedAccess ()  noexcept(false){
 #ifdef DATABASESTAT
   this->traceSql(false);
 #endif
@@ -62,7 +62,7 @@ DbFedAccess::~DbFedAccess ()  throw (oracle::occi::SQLException){
  * @see DbAccess::getDatabaseVersion (std::string sqlQuery)
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbFedAccess::getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException)
+std::list<unsigned int*> DbFedAccess::getDatabaseVersion (std::string partitionName) noexcept(false)
 {
   static std::string sqlQuery ;
   sqlQuery = "SELECT DISTINCT StateHistory.partitionId, StateHistory.fedVersionMajorId, StateHistory.fedVersionMinorId, StateHistory.maskVersionMajorId, StateHistory.maskVersionMinorId FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId = Partition.partitionId AND Partition.partitionName= :partitionName" ;
@@ -79,7 +79,7 @@ std::list<unsigned int*> DbFedAccess::getDatabaseVersion (std::string partitionN
  * @exception FecExceptionHandler : an exception is raised in case of trouble in statement creation or execution
  * @see PkgState.createNewCurrentState RETURN NUMBER;
  */
-void DbFedAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsListe) throw (FecExceptionHandler){
+void DbFedAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsListe) noexcept(false){
 
   oracle::occi::Statement *stmt = NULL ;
   oracle::occi::ResultSet *rset = NULL ;
@@ -161,7 +161,7 @@ void DbFedAccess::setDatabaseVersion(std::list<unsigned int*> partitionVersionsL
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbFedAccess::getNextMajorVersion() throw (FecExceptionHandler)
+unsigned int DbFedAccess::getNextMajorVersion() noexcept(false)
 {
   static std::string sqlQuery = "SELECT MAX(versionMajorId)+1 FROM FedVersion";
   return (unsigned int)DbAccess::getVersion(sqlQuery);
@@ -173,7 +173,7 @@ unsigned int DbFedAccess::getNextMajorVersion() throw (FecExceptionHandler)
  * @exception SQLException
  * @see DbAccess::getVersion(std::string sqlQuery)
  */
-unsigned int DbFedAccess::getNextMinorVersion(unsigned int majorId) throw (FecExceptionHandler)
+unsigned int DbFedAccess::getNextMinorVersion(unsigned int majorId) noexcept(false)
 {
   static std::string sqlQuery ;
   sqlQuery = "SELECT MAX(versionMinorId)+1 FROM FedVersion where versionMajorId =" + toString(majorId);
@@ -193,7 +193,7 @@ unsigned int DbFedAccess::getNextMinorVersion(unsigned int majorId) throw (FecEx
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartition ( partitionName IN VARCHAR2, versionMajor IN NUMBER, versionMinor IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip) noexcept(false) {
   static std::string readString;
   if (withStrip) {
     readString = "BEGIN :xmlClob := PkgFedXML.getAllFedFromPartitionVersion(:partitionName, :versionMajorId, :versionMinorId, :maskMajor, :maskMinor, 1);END;";
@@ -225,7 +225,7 @@ unsigned long endMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMill
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartition ( partitionName IN VARCHAR2, versionMajor IN NUMBER, versionMinor IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   return DbFedAccess::getXMLClobWithVersion(partitionName, versionMajor, versionMinor, maskVersionMajor, maskVersionMinor, true);  
 }
 
@@ -237,7 +237,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::getXMLClob(std::string partitionName)
  * @see DbFedAccess::getXMLClob(std::string partitionName, boolean withStrip)
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName) noexcept(false) {
   return DbFedAccess::getXMLClob(partitionName, true);  
 }
 
@@ -250,7 +250,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName) throw (or
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName)
  * @see PkgFedXML.getAllFedFromPartition ( partitionName IN VARCHAR2, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, boolean withStrip ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, boolean withStrip ) noexcept(false) {
   static std::string readString;
   if (withStrip) {
     readString = "BEGIN :xmlClob := PkgFedXML.getAllFedFromPartition(:partitionName);END;";
@@ -269,7 +269,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, boolean w
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int id)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId) noexcept(false) {
   return DbFedAccess::getXMLClob(partitionName, fedId, true, true);
 }
 
@@ -282,7 +282,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int id)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, std::string fedId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, std::string fedId) noexcept(false) {
   return DbFedAccess::getXMLClob(partitionName, fromString<unsigned int>(((const std::string)fedId)));
 }
 
@@ -296,7 +296,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, std::stri
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int id)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId) noexcept(false) {
   return DbFedAccess::getXMLClob(partitionName, fedId, hardId, true);
 }
 
@@ -311,7 +311,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName, unsigned int id)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId, boolean withStrip) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned int fedId, boolean hardId, boolean withStrip) noexcept(false) {
   static std::string readString;
   if (hardId && withStrip) {
     readString = "BEGIN :xmlClob := PkgFedXML.getAllFedFromPartitionAndId(:partitionName, :fedId, 1, 1);END;";
@@ -338,7 +338,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClob(std::string partitionName, unsigned
  * @see DbAccess::getXMLClob(std::string readString,  std::string partitionName, unsigned int fedId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, versionMajor IN NUMBER, versionMinor IN NUMBER, pMaskMajorVersion IN NUMBER, pMaskMinorVersion IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, std::string fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, std::string fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   return DbFedAccess::getXMLClobWithVersion(partitionName, fromString<unsigned int>(((const std::string&)fedId)), versionMajorId, versionMinorId, maskVersionMajor, maskVersionMinor);
 }
 
@@ -355,7 +355,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::getXMLClob(std::string readString,  std::string partitionName, unsigned int fedId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, versionMajor IN NUMBER, versionMinor IN NUMBER, pMaskMajorVersion IN NUMBER, pMaskMinorVersion IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   return DbFedAccess::getXMLClobWithVersion( partitionName, fedId, true, versionMajorId, versionMinorId, maskVersionMajor, maskVersionMinor, true);  
 }
 
@@ -374,7 +374,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::getXMLClob(std::string readString,  std::string partitionName, unsigned int fedId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, versionMajor IN NUMBER, versionMinor IN NUMBER, pMaskMajorVersion IN NUMBER, pMaskMinorVersion IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor, boolean withStrip ) noexcept(false) {
   static std::string readString;
   if (hardId && withStrip) {
     readString = "BEGIN :xmlClob := PkgFedXML.getAllFedFromPartitionIdAndId(:partitionId, :fedId, 1, :versionMajorId, :versionMinorId, :maskMajor, :maskMinor, 1);END;";
@@ -444,7 +444,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::getXMLClob(std::string readString,  std::string partitionName, unsigned int fedId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor)
  * @see PkgFedXML.getAllFedFromPartitionAndId ( partitionName IN VARCHAR2, fedNumber IN NUMBER, fedHardId IN BOOLEAN := true, versionMajor IN NUMBER, versionMinor IN NUMBER, pMaskVersionMajor IN NUMBER, pMaskVersionMinor IN NUMBER, withStrip IN BOOLEAN := true ) RETURN CLOB;
  */
-oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName, unsigned int fedId, boolean hardId, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   return DbFedAccess::getXMLClobWithVersion( partitionName, fedId, hardId, versionMajor, versionMinor, maskVersionMajor, maskVersionMinor, true);  
 }
 
@@ -460,7 +460,7 @@ oracle::occi::Clob *DbFedAccess::getXMLClobWithVersion(std::string partitionName
  * @see DbAccess::setXMLClob(std::string writeString, std::string buffer, unsigned int versionMajor, unsigned int versionMinor)
  * @see PkgFedXML.uploadXMLClob ( xmlClob IN CLOB, versionMajor IN NUMBER, versionMinor IN NUMBER);
  */
-void DbFedAccess::setXMLClobWithVersion(std::string buffer, std::string partitionName, unsigned int versionMajor, unsigned int versionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) 
+void DbFedAccess::setXMLClobWithVersion(std::string buffer, std::string partitionName, unsigned int versionMajor, unsigned int versionMinor) noexcept(false) 
 {
   static std::string writeString = "BEGIN PkgFedXML.uploadXMLClob(:buffer, :partitionName, :versionMajorId, :versionMinorId);END;";
   DbAccess::setXMLClobFromQuery (writeString, buffer, partitionName, versionMajor, versionMinor);
@@ -481,7 +481,7 @@ void DbFedAccess::setXMLClobWithVersion(std::string buffer, std::string partitio
  * @see DbAccess::setXMLClob(std::string writeString, std::string buffer, boolean versionUpdate)  
  * @see PkgFedXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbFedAccess::setXMLClob(std::string buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFedAccess::setXMLClob(std::string buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false) {
   static std::string writeString("BEGIN PkgFedXML.uploadXMLClob(:buffer, :partitionName, :versionUpdate);END;");
   DbAccess::setXMLClobFromQuery (writeString, buffer, partitionName, versionUpdate);
 }
@@ -501,7 +501,7 @@ void DbFedAccess::setXMLClob(std::string buffer, std::string partitionName, unsi
  * @see DbAccess::setXMLClob(std::string writeString, std::string buffer, boolean versionUpdate)  
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbFedAccess::setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbFedAccess::setXMLClob(std::string* buffer, std::string partitionName, unsigned int versionUpdate) noexcept(false) {
   static std::string writeString("BEGIN PkgFedXML.uploadXMLClob(:bufferFed, :bufferTtcrx, :bufferVoltageMonitor, :bufferFeFpga, :bufferChannelPair, :bufferChannel, :bufferApvFed, :bufferStrip, :partitionName, :versionUpdate); END;");
   oracle::occi::Statement *stmt = NULL ;
 
diff --git a/FecSoftwareV3_0/generic/src/common/DbInterface.cc b/FecSoftwareV3_0/generic/src/common/DbInterface.cc
index 803789f..36f8632 100644
--- a/FecSoftwareV3_0/generic/src/common/DbInterface.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbInterface.cc
@@ -260,7 +260,7 @@ void DbInterface::clearDetIdDescriptions ( ) {
  * \param partitionNumber - output partition ID in the database
  */
 void DbInterface::getFedPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskVersionMajor, unsigned int *maskVersionMinor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   tkStateVector dbStates = deviceFactory_->getCurrentStates () ;
   tkStateVector::iterator itState = dbStates.begin() ;
diff --git a/FecSoftwareV3_0/generic/src/common/DbPiaResetAccess.cc b/FecSoftwareV3_0/generic/src/common/DbPiaResetAccess.cc
index 609e9bf..5b1c961 100755
--- a/FecSoftwareV3_0/generic/src/common/DbPiaResetAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbPiaResetAccess.cc
@@ -25,7 +25,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbPiaResetAccess::DbPiaResetAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbAccess (threaded) {
+DbPiaResetAccess::DbPiaResetAccess ( bool threaded ) noexcept(false) : DbAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -36,14 +36,14 @@ DbPiaResetAccess::DbPiaResetAccess ( bool threaded ) throw (oracle::occi::SQLExc
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbPiaResetAccess::DbPiaResetAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbAccess (user, passwd, dbPath, threaded) {
+DbPiaResetAccess::DbPiaResetAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbPiaResetAccess::~DbPiaResetAccess ()  throw (oracle::occi::SQLException) {
+DbPiaResetAccess::~DbPiaResetAccess ()  noexcept(false) {
 }
 
 /**Sends a request to the database to execute a PL/SQL stored procedure in order to get a Clob containing the data from the database.<BR>
@@ -55,7 +55,7 @@ DbPiaResetAccess::~DbPiaResetAccess ()  throw (oracle::occi::SQLException) {
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName)
  * @see PkgPiaResetXML.getAllFecFromPartition ( partitionName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgPiaResetXML.getAllPiaFromPartition(:partitionName);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName);  
 
@@ -71,7 +71,7 @@ oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName) thr
  * @see DbAccess::getXMLClob(std::string readString, std::string partitionName)
  * @see PkgPiaResetXML.getAllFecFromPartition ( partitionName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName, std::string fecHardId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName, std::string fecHardId) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgPiaResetXML.getAllPiaFromPartitionAndId(:partitionName, :fecHardId);END;";
   return DbAccess::getXMLClobFromQuery(readString, partitionName, fecHardId);  
 
@@ -86,7 +86,7 @@ oracle::occi::Clob *DbPiaResetAccess::getXMLClob (std::string partitionName, std
  * @see DbAccess::setXMLClob(std::string writeString, std::string buffer, std::string partitionName) 
  * @see PkgPiaResetXML.addXMLClob ( xmlClob IN CLOB, partitionName IN VARCHAR2) RETURN NUMBER;
  */
-void DbPiaResetAccess::setXMLClob(std::string buffer, std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbPiaResetAccess::setXMLClob(std::string buffer, std::string partitionName) noexcept(false) {
   static std::string writeString("BEGIN PkgPiaResetXML.uploadXMLClob(:bufferPiaReset, :partitionName);END;");
   oracle::occi::Statement *stmt = NULL ;
 
diff --git a/FecSoftwareV3_0/generic/src/common/DbTkDcuConversionAccess.cc b/FecSoftwareV3_0/generic/src/common/DbTkDcuConversionAccess.cc
index 4c79e2a..dbbc729 100755
--- a/FecSoftwareV3_0/generic/src/common/DbTkDcuConversionAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbTkDcuConversionAccess.cc
@@ -26,7 +26,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbTkDcuConversionAccess::DbTkDcuConversionAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {
+DbTkDcuConversionAccess::DbTkDcuConversionAccess ( bool threaded ) noexcept(false) : DbCommonAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -37,14 +37,14 @@ DbTkDcuConversionAccess::DbTkDcuConversionAccess ( bool threaded ) throw (oracle
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbTkDcuConversionAccess::DbTkDcuConversionAccess (std::string user, std::string passwd, std::string dbPath, bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (user, passwd, dbPath, threaded) {
+DbTkDcuConversionAccess::DbTkDcuConversionAccess (std::string user, std::string passwd, std::string dbPath, bool threaded ) noexcept(false) : DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbTkDcuConversionAccess::~DbTkDcuConversionAccess ()  throw (oracle::occi::SQLException) {
+DbTkDcuConversionAccess::~DbTkDcuConversionAccess ()  noexcept(false) {
 }
 
 /**Sends a request to the database to execute a PL/SQL stored procedure in order to get a Clob containing the data from the database.<BR>
@@ -56,7 +56,7 @@ DbTkDcuConversionAccess::~DbTkDcuConversionAccess ()  throw (oracle::occi::SQLEx
  * @see DbAccess::getXMLClob(std::string readString, std::string supervisorIp, unsigned int xdaqInstance, std::string xdaqClassName)
  * @see PkgFecXML.getAllFecFromPartitionAndIp ( pcIpNumber IN VARCHAR2, xdaqInstanceNb IN NUMBER, xdaqClassName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob(tscType32 dcuHardId ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob(tscType32 dcuHardId ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgDcuConversionXML.getDcuConversionFromDcuHardId(:dcuHardId);END;";
 #ifdef DATABASEDEBUG
   std::cerr << "readString " << readString << std::endl;
@@ -100,7 +100,7 @@ oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob(tscType32 dcuHardId ) th
  * @see DbAccess::getXMLClob(std::string readString, std::string supervisorIp, unsigned int xdaqInstance, std::string xdaqClassName)
  * @see PkgFecXML.getAllFecFromPartitionAndIp ( pcIpNumber IN VARCHAR2, xdaqInstanceNb IN NUMBER, xdaqClassName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob( std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob( std::string partitionName ) noexcept(false) {
 
   static std::string readString("BEGIN :xmlClob := PkgDcuConversionXML.getDcuConversionFromPartition(:partitionName);END;") ;
   oracle::occi::Statement *stmt = NULL ;
@@ -143,7 +143,7 @@ oracle::occi::Clob *DbTkDcuConversionAccess::getXMLClob( std::string partitionNa
  * @exception FecExceptionHandler
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbTkDcuConversionAccess::setXMLClob(std::string buffer) throw (oracle::occi::SQLException, FecExceptionHandler) 
+void DbTkDcuConversionAccess::setXMLClob(std::string buffer) noexcept(false) 
 {
   //std::cout<<buffer<<std::endl;
   static std::string writeString = "BEGIN PkgDcuConversionXML.uploadClob(:buffer); END;";
diff --git a/FecSoftwareV3_0/generic/src/common/DbTkDcuInfoAccess.cc b/FecSoftwareV3_0/generic/src/common/DbTkDcuInfoAccess.cc
index 0d09f7f..8f64bd4 100755
--- a/FecSoftwareV3_0/generic/src/common/DbTkDcuInfoAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbTkDcuInfoAccess.cc
@@ -26,7 +26,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbTkDcuInfoAccess::DbTkDcuInfoAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {
+DbTkDcuInfoAccess::DbTkDcuInfoAccess ( bool threaded ) noexcept(false) : DbCommonAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -37,14 +37,14 @@ DbTkDcuInfoAccess::DbTkDcuInfoAccess ( bool threaded ) throw (oracle::occi::SQLE
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbTkDcuInfoAccess::DbTkDcuInfoAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbCommonAccess (user, passwd, dbPath, threaded) {
+DbTkDcuInfoAccess::DbTkDcuInfoAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbTkDcuInfoAccess::~DbTkDcuInfoAccess ()  throw (oracle::occi::SQLException) {
+DbTkDcuInfoAccess::~DbTkDcuInfoAccess ()  noexcept(false) {
 }
 
 /**Get the current version for a given partition name
@@ -54,7 +54,7 @@ DbTkDcuInfoAccess::~DbTkDcuInfoAccess ()  throw (oracle::occi::SQLException) {
  * @see DbAccess::getDatabaseVersion (std::string sqlQuery)
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException){
+std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion (std::string partitionName) noexcept(false){
 
   static std::string sqlQuery = "SELECT DISTINCT StateHistory.partitionId, StateHistory.dcuInfoVersionMajorId, StateHistory.dcuInfoVersionMinorId, 0, 0 FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId=Partition.partitionId AND Partition.partitionName = :partitionName" ;
 
@@ -67,7 +67,7 @@ std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion (std::string part
  * @exception oracle::occi::SQLException
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion ( ) throw (oracle::occi::SQLException, FecExceptionHandler){
+std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion ( ) noexcept(false){
 
   static std::string writeString = "BEGIN PkgDcuInfo.getLastVersion(:versionMajor, :versionMinor);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -115,7 +115,7 @@ std::list<unsigned int*> DbTkDcuInfoAccess::getDatabaseVersion ( ) throw (oracle
  * @see DbAccess::getXMLClob(std::string readString, std::string supervisorIp, unsigned int xdaqInstance, std::string xdaqClassName)
  * @see PkgFecXML.getAllFecFromPartitionAndIp ( pcIpNumber IN VARCHAR2, xdaqInstanceNb IN NUMBER, xdaqClassName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob( std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob( std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgDcuInfoXML.getDcuInfoFromPartition(:partitionName,:versionMajor,:versionMinor);END;";
   oracle::occi::Statement *stmt = NULL ;
   
@@ -162,7 +162,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob( std::string partitionName, un
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob() throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob() noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgDcuInfoXML.getAllDcuInfo();END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -205,7 +205,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob() throw (oracle::occi::SQLExce
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob(unsigned int majorVersionId, unsigned int minorVersionId) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob(unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgDcuInfoXML.getAllDcuInfo(:majorId, :minorId);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -249,7 +249,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getXMLClob(unsigned int majorVersionId, u
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getCurrentStatesXMLClob( ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getCurrentStatesXMLClob( ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgStateHistoryXML.getStates;END;";
   oracle::occi::Statement *stmt = NULL ;
 
@@ -288,7 +288,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getCurrentStatesXMLClob( ) throw (oracle:
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getFecVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getFecVersionsXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllFecVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -330,7 +330,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getFecVersionsXMLClob(std::string partiti
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getFedVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getFedVersionsXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllFedVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -371,7 +371,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getFedVersionsXMLClob(std::string partiti
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getDcuInfoVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getDcuInfoVersionsXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllDcuInfoVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -413,7 +413,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getDcuInfoVersionsXMLClob(std::string par
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getConnectionVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getConnectionVersionsXMLClob(std::string partitionName ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllConnectionVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
 
@@ -454,7 +454,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getConnectionVersionsXMLClob(std::string
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getDcuPsuMapVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getDcuPsuMapVersionsXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllDcuPsuMapVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -496,7 +496,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getDcuPsuMapVersionsXMLClob(std::string p
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getMaskVersionsXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getMaskVersionsXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgVersionXML.getAllMaskVersions(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -538,7 +538,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getMaskVersionsXMLClob(std::string partit
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getLastRunXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getLastRunXMLClob(std::string partitionName ) noexcept(false) {
   static std::string readString = "BEGIN :xmlClob := PkgRunXML.getRun(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
 
@@ -579,7 +579,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getLastRunXMLClob(std::string partitionNa
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getAllRunsXMLClob( ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getAllRunsXMLClob( ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgRunXML.getAllRuns();END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -621,7 +621,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getAllRunsXMLClob( ) throw (oracle::occi:
  * @exception oracle::occi::SQLException
  */
 
-oracle::occi::Clob *DbTkDcuInfoAccess::getRunXMLClob(std::string partitionName, int runNumber ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getRunXMLClob(std::string partitionName, int runNumber ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgRunXML.getRunWithNumber(:partitionName, :runNumber);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -663,7 +663,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getRunXMLClob(std::string partitionName,
  * @return a pointer on a Clob containing the data about the last run used for O2O for this partition in the database.
  * @exception oracle::occi::SQLException
  */
-oracle::occi::Clob *DbTkDcuInfoAccess::getLastO2ORunXMLClob(std::string partitionName ) throw (oracle::occi::SQLException) {
+oracle::occi::Clob *DbTkDcuInfoAccess::getLastO2ORunXMLClob(std::string partitionName ) noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgRunXML.getLastO2ORun(:partitionName);END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -708,7 +708,7 @@ oracle::occi::Clob *DbTkDcuInfoAccess::getLastO2ORunXMLClob(std::string partitio
  * @exception FecExceptionHandler
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbTkDcuInfoAccess::setXMLClob(std::string buffer) throw (oracle::occi::SQLException, FecExceptionHandler) 
+void DbTkDcuInfoAccess::setXMLClob(std::string buffer) noexcept(false) 
 {
   static std::string writeString = "BEGIN PkgDcuInfoXML.uploadClob(:buffer); END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -759,7 +759,7 @@ void DbTkDcuInfoAccess::setXMLClob(std::string buffer) throw (oracle::occi::SQLE
  * @exception SQLException
  * @exception FecExceptionHandler
  */
-void DbTkDcuInfoAccess::updateChannelDelays (std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler){
+void DbTkDcuInfoAccess::updateChannelDelays (std::string partitionName) noexcept(false){
   static std::string writeString = "BEGIN PkgDcuInfo.updateChannelDelays(:paramPartitionName); END;";
   oracle::occi::Statement *stmt = NULL ;
 
@@ -780,7 +780,7 @@ void DbTkDcuInfoAccess::updateChannelDelays (std::string partitionName) throw (o
 /** Upload XML clob to database for diagnotic system
  * \param buffer - CLOB to be uploaded
  */
-void DbTkDcuInfoAccess::uploadDiagnoticXMLClob ( std::string buffer ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbTkDcuInfoAccess::uploadDiagnoticXMLClob ( std::string buffer ) noexcept(false) {
 
   static std::string writeString = "BEGIN PkgDiagnosticXML.uploadDiagnosticXMLClob(:buffer); END;";
   oracle::occi::Statement *stmt = NULL ;
diff --git a/FecSoftwareV3_0/generic/src/common/DbTkDcuPsuMapAccess.cc b/FecSoftwareV3_0/generic/src/common/DbTkDcuPsuMapAccess.cc
index 8b0587d..76ad0c2 100755
--- a/FecSoftwareV3_0/generic/src/common/DbTkDcuPsuMapAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbTkDcuPsuMapAccess.cc
@@ -26,7 +26,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbTkDcuPsuMapAccess::DbTkDcuPsuMapAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {
+DbTkDcuPsuMapAccess::DbTkDcuPsuMapAccess ( bool threaded ) noexcept(false) : DbCommonAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -37,14 +37,14 @@ DbTkDcuPsuMapAccess::DbTkDcuPsuMapAccess ( bool threaded ) throw (oracle::occi::
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbTkDcuPsuMapAccess::DbTkDcuPsuMapAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbCommonAccess (user, passwd, dbPath, threaded) {
+DbTkDcuPsuMapAccess::DbTkDcuPsuMapAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbTkDcuPsuMapAccess::~DbTkDcuPsuMapAccess ()  throw (oracle::occi::SQLException) {
+DbTkDcuPsuMapAccess::~DbTkDcuPsuMapAccess ()  noexcept(false) {
 }
 
 /**Get the current version for a given partition name
@@ -54,7 +54,7 @@ DbTkDcuPsuMapAccess::~DbTkDcuPsuMapAccess ()  throw (oracle::occi::SQLException)
  * @see DbAccess::getDatabaseVersion (std::string sqlQuery)
  * @todo use a callable statement to execute a PL/SQL function with bind variable to avoid the query parsing at every call 
  */
-std::list<unsigned int*> DbTkDcuPsuMapAccess::getDatabaseVersion (std::string partitionName) throw (oracle::occi::SQLException){
+std::list<unsigned int*> DbTkDcuPsuMapAccess::getDatabaseVersion (std::string partitionName) noexcept(false){
 
   static std::string sqlQuery = "SELECT DISTINCT StateHistory.partitionId, StateHistory.dcuPsuMapVersionMajorId, StateHistory.dcuPsuMapVersionMinorId, StateHistory.maskVersionMajorId, StateHistory.maskVersionMinorId FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId=Partition.partitionId AND Partition.partitionName = :partitionName" ;
 
@@ -74,7 +74,7 @@ std::list<unsigned int*> DbTkDcuPsuMapAccess::getDatabaseVersion (std::string pa
  * @see DbAccess::getXMLClob(std::string readString, std::string supervisorIp, unsigned int xdaqInstance, std::string xdaqClassName)
  * @see PkgFecXML.getAllFecFromPartitionAndIp ( pcIpNumber IN VARCHAR2, xdaqInstanceNb IN NUMBER, xdaqClassName IN VARCHAR2 ) RETURN CLOB;
  */
-oracle::occi::Clob *DbTkDcuPsuMapAccess::getXMLClob( int onlyPsuName, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+oracle::occi::Clob *DbTkDcuPsuMapAccess::getXMLClob( int onlyPsuName, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
   static std::string readString ;
 
   switch (onlyPsuName) {
@@ -127,7 +127,7 @@ oracle::occi::Clob *DbTkDcuPsuMapAccess::getXMLClob( int onlyPsuName, std::strin
  * @param versionMinor - version major (0.0 means current version)
  * @see the method DbTkDcuPsuMapAccess::getXMLClob( bool onlyPsuName, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId )
  */
-oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNameXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNameXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
 
   return getXMLClob ( 0, partitionName, versionMajorId, versionMinorId ) ;
 }
@@ -139,7 +139,7 @@ oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNameXMLClob( std::string partitio
  * @param versionMinor - version major (0.0 means current version)
  * @see the method DbTkDcuPsuMapAccess::getXMLClob( bool onlyPsuName, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId )
  */
-oracle::occi::Clob *DbTkDcuPsuMapAccess::getDcuPsuMapXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+oracle::occi::Clob *DbTkDcuPsuMapAccess::getDcuPsuMapXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
 
   return getXMLClob ( 1, partitionName, versionMajorId, versionMinorId ) ;
 }
@@ -151,7 +151,7 @@ oracle::occi::Clob *DbTkDcuPsuMapAccess::getDcuPsuMapXMLClob( std::string partit
  * @param versionMinor - version major (0.0 means current version)
  * @see the method DbTkDcuPsuMapAccess::getXMLClob( bool onlyPsuName, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId )
  */
-oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNotConnectedXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNotConnectedXMLClob( std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId ) noexcept(false) {
 
   return getXMLClob ( 2, partitionName, versionMajorId, versionMinorId ) ;
 }
@@ -167,7 +167,7 @@ oracle::occi::Clob *DbTkDcuPsuMapAccess::getPsuNotConnectedXMLClob( std::string
  * @exception FecExceptionHandler
  * @see PkgFecXML.uploadXMLClob(xmlClob IN CLOB, nextMajor IN NUMBER)
  */
-void DbTkDcuPsuMapAccess::setXMLClob(bool psuNameOnly, std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbTkDcuPsuMapAccess::setXMLClob(bool psuNameOnly, std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) noexcept(false) {
 
   static std::string writeString ;
 
@@ -252,7 +252,7 @@ void DbTkDcuPsuMapAccess::setXMLClob(bool psuNameOnly, std::string buffer, std::
  * @param versionMajor - version uploaded
  * @param versionMinor - version uploaded
  */
-void DbTkDcuPsuMapAccess::uploadPsuNames ( std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbTkDcuPsuMapAccess::uploadPsuNames ( std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) noexcept(false) {
 
   setXMLClob(true, buffer, partitionName, versionMajorId, versionMinorId ) ;
 }
@@ -263,7 +263,7 @@ void DbTkDcuPsuMapAccess::uploadPsuNames ( std::string buffer, std::string parti
  * @param versionMajor - version uploaded
  * @param versionMinor - version uploaded
  */
-void DbTkDcuPsuMapAccess::uploadDcuPsuMap ( std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbTkDcuPsuMapAccess::uploadDcuPsuMap ( std::string buffer, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) noexcept(false) {
 
   setXMLClob(false, buffer, partitionName, versionMajorId, versionMinorId ) ;
 }
diff --git a/FecSoftwareV3_0/generic/src/common/DbTkIdVsHostnameAccess.cc b/FecSoftwareV3_0/generic/src/common/DbTkIdVsHostnameAccess.cc
index 638254b..d0c82ab 100755
--- a/FecSoftwareV3_0/generic/src/common/DbTkIdVsHostnameAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbTkIdVsHostnameAccess.cc
@@ -31,7 +31,7 @@
  * \param threaded - create a dedicated access
  */
 DbTkIdVsHostnameAccess::DbTkIdVsHostnameAccess( bool threaded ) 
-  throw (oracle::occi::SQLException) : 
+  noexcept(false) : 
   DbCommonAccess (threaded) {
 }
 
@@ -42,13 +42,13 @@ DbTkIdVsHostnameAccess::DbTkIdVsHostnameAccess( bool threaded )
  * \param threaded - create a dedicated access
  */
 DbTkIdVsHostnameAccess::DbTkIdVsHostnameAccess ( std::string user, std::string passwd, std::string dbPath, bool threaded  ) 
-  throw (oracle::occi::SQLException): 
+  noexcept(false): 
   DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /** Nothing
  */
-DbTkIdVsHostnameAccess::~DbTkIdVsHostnameAccess ( ) throw (oracle::occi::SQLException) {
+DbTkIdVsHostnameAccess::~DbTkIdVsHostnameAccess ( ) noexcept(false) {
 }
 
 /** Download all the ID versus hostname for a given version (option)
@@ -57,7 +57,7 @@ DbTkIdVsHostnameAccess::~DbTkIdVsHostnameAccess ( ) throw (oracle::occi::SQLExce
  * \return a clob with the XML buffer
  */
 oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClob( unsigned int versionMajorId, unsigned int versionMinorId ) 
-  throw (oracle::occi::SQLException) {
+  noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgIdVsHostnameXML.getAllIdVsHostname(:versionMajor,:versionMinor);END;";
 
@@ -104,7 +104,7 @@ oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClob( unsigned int versionMajo
  * \return a clob with the XML buffer
  */
 oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClobFromHostname( std::string hostname, unsigned int versionMajorId, unsigned int versionMinorId ) 
-  throw (oracle::occi::SQLException) {
+  noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgIdVsHostnameXML.getAllIdFromHostname(:hostname,:versionMajor,:versionMinor);END;";
 
@@ -153,7 +153,7 @@ oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClobFromHostname( std::string
  * \return a clob with the XML buffer
  */
 oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClobFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajorId, unsigned int versionMinorId ) 
-  throw (oracle::occi::SQLException) {
+  noexcept(false) {
 
   static std::string readString = "BEGIN :xmlClob := PkgIdVsHostnameXML.getIdFromHostnameSlot(:hostname,:slot,:versionMajor,:versionMinor);END;";
 
@@ -204,7 +204,7 @@ oracle::occi::Clob *DbTkIdVsHostnameAccess::getXMLClobFromHostnameSlot ( std::st
  * \param versionMinorId - version major ID, 0 for current state
  */
 void DbTkIdVsHostnameAccess::getSubDetectorCrateNumber ( std::string hostname, std::string &subDetector, unsigned int &crateNumber, unsigned int versionMajorId, unsigned int versionMinorId ) 
-  throw (oracle::occi::SQLException) {
+  noexcept(false) {
 
   static std::string writeString = "BEGIN PkgIdVsHostnameXML.getSubDetectorCrateNumber(:hostname,:subdetector,:crateNumber,:versionMajor,:versionMinor);END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -242,7 +242,7 @@ void DbTkIdVsHostnameAccess::getSubDetectorCrateNumber ( std::string hostname, s
  * \param versionMinorId - version major ID, output
  */
 void DbTkIdVsHostnameAccess::getTkIdVsHostnameVersion ( unsigned int &versionMajorId, unsigned int &versionMinorId ) 
-  throw (oracle::occi::SQLException) {
+  noexcept(false) {
 
   static std::string writeString = "BEGIN PkgIdVsHostnameXML.getCurrentVersion(:versionMajor,:versionMinor);END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -273,7 +273,7 @@ void DbTkIdVsHostnameAccess::getTkIdVsHostnameVersion ( unsigned int &versionMaj
 /** Upload a clob containing a XML buffer to database
  * \param buffer - XML buffer
  */
-void DbTkIdVsHostnameAccess::setXMLClob (std::string buffer, bool major) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void DbTkIdVsHostnameAccess::setXMLClob (std::string buffer, bool major) noexcept(false) {
 
   static std::string writeString = "BEGIN PkgIdVsHostnameXML.configureXMLClob(:buffer,:versionmajor,:versionminor,:major); END;";
   oracle::occi::Statement *stmt = NULL ;
diff --git a/FecSoftwareV3_0/generic/src/common/DbTkMaskModulesAccess.cc b/FecSoftwareV3_0/generic/src/common/DbTkMaskModulesAccess.cc
index f7ab153..4301a27 100644
--- a/FecSoftwareV3_0/generic/src/common/DbTkMaskModulesAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DbTkMaskModulesAccess.cc
@@ -26,7 +26,7 @@
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess()
  */
-DbTkMaskModulesAccess::DbTkMaskModulesAccess ( bool threaded ) throw (oracle::occi::SQLException) : DbCommonAccess (threaded) {
+DbTkMaskModulesAccess::DbTkMaskModulesAccess ( bool threaded ) noexcept(false) : DbCommonAccess (threaded) {
 }
 
 /**Create an access to the database
@@ -37,14 +37,14 @@ DbTkMaskModulesAccess::DbTkMaskModulesAccess ( bool threaded ) throw (oracle::oc
  * @exception oracle::occi::SQLException
  * @see DbAccess::DbAccess(std::string user, std::string passwd, std::string dbPath)
  */
-DbTkMaskModulesAccess::DbTkMaskModulesAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) throw (oracle::occi::SQLException) : DbCommonAccess (user, passwd, dbPath, threaded) {
+DbTkMaskModulesAccess::DbTkMaskModulesAccess (std::string user, std::string passwd, std::string dbPath, bool threaded) noexcept(false) : DbCommonAccess (user, passwd, dbPath, threaded) {
 }
 
 /**Close the access to the database
  * @exception oracle::occi::SQLException
  * @see DbAccess::~DbAccess()
  */
-DbTkMaskModulesAccess::~DbTkMaskModulesAccess ()  throw (oracle::occi::SQLException) {
+DbTkMaskModulesAccess::~DbTkMaskModulesAccess ()  noexcept(false) {
 }
 
 /**
@@ -55,7 +55,7 @@ DbTkMaskModulesAccess::~DbTkMaskModulesAccess ()  throw (oracle::occi::SQLExcept
  * \param pVersionMinor - mask version minor ID
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  */
-void DbTkMaskModulesAccess::getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor) noexcept(false) { 
 
   static std::string sqlQuery = "SELECT DISTINCT Partition.partitionId, StateHistory.maskVersionMajorId, StateHistory.maskVersionMinorId FROM CurrentState, StateHistory, Partition  WHERE StateHistory.stateHistoryId = CurrentState.stateHistoryId AND StateHistory.partitionId=Partition.partitionId AND Partition.partitionName = :partitionName" ;
 
@@ -92,7 +92,7 @@ void DbTkMaskModulesAccess::getCurrentMaskVersion ( std::string pPartitionName,
  * \param pVersionMinor - mask version minor ID
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::copyMask
  */
-void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.copyMask(:pPartitionName, :pVersionMajor, :pVersionMinor); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -124,7 +124,7 @@ void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int
  * \param pPartitionName - partition name*
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::copyMask
  */
-void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.copyMask(:pPartitionName); END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -154,7 +154,7 @@ void DbTkMaskModulesAccess::copyMask ( std::string pPartitionName, unsigned int
  * \param pPartitionName - partition name
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::resetMask
  */
-void DbTkMaskModulesAccess::resetMask ( std::string pPartitionName) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::resetMask ( std::string pPartitionName) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.resetMask(:pPartitionName); END;";
   oracle::occi::Statement *stmt = NULL ;
@@ -181,7 +181,7 @@ void DbTkMaskModulesAccess::resetMask ( std::string pPartitionName) throw (oracl
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFedModules(:pPartitionName, :pFedSoftId, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -215,7 +215,7 @@ void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFedModules(:pPartitionName, :pFedSoftId, :pFedChannel, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -251,7 +251,7 @@ void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFedModules(:pPartitionName, :pFedSoftId, :pFedChannel, :pApvFed, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -287,7 +287,7 @@ void DbTkMaskModulesAccess::maskFedModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecSlot, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -321,7 +321,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecHardId, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -356,7 +356,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::st
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecSlot, :pRing, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -392,7 +392,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecHardId, :pRing, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -429,7 +429,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::st
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecSlot, :pRing, :pCcuAddress, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -467,7 +467,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecHardId, :pRing, :pCcuAddress, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -506,7 +506,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::st
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecSlot, :pRing, :pCcuAddress, :pChannel, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -546,7 +546,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecHardId, :pRing, :pCcuAddress, :pChannel, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -587,7 +587,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::st
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecSlot, :pRing, :pCcuAddress, :pChannel, :pAddress, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -629,7 +629,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, unsigne
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskFecModules(:pPartitionName, :pFecHardId, :pRing, :pCcuAddress, :pChannel, :pAddress, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -668,7 +668,7 @@ void DbTkMaskModulesAccess::maskFecModules ( std::string pPartitionName, std::st
  * \see maskFecModules ( std::string pPartitionName, pFecHardId, pRing, pCcuAddress, pChannel, unsigned int newMajorVersion )
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskDcuModule(:pPartitionName, :pDcuHardId, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -703,7 +703,7 @@ void DbTkMaskModulesAccess::maskDcuModule ( std::string pPartitionName, unsigned
  * \see maskDcuModule ( std::string pPartitionName, dcuHardId, unsigned int newMajorVersion);
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskDetIdModule(:pPartitionName, :pDetId, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
@@ -738,7 +738,7 @@ void DbTkMaskModulesAccess::maskDetIdModule ( std::string pPartitionName, unsign
  * \see maskDcuModule ( std::string pPartitionName, dcuHardId, unsigned int newMajorVersion);
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void DbTkMaskModulesAccess::maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException) { 
+void DbTkMaskModulesAccess::maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   static std::string queryString = "BEGIN PkgMaskModules.maskPsuNameModules(:pPartitionName, :pPsuName, :newMajorVersion); END;" ;
   oracle::occi::Statement *stmt = NULL ;
diff --git a/FecSoftwareV3_0/generic/src/common/DeviceFactory.cc b/FecSoftwareV3_0/generic/src/common/DeviceFactory.cc
index 3077abd..033f306 100755
--- a/FecSoftwareV3_0/generic/src/common/DeviceFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/DeviceFactory.cc
@@ -51,7 +51,7 @@ DeviceFactory::DeviceFactory ( ) :
 #ifdef DATABASE
 
 DeviceFactory::DeviceFactory ( std::string login, std::string password, std::string path, bool threaded )
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   FecFactory(login, password, path, threaded),
   Fed9U::Fed9UDeviceFactory(login, password, path, threaded),
   ConnectionFactory (login, password, path, threaded),
@@ -86,7 +86,7 @@ void DeviceFactory::setRunNumberFile ( std::string filename ) {
  * \warning, if the database is not set, a file must be set with the method setFileRunNumber and if this file is not set, an exception is thrown. The file for this method must read/writable at least for this method.
  */
 unsigned int DeviceFactory::getNextRunNumber ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   unsigned int runNumber ;
 
@@ -119,7 +119,7 @@ unsigned int DeviceFactory::getNextRunNumber ( )
  * \return the current run number
  */
 unsigned int DeviceFactory::getCurrentRunNumber ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   unsigned int runNumber ;
 
@@ -175,7 +175,7 @@ void DeviceFactory::setOutputFileName ( std::string outputFileName ) {
 /** 
  * \param inputFileName - new input file for the FEC
  */
-void DeviceFactory::setFecInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setFecInputFileName ( std::string inputFileName ) noexcept(false) {
 
   FecFactory::setInputFileName (inputFileName) ;
 }
@@ -183,7 +183,7 @@ void DeviceFactory::setFecInputFileName ( std::string inputFileName ) throw ( Fe
 /**
  * \param fileName - name of the XML file for the FEC
  */
-void DeviceFactory::addFecFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addFecFileName ( std::string fileName ) noexcept(false) {
 
   FecFactory::addFileName (fileName) ;
 }
@@ -191,7 +191,7 @@ void DeviceFactory::addFecFileName ( std::string fileName ) throw ( FecException
 /** 
  * \param inputFileName - new input file for the FED
  */ 
-void DeviceFactory::setFedInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setFedInputFileName ( std::string inputFileName ) noexcept(false) {
 
   Fed9U::Fed9UDeviceFactory::setInputFileName (inputFileName) ;
 }
@@ -199,7 +199,7 @@ void DeviceFactory::setFedInputFileName ( std::string inputFileName ) throw ( Fe
 /**
  * \param fileName - name of the XML file for the FED
  */
-void DeviceFactory::addFedFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addFedFileName ( std::string fileName ) noexcept(false) {
 
   Fed9U::Fed9UDeviceFactory::addFileName (fileName) ;
 }
@@ -207,7 +207,7 @@ void DeviceFactory::addFedFileName ( std::string fileName ) throw ( FecException
 /** 
  * \param inputFileName - new input file for the connections between FEC and FED
  */ 
-void DeviceFactory::setFedFecConnectionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setFedFecConnectionInputFileName ( std::string inputFileName ) noexcept(false) {
 
   ConnectionFactory::setInputFileName (inputFileName) ;
 }
@@ -215,7 +215,7 @@ void DeviceFactory::setFedFecConnectionInputFileName ( std::string inputFileName
 /** 
  * \param inputFileName - new input file for the connections between FEC and FED
  */ 
-void DeviceFactory::setConnectionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setConnectionInputFileName ( std::string inputFileName ) noexcept(false) {
 
   ConnectionFactory::setInputFileName (inputFileName) ;
 }
@@ -223,7 +223,7 @@ void DeviceFactory::setConnectionInputFileName ( std::string inputFileName ) thr
 /**
  * \param fileName - name of the XML file for the connections between FEC and FED
  */
-void DeviceFactory::addFedFecConnectionFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addFedFecConnectionFileName ( std::string fileName ) noexcept(false) {
 
   ConnectionFactory::addFileName (fileName) ;
 }
@@ -231,7 +231,7 @@ void DeviceFactory::addFedFecConnectionFileName ( std::string fileName ) throw (
 /**
  * \param fileName - name of the XML file for the connections between FEC and FED
  */
-void DeviceFactory::addConnectionFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addConnectionFileName ( std::string fileName ) noexcept(false) {
 
   ConnectionFactory::addFileName (fileName) ;
 }
@@ -239,7 +239,7 @@ void DeviceFactory::addConnectionFileName ( std::string fileName ) throw ( FecEx
 /** 
  * \param inputFileName - new input file for the DCU conversion factors
  */ 
-void DeviceFactory::setDcuConversionInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setDcuConversionInputFileName ( std::string inputFileName ) noexcept(false) {
 
   TkDcuConversionFactory::setInputFileName (inputFileName) ;
 }
@@ -247,7 +247,7 @@ void DeviceFactory::setDcuConversionInputFileName ( std::string inputFileName )
 /**
  * \param fileName - name of the XML file for the DCU conversion factors
  */
-void DeviceFactory::addDcuConversionFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addDcuConversionFileName ( std::string fileName ) noexcept(false) {
 
   TkDcuConversionFactory::addFileName (fileName) ;
 }
@@ -255,7 +255,7 @@ void DeviceFactory::addDcuConversionFileName ( std::string fileName ) throw ( Fe
 /** 
  * \param inputFileName - new input file for the DCU / det ID information
  */ 
-void DeviceFactory::setTkDcuInfoInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setTkDcuInfoInputFileName ( std::string inputFileName ) noexcept(false) {
 
   TkDcuInfoFactory::setInputFileName (inputFileName) ;
 }
@@ -264,7 +264,7 @@ void DeviceFactory::setTkDcuInfoInputFileName ( std::string inputFileName ) thro
 /**
  * \param fileName - name of the XML file for the DCU / det ID information
  */
-void DeviceFactory::addTkDcuInfoFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addTkDcuInfoFileName ( std::string fileName ) noexcept(false) {
 
   TkDcuInfoFactory::addFileName (fileName) ;
 }
@@ -272,7 +272,7 @@ void DeviceFactory::addTkDcuInfoFileName ( std::string fileName ) throw ( FecExc
 /** 
  * \param inputFileName - new input file for the DCU / det ID information
  */ 
-void DeviceFactory::setTkDcuPsuMapFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setTkDcuPsuMapFileName ( std::string inputFileName ) noexcept(false) {
 
   TkDcuPsuMapFactory::setInputFileName (inputFileName) ;
 }
@@ -280,7 +280,7 @@ void DeviceFactory::setTkDcuPsuMapFileName ( std::string inputFileName ) throw (
 /**
  * \param fileName - name of the XML file for the DCU / det ID information
  */
-void DeviceFactory::addTkDcuPsuMapFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addTkDcuPsuMapFileName ( std::string fileName ) noexcept(false) {
 
   TkDcuPsuMapFactory::addFileName (fileName) ;
 }
@@ -288,7 +288,7 @@ void DeviceFactory::addTkDcuPsuMapFileName ( std::string fileName ) throw ( FecE
 /** 
  * \param inputFileName - new input file for the DCU / det ID information
  */ 
-void DeviceFactory::setTkIdVsHostnameInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::setTkIdVsHostnameInputFileName ( std::string inputFileName ) noexcept(false) {
 
   TkIdVsHostnameFactory::setInputFileName (inputFileName) ;
 }
@@ -296,7 +296,7 @@ void DeviceFactory::setTkIdVsHostnameInputFileName ( std::string inputFileName )
 /**
  * \param fileName - name of the XML file for the DCU / det ID information
  */
-void DeviceFactory::addTkIdVsHostnameFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void DeviceFactory::addTkIdVsHostnameFileName ( std::string fileName ) noexcept(false) {
 
   TkIdVsHostnameFactory::addFileName (fileName) ;
 }
@@ -327,7 +327,7 @@ void DeviceFactory::setUsingFile ( bool useIt ) {
 /** 
  * \param useIt - use the database, the database must be created, if not an exception is raised
  */
-void DeviceFactory::setUsingDb ( bool useIt ) throw (std::string) {
+void DeviceFactory::setUsingDb ( bool useIt ) noexcept(false) {
   FecFactory::setUsingDb(useIt) ;
   Fed9U::Fed9UDeviceFactory::setUsingDb(useIt) ;
   ConnectionFactory::setUsingDb(useIt) ;
@@ -392,7 +392,7 @@ bool DeviceFactory::getDbConnected ( ) {
 
 /** 
  */
-void DeviceFactory::setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) {
+void DeviceFactory::setDatabaseAccess ( ) noexcept(false) {
 
   FecFactory::setDatabaseAccess () ;
   Fed9U::Fed9UDeviceFactory::setDatabaseAccess () ;
@@ -410,7 +410,7 @@ void DeviceFactory::setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) {
  * \param path - path to database
  * \warning in the destructor of FecFactory, the dbFecAccess is deleted
  */
-void DeviceFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) throw ( oracle::occi::SQLException ) {
+void DeviceFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) noexcept(false) {
 
   FecFactory::setDatabaseAccess (login, password, path ) ;
   Fed9U::Fed9UDeviceFactory::setDatabaseAccess (login, password, path ) ;
@@ -424,7 +424,7 @@ void DeviceFactory::setDatabaseAccess ( std::string login, std::string password,
 
 /** \return the partition name
  */
-std::string DeviceFactory::getPartitionName ( unsigned int partitionId )  throw (oracle::occi::SQLException) {
+std::string DeviceFactory::getPartitionName ( unsigned int partitionId )  noexcept(false) {
   
   return (FecFactory::getPartitionName (partitionId)) ;
 }
@@ -433,7 +433,7 @@ std::string DeviceFactory::getPartitionName ( unsigned int partitionId )  throw
  * \param deleteValues - delete the values before doing the update: 0 do not delete, 1 delete the partitions which are not in the current state, 2 delete everything
  * \param withStrips - update the FED with strips
  */
-void DeviceFactory::refreshCacheXMLClob ( int deleteValues, bool withStrips ) throw (oracle::occi::SQLException) {
+void DeviceFactory::refreshCacheXMLClob ( int deleteValues, bool withStrips ) noexcept(false) {
 
   DbCommonAccess *dbAccess = getAnyDbAccess() ;
   if (dbAccess != NULL) dbAccess->refreshCacheXMLClob(deleteValues, withStrips) ;
@@ -452,7 +452,7 @@ void DeviceFactory::refreshCacheXMLClob ( int deleteValues, bool withStrips ) th
  * \param allConnections - enabled / disabled connections
  * \return unsigned integer which gives you how much connection were NOT identified with the det id (the det id is set to zero in that case, and if integer returned is zero then all connections have a corresponding det id)
  */
-unsigned int DeviceFactory::getConnectionDescriptionDetId ( std::string partitionName, ConnectionVector &connectionVector, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool allConnections, bool forceDbReload ) throw (FecExceptionHandler, oracle::occi::SQLException) {
+unsigned int DeviceFactory::getConnectionDescriptionDetId ( std::string partitionName, ConnectionVector &connectionVector, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool allConnections, bool forceDbReload ) noexcept(false) {
 
   unsigned int connectionNotIdentified = 0 ;
 
@@ -505,7 +505,7 @@ std::string DeviceFactory::what ( std::string message, oracle::occi::SQLExceptio
  * \warning this method create an new version of FEC/FED and connections so you should re-download everything afterwards
  */  
 void DeviceFactory::setEnableModules(std::string partitionName, std::vector<unsigned int> dcuHardIdList, bool enabled) 
-  throw (FecExceptionHandler, oracle::occi::SQLException, Fed9U::Fed9UDeviceFactoryException, ICUtils::ICException) {
+  noexcept(false) {
 
 #ifdef DEBUGTIMINGDISABLE
   unsigned long startMillis, endMillis ;
@@ -596,7 +596,7 @@ void DeviceFactory::setEnableModules(std::string partitionName, std::vector<unsi
  * \param o2oTimestamp - a given timestamp (o2o time operation)
  */
 void DeviceFactory::setO2OOperation ( std::string partitionName, std::string subDetector, unsigned int runNumber ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   DbCommonAccess *dbAccess = getAnyDbAccess() ;
    
@@ -612,7 +612,7 @@ void DeviceFactory::setO2OOperation ( std::string partitionName, std::string sub
  * \param partitionName - partition name
  * \return true if the versions for the partition is coherent, false if it is not coherent
  */
-bool DeviceFactory::getO2OXchecked ( std::string partitionName ) throw (FecExceptionHandler) {
+bool DeviceFactory::getO2OXchecked ( std::string partitionName ) noexcept(false) {
 
   bool result = false ;
 
diff --git a/FecSoftwareV3_0/generic/src/common/DohAccess.cc b/FecSoftwareV3_0/generic/src/common/DohAccess.cc
index ce923ec..357c1fd 100755
--- a/FecSoftwareV3_0/generic/src/common/DohAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/DohAccess.cc
@@ -190,7 +190,7 @@ void DohAccess::setBias ( tscType8 *bias ) {
  * \exception FecExceptionHandler
  * \warning this method reset the ring several times so do not forget to apply the reset on FecAccessManager object if you use it
  */
-laserdriverDescription *DohAccess::calibrateDOH ( bool displayDebugMessage, unsigned char gain, unsigned char minBiasValue ) throw (FecExceptionHandler) {
+laserdriverDescription *DohAccess::calibrateDOH ( bool displayDebugMessage, unsigned char gain, unsigned char minBiasValue ) noexcept(false) {
 
   displayDebugMessage = true ;
 
diff --git a/FecSoftwareV3_0/generic/src/common/FecAccess.cc b/FecSoftwareV3_0/generic/src/common/FecAccess.cc
index 689d122..6d7a0ab 100755
--- a/FecSoftwareV3_0/generic/src/common/FecAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecAccess.cc
@@ -71,7 +71,7 @@
 FecAccess::FecAccess ( bool forceAck, bool initFec, 
                        bool scanFECs, bool scanCCUs,
 		       tscType16 i2cSpeed, bool invertClockPolarity )
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 
 #if defined(BUSVMECAENPCI) || defined(BUSVMECAENUSB) || defined (BUSVMESBS)
   vme64xCrate_ = NULL ;
@@ -121,7 +121,7 @@ FecAccess::FecAccess ( unsigned adapterSlot,
 		       tscType16 i2cSpeed,
 		       std::string strBusAdapter,
 		       bool blockMode, tscType8 numberOfRing, bool invertClockPolarity )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
 			    "The plug and play is not supported by the FEC software since 16/03/2012",
@@ -192,7 +192,7 @@ FecAccess::FecAccess ( unsigned adapterSlot, std::string configurationFile,
 		       tscType16 i2cSpeed,
 		       std::string strBusAdapter,
 		       bool blockMode,tscType8 numberOfRing, bool invertClockPolarity )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #if defined(BUSVMECAENPCI) || defined(BUSVMECAENUSB) || defined (BUSVMESBS)
   vme64xCrate_ = NULL ;
@@ -255,7 +255,7 @@ FecAccess::FecAccess ( hashMapVMEDevice hashMapVMEDevice,
                        bool scanFECs, bool scanCCUs,
 		       tscType16 i2cSpeed,
 		       bool blockMode, tscType8 numberOfRing, bool invertClockPolarity )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #if defined(BUSVMECAENPCI) || defined(BUSVMECAENUSB) || defined (BUSVMESBS)
   vme64xCrate_ = NULL ;
@@ -313,7 +313,7 @@ FecAccess::FecAccess ( hashMapVMEDevice hashMapVMEDevice,
 FecAccess::FecAccess ( hashMapFecUsbSerial fecUsbSerials, bool forceAck, bool initFec, 
                        bool scanFECs, bool scanCCUs,
 		       tscType16 i2cSpeed, bool invertClockPolarity )
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 
 #if defined(BUSVMECAENPCI) || defined(BUSVMECAENUSB) || defined (BUSVMESBS)
   vme64xCrate_ = NULL ;
@@ -340,7 +340,7 @@ FecAccess::FecAccess ( hashMapFecUsbSerial fecUsbSerials, bool forceAck, bool in
 FecAccess::FecAccess ( const std::string& strFilename, const std::string& strBoardId, bool forceAck, bool initFec, 
                        bool scanFECs, bool scanCCUs,
 		       tscType16 i2cSpeed, bool invertClockPolarity )
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
   std::cerr << "FecAccess::FecAccess 6" << std::endl;
 #if !defined(BUSUTCAFEC)
   RAISEFECEXCEPTIONHANDLER(CODECONSISTENCYERROR,
@@ -463,7 +463,7 @@ void FecAccess::deleteVmeAccesses ( ) {
 void FecAccess::setInitFecAccess ( bool forceAck, bool initFec, bool scanFECs, bool scanCCUs, tscType16 i2cSpeed, 
 				   tscType8 fecSlotMin, tscType8 fecSlotMax, tscType8 ringMin, tscType8 ringMax,
 				   bool invertClockPolarity )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   for (unsigned int i = 0 ; i < MAX_NUMBER_OF_SLOTS+1 ; i ++) reloadedFirmware_[i] = 0 ;
 
@@ -512,7 +512,7 @@ void FecAccess::configurePlugAndPlay ( unsigned adapterSlot,
                                        std::string configurationFile, 
 				       std::string mapFile, 
 				       std::string strBusAdapter ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -620,7 +620,7 @@ void FecAccess::configureBaseAddresses ( unsigned adapterSlot,
 					 std::string configurationFile, 
 					 const uint32_t *vmeBaseAddresses, 
 					 std::string strBusAdapter ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   
   
@@ -1075,7 +1075,7 @@ FecRingDevice *FecAccess::setFecRingDevice ( keyType index ) {
  * </ul>
  */
 FecRingDevice* FecAccess::getFecRingDevice ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   keyType fecRingKey = getFecRingKey(index) ;
 
@@ -1106,7 +1106,7 @@ FecRingDevice* FecAccess::getFecRingDevice ( keyType index )
  * </ul>
  */
 ccuChannelAccess *FecAccess::checkIndex ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef T3TDLEVELCHECK
   // Check if the index is correct 
@@ -1282,7 +1282,7 @@ void FecAccess::setLoopInTimeReadFrame ( unsigned long loopInTimeReadFrame ) {
  * \param index - index of the FEC
  * \return transmit fifo size (depth) in D32 words 
  */
-unsigned int FecAccess::getTransmitFifoDepth ( keyType index ) throw (FecExceptionHandler) {
+unsigned int FecAccess::getTransmitFifoDepth ( keyType index ) noexcept(false) {
 
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->getTransmitFifoDepth() ;
@@ -1292,7 +1292,7 @@ unsigned int FecAccess::getTransmitFifoDepth ( keyType index ) throw (FecExcepti
  * \param index - index of the FEC
  * \return receive fifo size (depth) in D32 words 
  */
-unsigned int FecAccess::getReceiveFifoDepth ( keyType index  ) throw (FecExceptionHandler) {
+unsigned int FecAccess::getReceiveFifoDepth ( keyType index  ) noexcept(false) {
   
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->getReceiveFifoDepth() ;
@@ -1302,7 +1302,7 @@ unsigned int FecAccess::getReceiveFifoDepth ( keyType index  ) throw (FecExcepti
  * \param index - index of the FEC
  * \return fifo size (depth) in D32 words 
  */
-unsigned int FecAccess::getReturnFifoDepth ( keyType index ) throw (FecExceptionHandler) {
+unsigned int FecAccess::getReturnFifoDepth ( keyType index ) noexcept(false) {
 
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->getReturnFifoDepth() ;
@@ -1311,7 +1311,7 @@ unsigned int FecAccess::getReturnFifoDepth ( keyType index ) throw (FecException
 /**
  * \param index - index of the FEC
  */
-void FecAccess::emptyFifoReceive ( keyType index  ) throw (FecExceptionHandler) {
+void FecAccess::emptyFifoReceive ( keyType index  ) noexcept(false) {
   
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->emptyFifoReceive() ;
@@ -1320,7 +1320,7 @@ void FecAccess::emptyFifoReceive ( keyType index  ) throw (FecExceptionHandler)
 /**
  * \param index - index of the FEC
  */
-void FecAccess::emptyFifoTransmit ( keyType index  ) throw (FecExceptionHandler) {
+void FecAccess::emptyFifoTransmit ( keyType index  ) noexcept(false) {
   
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->emptyFifoTransmit() ;
@@ -1329,7 +1329,7 @@ void FecAccess::emptyFifoTransmit ( keyType index  ) throw (FecExceptionHandler)
 /**
  * \param index - index of the FEC
  */
-void FecAccess::emptyFifoReturn ( keyType index  ) throw (FecExceptionHandler) {
+void FecAccess::emptyFifoReturn ( keyType index  ) noexcept(false) {
   
   FecRingDevice *fec = getFecRingDevice ( index ) ;
   return fec->emptyFifoReturn() ;
@@ -1345,7 +1345,7 @@ void FecAccess::emptyFifoReturn ( keyType index  ) throw (FecExceptionHandler) {
 /** Return the CCS trigger depending of the FEC slot
  * \return address of the CCSTrigger
  */
-CCSTrigger *FecAccess::getCCSTrigger ( keyType index ) throw (FecExceptionHandler) {
+CCSTrigger *FecAccess::getCCSTrigger ( keyType index ) noexcept(false) {
 
   keyType fecRingKey = setFecSlotKey(getFecKey(index)) ;
   
@@ -1372,7 +1372,7 @@ CCSTrigger *FecAccess::getCCSTrigger ( keyType index ) throw (FecExceptionHandle
  * \param index - index of the FEC 
  * \param SSID - SSID of the system
   */
-CCSTrigger *FecAccess::setCCSTrigger ( keyType index, std::string SSID ) throw (FecExceptionHandler) {
+CCSTrigger *FecAccess::setCCSTrigger ( keyType index, std::string SSID ) noexcept(false) {
 
   CCSTrigger *ccsTrigger = NULL ;
 
@@ -1411,7 +1411,7 @@ CCSTrigger *FecAccess::setCCSTrigger ( keyType index, std::string SSID ) throw (
  * \param index of the FEC
  * \return value of the register
  */
-uint32_t FecAccess::getCCSTriggerConfig0 ( keyType index ) throw (FecExceptionHandler) {
+uint32_t FecAccess::getCCSTriggerConfig0 ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1427,7 +1427,7 @@ uint32_t FecAccess::getCCSTriggerConfig0 ( keyType index ) throw (FecExceptionHa
  * \param index of the FEC
  * \param value to be set in the register
  */
-void FecAccess::setCCSTriggerConfig0 ( keyType index, uint32_t value ) throw (FecExceptionHandler) {
+void FecAccess::setCCSTriggerConfig0 ( keyType index, uint32_t value ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1443,7 +1443,7 @@ void FecAccess::setCCSTriggerConfig0 ( keyType index, uint32_t value ) throw (Fe
  * \param index of the FEC
  * \return value of the register
  */
-uint32_t FecAccess::getCCSTriggerStatus0 ( keyType index ) throw (FecExceptionHandler) {
+uint32_t FecAccess::getCCSTriggerStatus0 ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1459,7 +1459,7 @@ uint32_t FecAccess::getCCSTriggerStatus0 ( keyType index ) throw (FecExceptionHa
  * \param index of the FEC
  * \return name of the sub-detector
  */
-std::string FecAccess::getSSID ( keyType index ) throw (FecExceptionHandler) {
+std::string FecAccess::getSSID ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1474,7 +1474,7 @@ std::string FecAccess::getSSID ( keyType index ) throw (FecExceptionHandler) {
  * \param index - index of the FEC 
  */
 void FecAccess::getFecTemperature ( keyType index, int &tempSensor1, int &tempSensor2 ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1523,7 +1523,7 @@ std::list<keyType> *FecAccess::scanFecRing (tscType8 fecSlotMin,
 					    tscType8 fecSlotMax,
 					    tscType8 ringMin,
 					    tscType8 ringMax ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // For each slot
   for ( int fecSlot = fecSlotMin ; fecSlot <= fecSlotMax ; fecSlot ++) {
@@ -1574,7 +1574,7 @@ std::list<keyType> *FecAccess::scanFecRing (tscType8 fecSlotMin,
  * \return index of the FEC
  * \warning this method is only available for VME FEC
  */
-keyType FecAccess::scanFecRing ( std::string fecHardwareId ) throw (FecExceptionHandler) {
+keyType FecAccess::scanFecRing ( std::string fecHardwareId ) noexcept(false) {
   
   // std::cout << __PRETTY_FUNCTION__ << std::endl; 
   
@@ -1653,7 +1653,7 @@ keyType FecAccess::scanFecRing ( std::string fecHardwareId ) throw (FecException
  * \param index - index of the FEC
  * \warning no error is raised one of the CCU registers has errors
  */
-void FecAccess::clearFecCcuErrorRegisters ( keyType index, bool noBroadcast ) throw (FecExceptionHandler) {
+void FecAccess::clearFecCcuErrorRegisters ( keyType index, bool noBroadcast ) noexcept(false) {
   
   // Clear the FEC CR1 
   setFecRingCR1(index, FEC_CR1_CLEARIRQ | FEC_CR1_CLEARERRORS) ;
@@ -1678,7 +1678,7 @@ void FecAccess::clearFecCcuErrorRegisters ( keyType index, bool noBroadcast ) th
  * \param index - index of the FEC
  * \return firmware version
  */
-tscType16 FecAccess::getFecFirmwareVersion( keyType index ) throw ( FecExceptionHandler ) {
+tscType16 FecAccess::getFecFirmwareVersion( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1712,7 +1712,7 @@ tscType16 FecAccess::getFecFirmwareVersion( keyType index ) throw ( FecException
  * \warning this method is only used for VME FEC, raise an exception if it is used for another FEC
  * \see FecAccess::getFecIndex ( std::string ) 
  */
-std::string FecAccess::getFecHardwareId ( keyType index ) throw (FecExceptionHandler) {
+std::string FecAccess::getFecHardwareId ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1749,7 +1749,7 @@ std::string FecAccess::getFecHardwareId ( keyType index ) throw (FecExceptionHan
  * \warning this method is only used for VME FEC, raise an exception if it is used for another FEC
  * \see FecAccess::getFecIndex ( std::string ) 
  */
-tscType32 FecAccess::getTriggerVersion ( keyType index ) throw (FecExceptionHandler) {
+tscType32 FecAccess::getTriggerVersion ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1786,7 +1786,7 @@ tscType32 FecAccess::getTriggerVersion ( keyType index ) throw (FecExceptionHand
  * \warning this method is only used for VME FEC, raise an exception if it is used for another FEC
  * \see FecAccess::getFecIndex ( std::string ) 
  */
-tscType32 FecAccess::getVmeVersion ( keyType index ) throw (FecExceptionHandler) {
+tscType32 FecAccess::getVmeVersion ( keyType index ) noexcept(false) {
 
 #if !defined(BUSVMECAENPCI) && !defined(BUSVMECAENUSB) && !defined (BUSVMESBS)
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR,
@@ -1823,7 +1823,7 @@ tscType32 FecAccess::getVmeVersion ( keyType index ) throw (FecExceptionHandler)
  * \return return index of the FEC
  * \see FecAccess::getFecgetFecHardwareId ( keyType ) 
  */
-keyType FecAccess::getFecIndex ( std::string fecHardwareId ) throw (FecExceptionHandler) {
+keyType FecAccess::getFecIndex ( std::string fecHardwareId ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "FEC " << fecHardwareId << " is on slot " << std::dec << getFecKey(fecHardwareIdMapIndex_[fecHardwareId.c_str()]) << std::endl ;
@@ -1838,7 +1838,7 @@ keyType FecAccess::getFecIndex ( std::string fecHardwareId ) throw (FecException
  * \warning any change in the CR0 will keep the value set
  */
 void FecAccess::setFecInputB ( keyType index, bool inputB ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1853,7 +1853,7 @@ void FecAccess::setFecInputB ( keyType index, bool inputB )
  * \warning any change in the CR0 will keep the value set
  */
 void FecAccess::setFecOutputB ( keyType index, bool outputB ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1868,7 +1868,7 @@ void FecAccess::setFecOutputB ( keyType index, bool outputB )
  * \warning any change in the CR0 will keep the value set
  */
 void FecAccess::setInvertClockPolarity ( bool invertPolarity ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   for (fecMapAccessedType::iterator fecPair = fecRingEnable_.begin() ; fecPair != fecRingEnable_.end() ; fecPair ++) {
       
@@ -1885,7 +1885,7 @@ void FecAccess::setInvertClockPolarity ( bool invertPolarity )
  * \warning any change in the CR0 will keep the value set
  */
 void FecAccess::setInvertClockPolarity ( keyType index, bool invertPolarity ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1900,7 +1900,7 @@ void FecAccess::setInvertClockPolarity ( keyType index, bool invertPolarity )
  * \warning any change in the CR0 will keep the value set
  */
 void FecAccess::setInternalClock ( keyType index, bool internal ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1916,7 +1916,7 @@ void FecAccess::setInternalClock ( keyType index, bool internal )
  * \exception FecExceptionHandler
  */
 void FecAccess::setFecRingCR0 ( keyType index, tscType16 value, bool force ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1935,7 +1935,7 @@ void FecAccess::setFecRingCR0 ( keyType index, tscType16 value, bool force )
 void FecAccess::setFecRingCR0 ( keyType index, 
 				tscType16 value, 
 				logicalOperationType op )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1951,7 +1951,7 @@ void FecAccess::setFecRingCR0 ( keyType index,
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::getFecRingCR0 ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1969,7 +1969,7 @@ tscType16 FecAccess::getFecRingCR0 ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setFecRingCR1 ( keyType index, tscType16 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -1989,7 +1989,7 @@ void FecAccess::setFecRingCR1 ( keyType index, tscType16 value )
 void FecAccess::setFecRingCR1 ( keyType index, 
 				tscType16 value 
 				logicalOperationType op ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2006,7 +2006,7 @@ void FecAccess::setFecRingCR1 ( keyType index,
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::getFecRingCR1 ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2024,7 +2024,7 @@ tscType16 FecAccess::getFecRingCR1 ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::getFecRingSR0 ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2042,7 +2042,7 @@ tscType16 FecAccess::getFecRingSR0 ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::getFecRingSR1 ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2060,7 +2060,7 @@ tscType16 FecAccess::getFecRingSR1 ( keyType index )
  * \warning this method reload the mFEC firmware only
  */
 void FecAccess::fecHardReset ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   FecExceptionHandler exOnLast ;
 
@@ -2114,7 +2114,7 @@ void FecAccess::fecHardReset ( )
  * \exception FecExceptionHandler
  * \warning this method reload in the plug and play the firmware and in mode not plug and play make a crate reset
  */
-void FecAccess::crateReset ( ) throw (FecExceptionHandler) {
+void FecAccess::crateReset ( ) noexcept(false) {
 
   if (fecBusType_ != FECVME) return ;
 
@@ -2155,7 +2155,7 @@ void FecAccess::crateReset ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  */
 void FecAccess::fecHardReset ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2173,7 +2173,7 @@ void FecAccess::fecHardReset ( keyType index, tscType8 value )
  * \exception FecExceptionHandler
  */
 void FecAccess::fecRingResetFSM ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (fecRingEnable_.empty()) {
     
@@ -2201,7 +2201,7 @@ void FecAccess::fecRingResetFSM ( )
  * \exception FecExceptionHandler
  */
 void FecAccess::fecRingResetFSM ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2220,7 +2220,7 @@ void FecAccess::fecRingResetFSM ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::fecRingReset ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (fecRingEnable_.empty()) {
     
@@ -2247,7 +2247,7 @@ void FecAccess::fecRingReset ( )
  * \exception FecExceptionHandler
  */
 void FecAccess::fecRingReset ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2265,7 +2265,7 @@ void FecAccess::fecRingReset ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::initTTCRx ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (fecRingEnable_.empty()) {
     
@@ -2288,7 +2288,7 @@ void FecAccess::initTTCRx ( )
  * \exception FecExceptionHandler
  */
 void FecAccess::initTTCRx ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2302,7 +2302,7 @@ void FecAccess::initTTCRx ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCR0Receive ( keyType index, bool enable ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2317,7 +2317,7 @@ void FecAccess::setCR0Receive ( keyType index, bool enable )
  * \exception FecExceptionHandler
  */
 void FecAccess::fecRingResetB ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (fecRingEnable_.empty()) {
     
@@ -2346,7 +2346,7 @@ void FecAccess::fecRingResetB ( )
  * through ring B and all CCU will be reseted
  */
 void FecAccess::fecRingResetB ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2366,7 +2366,7 @@ void FecAccess::fecRingResetB ( keyType index )
  * \warning this method must be used once you lost the link initialised
  */
 void FecAccess::fecRingRelease ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2382,7 +2382,7 @@ void FecAccess::fecRingRelease ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::fecRingReconfigure ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2404,7 +2404,7 @@ tscType16 FecAccess::fecRingReconfigure ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::fecRingReconfigure ( keyType index, TkRingDescription &tkRing ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2430,7 +2430,7 @@ tscType16 FecAccess::fecRingReconfigure ( keyType index, TkRingDescription &tkRi
  * \warning in case of error the value put is CCU address | 0xFFFF
  */
 FecRingRegisters FecAccess::getFecRingRegisters ( keyType index )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2451,7 +2451,7 @@ FecRingRegisters FecAccess::getFecRingRegisters ( keyType index )
  * \bug the vector calculation must be done in this method and a method must be registered to be fired. This method is not yet implemented
  * \warning no exception is raised if the FEC is an USB FEC (without IRQ)
  */
-void FecAccess::setIRQ ( keyType index, bool enable, tscType8 vmeLevel ) throw (FecExceptionHandler) {
+void FecAccess::setIRQ ( keyType index, bool enable, tscType8 vmeLevel ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2479,7 +2479,7 @@ void FecAccess::setIRQ ( keyType index, bool enable, tscType8 vmeLevel ) throw (
  * \bug the vector calculation must be done in this method and a method must be registered to be fired. This method is not yet implemented
  * \warning no exception is raised if the FEC is an USB FEC (without IRQ)
  */
-void FecAccess::setIRQ ( bool enable, tscType8 vmeLevel ) throw (FecExceptionHandler) {
+void FecAccess::setIRQ ( bool enable, tscType8 vmeLevel ) noexcept(false) {
 
   // No IRQ for the FECUSB
   if (fecBusType_ == FECUSB) return ;
@@ -2530,7 +2530,7 @@ void FecAccess::setIRQ ( bool enable, tscType8 vmeLevel ) throw (FecExceptionHan
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuSRA ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2546,7 +2546,7 @@ tscType8 FecAccess::getCcuSRA ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuSRB ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2562,7 +2562,7 @@ tscType8 FecAccess::getCcuSRB ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuSRC ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2578,7 +2578,7 @@ tscType8 FecAccess::getCcuSRC ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuSRD ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2594,7 +2594,7 @@ tscType8 FecAccess::getCcuSRD ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType32 FecAccess::getCcuSRE ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2610,7 +2610,7 @@ tscType32 FecAccess::getCcuSRE ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType16 FecAccess::getCcuSRF ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2626,7 +2626,7 @@ tscType16 FecAccess::getCcuSRF ( keyType index )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuSRG ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2643,7 +2643,7 @@ tscType8 FecAccess::getCcuSRG ( keyType index )
  * \exception FecExceptionHandlerception
  */
 tscType8 FecAccess::getCcuSRH ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2659,7 +2659,7 @@ tscType8 FecAccess::getCcuSRH ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCcuCRA ( keyType index, tscType8 value ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2675,7 +2675,7 @@ void FecAccess::setCcuCRA ( keyType index, tscType8 value )
  * \exception FecExceptionHandler
  */ 
 tscType8 FecAccess::getCcuCRA ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2691,7 +2691,7 @@ tscType8 FecAccess::getCcuCRA ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCcuCRB ( keyType index, tscType8 value ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2707,7 +2707,7 @@ void FecAccess::setCcuCRB ( keyType index, tscType8 value )
  * \exception FecExceptionHandler
  */ 
 tscType8 FecAccess::getCcuCRB ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2723,7 +2723,7 @@ tscType8 FecAccess::getCcuCRB ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCcuCRC ( keyType index, tscType8 value ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2739,7 +2739,7 @@ void FecAccess::setCcuCRC ( keyType index, tscType8 value )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuCRC ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2755,7 +2755,7 @@ tscType8 FecAccess::getCcuCRC ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCcuCRD ( keyType index, tscType8 value ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2771,7 +2771,7 @@ void FecAccess::setCcuCRD ( keyType index, tscType8 value )
  * \exception FecExceptionHandler
  */
 tscType8 FecAccess::getCcuCRD ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2796,7 +2796,7 @@ tscType8 FecAccess::getCcuCRD ( keyType index )
  * \exception FecExceptionHandler
  */
 void FecAccess::setCcuCRE ( keyType index, tscType24 value ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2830,7 +2830,7 @@ void FecAccess::setCcuCRE ( keyType index,
                             tscType8 valueMemory,
                             tscType8 valueTrigger,
                             tscType8 valueJTAG) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   setCcuCRE ( index, 
               (valueI2C & 0xFF) | 
@@ -2847,7 +2847,7 @@ void FecAccess::setCcuCRE ( keyType index,
  * \exception FecExceptionHandler
  */
 tscType24 FecAccess::getCcuCRE ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2861,7 +2861,7 @@ tscType24 FecAccess::getCcuCRE ( keyType index )
  * \return true if the channel is enabled, false if not
  * \exception FecExceptionHandler
  */
-bool FecAccess::isChannelEnabled ( keyType index )  throw (FecExceptionHandler) {
+bool FecAccess::isChannelEnabled ( keyType index )  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2881,7 +2881,7 @@ bool FecAccess::isChannelEnabled ( keyType index )  throw (FecExceptionHandler)
  * several FecSupervisor can managed the same PCI/VME bus
  */
 std::list<keyType> *FecAccess::getCcuList ( keyType index, bool noBroadcast, bool scan ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2905,7 +2905,7 @@ std::list<keyType> *FecAccess::getCcuList ( keyType index, bool noBroadcast, boo
  * \param enable4 - enable CCU alarm 4
  */
 void FecAccess::setCcuAlarmsEnable ( keyType index, bool enable1, bool enable2, bool enable3, bool enable4 ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2922,7 +2922,7 @@ void FecAccess::setCcuAlarmsEnable ( keyType index, bool enable1, bool enable2,
  * \warning The size of the frame must be DD_USER_MAX_MSG_LENGTH
  */ 
 void FecAccess::waitForAnyCcuAlarms ( keyType index, tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2937,7 +2937,7 @@ void FecAccess::waitForAnyCcuAlarms ( keyType index, tscType8 frame[DD_USER_MAX_
  * to 0 then all PIA channels will be enabled.
  */
 void FecAccess::setPiaInterruptEnable ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2952,7 +2952,7 @@ void FecAccess::setPiaInterruptEnable ( keyType index )
  * to 0 then all PIA channels will be enabled.
  */
 void FecAccess::setPiaClearInterrupts ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -2972,7 +2972,7 @@ void FecAccess::setPiaClearInterrupts ( keyType index )
  * \param enable - enable or disable the channel (bool)
  * \exception FecExceptionHandler
  */
-void FecAccess::setChannelEnable ( keyType index, bool enable ) throw ( FecExceptionHandler ) {
+void FecAccess::setChannelEnable ( keyType index, bool enable ) noexcept(false) {
 
   // Retreive the access
   i2cAccess *i2c = (i2cAccess *)checkIndex (index) ;
@@ -3003,7 +3003,7 @@ keyType FecAccess::addPiaAccess ( tscType8 fecSlot,
                                   tscType8 ringSlot,
                                   tscType8 ccuAddress,
                                   tscType8 piaChannel,
-                                  enumAccessModeType accessMask ) throw ( FecExceptionHandler ) {
+                                  enumAccessModeType accessMask ) noexcept(false) {
 
 
   return (addPiaAccess ( buildCompleteKey ( fecSlot, ringSlot, ccuAddress, piaChannel, PIAADDRESSNUMBER ), accessMask)) ;
@@ -3023,7 +3023,7 @@ keyType FecAccess::addPiaAccess ( tscType8 fecSlot,
  */
 keyType FecAccess::addPiaAccess ( keyType index,
                                   enumAccessModeType accessMask ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Find or create the corresponding FecDevice
   FecRingDevice *fec = setFecRingDevice ( index ) ;
@@ -3102,7 +3102,7 @@ keyType FecAccess::addPiaAccess ( keyType index,
  * </ul>
  */
 void FecAccess::removePiaAccess ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Retreive the information in the map both device and channel
   keyType keyChannel = buildChannelKey (index) ;
@@ -3160,7 +3160,7 @@ void FecAccess::removePiaAccess ( keyType index )
  * \param index - key of the corresponding channel
  * \exception FecExceptionHandler
  */
-void FecAccess::piaChannelReset ( keyType index ) throw ( FecExceptionHandler ) {
+void FecAccess::piaChannelReset ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3174,7 +3174,7 @@ void FecAccess::piaChannelReset ( keyType index ) throw ( FecExceptionHandler )
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3189,7 +3189,7 @@ void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value ) throw ( FecEx
  * \param op - operation to be done (TSC_FECSERVER_OR, TSC_FECSERVER_AND, TSC_FECSERVER_XOR, TSC_FECSERVER_EQUAL)
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3203,7 +3203,7 @@ void FecAccess::setPiaChannelGCR ( keyType index, tscType8 value, logicalOperati
  * \return value read
  * \exception FecExceptionHandler
  */   
-tscType8 FecAccess::getPiaChannelGCR ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getPiaChannelGCR ( keyType index ) noexcept(false) {
  
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3217,7 +3217,7 @@ tscType8 FecAccess::getPiaChannelGCR ( keyType index ) throw ( FecExceptionHandl
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::getPiaChannelStatus ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getPiaChannelStatus ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3231,7 +3231,7 @@ tscType8 FecAccess::getPiaChannelStatus ( keyType index ) throw ( FecExceptionHa
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3246,7 +3246,7 @@ void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value ) throw ( FecEx
  * \param op - operation to be done (CMD_OR, CMD_AND, CMD_XOR, CMD_EQUAL)
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value, logicalOperationType op ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3260,7 +3260,7 @@ void FecAccess::setPiaChannelDDR ( keyType index, tscType8 value, logicalOperati
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::getPiaChannelDDR ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getPiaChannelDDR ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3274,7 +3274,7 @@ tscType8 FecAccess::getPiaChannelDDR ( keyType index ) throw ( FecExceptionHandl
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3289,7 +3289,7 @@ void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value ) throw ( F
  * \param op - operation to be done (TSC_FECSERVER_OR, TSC_FECSERVER_AND, TSC_FECSERVER_XOR, TSC_FECSERVER_EQUAL)
  * \exception FecExceptionHandler
  */
-void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value, logicalOperationType op ) throw ( FecExceptionHandler ) {
+void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3303,7 +3303,7 @@ void FecAccess::setPiaChannelDataReg ( keyType index, tscType8 value, logicalOpe
  * \return value read
  * \exception FecExceptionHandler
  */   
-tscType8 FecAccess::getPiaChannelDataReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getPiaChannelDataReg ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3344,7 +3344,7 @@ keyType FecAccess::addi2cAccess ( tscType8 fecSlot,
                                   tscType8 i2cChannel,
                                   tscType8 i2cAddress,
                                   enumDeviceType deviceType,
-                                  enumAccessModeType accessMask ) throw ( FecExceptionHandler ) {
+                                  enumAccessModeType accessMask ) noexcept(false) {
 
   return (addi2cAccess (buildCompleteKey ( fecSlot, ringSlot, ccuAddress, i2cChannel, i2cAddress ), deviceType, accessMask)) ;
 
@@ -3365,7 +3365,7 @@ keyType FecAccess::addi2cAccess ( tscType8 fecSlot,
 keyType FecAccess::addi2cAccess ( keyType index, 
                                   enumDeviceType deviceType,
                                   enumAccessModeType accessMask ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   char msg2000[80] ;
@@ -3448,7 +3448,7 @@ keyType FecAccess::addi2cAccess ( keyType index,
  * \param index - key of corresponding device
  * \exception FecExceptionHandler
  */
-void FecAccess::removei2cAccess ( keyType index ) throw ( FecExceptionHandler ) {
+void FecAccess::removei2cAccess ( keyType index ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   char msg2000[80] ;
@@ -3512,7 +3512,7 @@ void FecAccess::removei2cAccess ( keyType index ) throw ( FecExceptionHandler )
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::seti2cChannelCRA ( keyType index, tscType8 value) throw ( FecExceptionHandler ) {
+void FecAccess::seti2cChannelCRA ( keyType index, tscType8 value) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3526,7 +3526,7 @@ void FecAccess::seti2cChannelCRA ( keyType index, tscType8 value) throw ( FecExc
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::seti2cChannelCRA( keyType index, tscType8 value,logicalOperationType op) throw ( FecExceptionHandler ) {
+void FecAccess::seti2cChannelCRA( keyType index, tscType8 value,logicalOperationType op) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3540,7 +3540,7 @@ void FecAccess::seti2cChannelCRA( keyType index, tscType8 value,logicalOperation
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::geti2cChannelCRA ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::geti2cChannelCRA ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3554,7 +3554,7 @@ tscType8 FecAccess::geti2cChannelCRA ( keyType index ) throw ( FecExceptionHandl
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::geti2cChannelSRA ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::geti2cChannelSRA ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3568,7 +3568,7 @@ tscType8 FecAccess::geti2cChannelSRA ( keyType index ) throw ( FecExceptionHandl
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::geti2cChannelSRB ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::geti2cChannelSRB ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3582,7 +3582,7 @@ tscType8 FecAccess::geti2cChannelSRB ( keyType index ) throw ( FecExceptionHandl
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::geti2cChannelSRC ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::geti2cChannelSRC ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3596,7 +3596,7 @@ tscType8 FecAccess::geti2cChannelSRC ( keyType index ) throw ( FecExceptionHandl
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::geti2cChannelSRD ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::geti2cChannelSRD ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3609,7 +3609,7 @@ tscType8 FecAccess::geti2cChannelSRD ( keyType index ) throw ( FecExceptionHandl
  * \param index - key of the corresponding channel
  * \exception FecExceptionHandler
  */
-void FecAccess::i2cChannelReset ( keyType index ) throw ( FecExceptionHandler ) {
+void FecAccess::i2cChannelReset ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3635,7 +3635,7 @@ std::list<keyType> *FecAccess::scanRingForI2CDevice ( keyType  *deviceValues,
 						      tscType32 sizeDevices,
 						      bool noBroadcast,
 						      bool display)
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::list<keyType> *listDevice = NULL ;
 
@@ -3692,7 +3692,7 @@ std::list<keyType> *FecAccess::scanRingForI2CDevice ( keyType index,
 						      tscType32 sizeDevices,
 						      bool noBroadcast,
 						      bool display)
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::list<keyType> *listDevice = NULL ;
 
@@ -3746,7 +3746,7 @@ keyType FecAccess::addMemoryAccess ( tscType8 fecSlot,
                                      tscType8 ringSlot,
                                      tscType8 ccuAddress,
                                      tscType8 memoryChannel,
-                                     enumAccessModeType accessMask ) throw ( FecExceptionHandler ) {
+                                     enumAccessModeType accessMask ) noexcept(false) {
 
 
   return (addMemoryAccess ( buildCompleteKey ( fecSlot, ringSlot, ccuAddress, memoryChannel, MEMORYADDRESSNUMBER ), accessMask)) ;
@@ -3766,7 +3766,7 @@ keyType FecAccess::addMemoryAccess ( tscType8 fecSlot,
  */
 keyType FecAccess::addMemoryAccess ( keyType index,
                                      enumAccessModeType accessMask ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the different values and reject if not correct
   
@@ -3838,7 +3838,7 @@ keyType FecAccess::addMemoryAccess ( keyType index,
  * </ul>
  */
 void FecAccess::removeMemoryAccess ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   /** Retreive the information in the map both device and channel */
   keyType keyChannel = buildChannelKey (index) ;
@@ -3897,7 +3897,7 @@ void FecAccess::removeMemoryAccess ( keyType index )
  * \param index - key of the corresponding channel
  * \exception FecExceptionHandler
  */
-void FecAccess::memoryChannelReset ( keyType index ) throw ( FecExceptionHandler ) {
+void FecAccess::memoryChannelReset ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3911,7 +3911,7 @@ void FecAccess::memoryChannelReset ( keyType index ) throw ( FecExceptionHandler
  * \param value - value to be written
  * \exception FecExceptionHandler
  */
-void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3926,7 +3926,7 @@ void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value ) throw ( Fe
  * \param op - operation to be done (TSC_FECSERVER_OR, TSC_FECSERVER_AND, TSC_FECSERVER_XOR, TSC_FECSERVER_EQUAL)
  * \exception FecExceptionHandler
  */
-void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value, logicalOperationType op ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3940,7 +3940,7 @@ void FecAccess::setMemoryChannelCRA ( keyType index, tscType8 value, logicalOper
  * \return value read
  * \exception FecExceptionHandler
  */   
-tscType8 FecAccess::getMemoryChannelCRA ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getMemoryChannelCRA ( keyType index ) noexcept(false) {
  
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3954,7 +3954,7 @@ tscType8 FecAccess::getMemoryChannelCRA ( keyType index ) throw ( FecExceptionHa
  * \return value read
  * \exception FecExceptionHandler
  */ 
-tscType8 FecAccess::getMemoryChannelStatus ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getMemoryChannelStatus ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3968,7 +3968,7 @@ tscType8 FecAccess::getMemoryChannelStatus ( keyType index ) throw ( FecExceptio
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecAccess::setMemoryChannelWin1LReg ( keyType index, tscType16 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelWin1LReg ( keyType index, tscType16 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3980,7 +3980,7 @@ void FecAccess::setMemoryChannelWin1LReg ( keyType index, tscType16 value ) thro
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecAccess::setMemoryChannelWin1HReg ( keyType index, tscType16 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelWin1HReg ( keyType index, tscType16 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -3992,7 +3992,7 @@ void FecAccess::setMemoryChannelWin1HReg ( keyType index, tscType16 value ) thro
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecAccess::setMemoryChannelWin2LReg ( keyType index, tscType16 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelWin2LReg ( keyType index, tscType16 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4004,7 +4004,7 @@ void FecAccess::setMemoryChannelWin2LReg ( keyType index, tscType16 value ) thro
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecAccess::setMemoryChannelWin2HReg ( keyType index, tscType16 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelWin2HReg ( keyType index, tscType16 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4017,7 +4017,7 @@ void FecAccess::setMemoryChannelWin2HReg ( keyType index, tscType16 value ) thro
  * \param value - value used during a RMW operation (see below)
  * \param op - logical operation (and / or / xor)
  */
-void FecAccess::setMemoryChannelMaskReg ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecAccess::setMemoryChannelMaskReg ( keyType index, tscType8 value ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4029,7 +4029,7 @@ void FecAccess::setMemoryChannelMaskReg ( keyType index, tscType8 value ) throw
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType8 FecAccess::getMemoryChannelMaskReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getMemoryChannelMaskReg ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4041,7 +4041,7 @@ tscType8 FecAccess::getMemoryChannelMaskReg ( keyType index ) throw ( FecExcepti
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType16 FecAccess::getMemoryChannelWin1LReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType16 FecAccess::getMemoryChannelWin1LReg ( keyType index ) noexcept(false) {
 
 
   // Retreive the corresponding FecRingDevice
@@ -4054,7 +4054,7 @@ tscType16 FecAccess::getMemoryChannelWin1LReg ( keyType index ) throw ( FecExcep
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType16 FecAccess::getMemoryChannelWin1HReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType16 FecAccess::getMemoryChannelWin1HReg ( keyType index ) noexcept(false) {
 
 
   // Retreive the corresponding FecRingDevice
@@ -4067,7 +4067,7 @@ tscType16 FecAccess::getMemoryChannelWin1HReg ( keyType index ) throw ( FecExcep
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType16 FecAccess::getMemoryChannelWin2LReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType16 FecAccess::getMemoryChannelWin2LReg ( keyType index ) noexcept(false) {
 
 
   // Retreive the corresponding FecRingDevice
@@ -4080,7 +4080,7 @@ tscType16 FecAccess::getMemoryChannelWin2LReg ( keyType index ) throw ( FecExcep
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType16 FecAccess::getMemoryChannelWin2HReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType16 FecAccess::getMemoryChannelWin2HReg ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4092,7 +4092,7 @@ tscType16 FecAccess::getMemoryChannelWin2HReg ( keyType index ) throw ( FecExcep
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType8 FecAccess::getMemoryChanneMaskReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::getMemoryChanneMaskReg ( keyType index ) noexcept(false) {
 
   // Retreive the corresponding FecRingDevice
   FecRingDevice *fec = getFecRingDevice ( index ) ;
@@ -4112,7 +4112,7 @@ tscType8 FecAccess::getMemoryChanneMaskReg ( keyType index ) throw ( FecExceptio
  * \param piaChannel - by default false, used to set to false the force acknowledge
  * \param errorList - list of exceptions, please note the exceptions insert in the list must be deleted by the remote methods
  */
-unsigned int FecAccess::setBlockDevices ( keyType index, accessDeviceTypeList &vAccessDevices, std::list<FecExceptionHandler *> &errorList, bool piaChannel, bool debugMessageDisplay ) throw (FecExceptionHandler) {
+unsigned int FecAccess::setBlockDevices ( keyType index, accessDeviceTypeList &vAccessDevices, std::list<FecExceptionHandler *> &errorList, bool piaChannel, bool debugMessageDisplay ) noexcept(false) {
 
   unsigned int error = 0 ;
 
@@ -4516,7 +4516,7 @@ unsigned int FecAccess::setBlockDevicesParallel ( accessDeviceTypeListMap &hAcce
  * \return the value read
  * \warning PIA/I2C channels
  */
-tscType8 FecAccess::read (keyType index) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::read (keyType index) noexcept(false) {
 
   // Device found and read a value
   ccuChannelAccess *device = checkIndex (index) ;
@@ -4532,7 +4532,7 @@ tscType8 FecAccess::read (keyType index) throw ( FecExceptionHandler ) {
  * \return the value read
  * \warning only I2C channels
  */
-tscType8 FecAccess::readOffset (keyType index, tscType8 offset) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::readOffset (keyType index, tscType8 offset) noexcept(false) {
   return (readOffset (index, offset, 0)) ;
 }
 
@@ -4545,7 +4545,7 @@ tscType8 FecAccess::readOffset (keyType index, tscType8 offset) throw ( FecExcep
  */
 tscType8 FecAccess::readOffset (keyType index, 
 				 tscType8 offset, 
-				 tscType8 decal) throw ( FecExceptionHandler ) {
+				 tscType8 decal) noexcept(false) {
   // Retreive the access
   i2cAccess *i2c = (i2cAccess *)checkIndex (index) ;
 
@@ -4561,7 +4561,7 @@ tscType8 FecAccess::readOffset (keyType index,
  * \return the value read
  * \warning only I2C channels
  */
-tscType8 FecAccess::read (keyType index, tscType8 offset) throw ( FecExceptionHandler ) {
+tscType8 FecAccess::read (keyType index, tscType8 offset) noexcept(false) {
 
   // Device found and write the value
   i2cAccess *i2c = (i2cAccess *)checkIndex (index) ;
@@ -4579,7 +4579,7 @@ tscType8 FecAccess::read (keyType index, tscType8 offset) throw ( FecExceptionHa
  */
 tscType8 FecAccess::read (keyType index, 
 			  tscType8 AH, 
-			  tscType8 AL ) throw ( FecExceptionHandler ) {
+			  tscType8 AL ) noexcept(false) {
 
   // Device found and write the value
   memoryAccess *memory = (memoryAccess *)checkIndex (index) ;
@@ -4599,7 +4599,7 @@ tscType8 FecAccess::read (keyType index,
 void FecAccess::read (keyType index, 
                       tscType8 AH, tscType8 AL,
                       unsigned size,
-                      tscType8 *values ) throw ( FecExceptionHandler ) {
+                      tscType8 *values ) noexcept(false) {
 
   // Device found and write the value
   memoryAccess *memory = (memoryAccess *)checkIndex (index) ;
@@ -4612,7 +4612,7 @@ void FecAccess::read (keyType index,
  * \param value - value to be written
  * \warning PIA/I2C channels
  */
-void FecAccess::write (keyType index, tscType8 value) throw ( FecExceptionHandler ) {
+void FecAccess::write (keyType index, tscType8 value) noexcept(false) {
 
   // Device found and read a value
   ccuChannelAccess *device = checkIndex (index) ;
@@ -4626,7 +4626,7 @@ void FecAccess::write (keyType index, tscType8 value) throw ( FecExceptionHandle
  * \param value - value to be written
  * \warning only I2C channels
  */
-void FecAccess::writeOffset (keyType index, tscType8 offset, tscType8 value) throw ( FecExceptionHandler ) {
+void FecAccess::writeOffset (keyType index, tscType8 offset, tscType8 value) noexcept(false) {
   writeOffset (index, offset, 0, value) ;
 }
 
@@ -4639,7 +4639,7 @@ void FecAccess::writeOffset (keyType index, tscType8 offset, tscType8 value) thr
  */
 void FecAccess::writeOffset (keyType index, 
                              tscType8 offset, tscType8 decal, 
-                             tscType8 value) throw ( FecExceptionHandler ) {
+                             tscType8 value) noexcept(false) {
 
   // Device found and write the value
   i2cAccess *i2c = (i2cAccess *)checkIndex (index) ;
@@ -4652,7 +4652,7 @@ void FecAccess::writeOffset (keyType index,
  * \param value - value to be written
  * \warning only I2C channels
  */
-void FecAccess::write (keyType index, tscType8 offset, tscType8 value) throw ( FecExceptionHandler ) {
+void FecAccess::write (keyType index, tscType8 offset, tscType8 value) noexcept(false) {
 
   // Device found and write the value
   i2cAccess *i2c = (i2cAccess *)checkIndex (index) ;
@@ -4668,7 +4668,7 @@ void FecAccess::write (keyType index, tscType8 offset, tscType8 value) throw ( F
  */
 void FecAccess::write (keyType index, 
                        tscType8 AH, tscType8 AL, 
-                       tscType8 value) throw ( FecExceptionHandler ) {
+                       tscType8 value) noexcept(false) {
 
   // Device found and write the value
   memoryAccess *memory = (memoryAccess *)checkIndex (index) ;
@@ -4686,7 +4686,7 @@ void FecAccess::write (keyType index,
 void FecAccess::write (keyType index, 
                        tscType8 AH, tscType8 AL, 
                        tscType8 *values,
-                       unsigned size) throw ( FecExceptionHandler ) {
+                       unsigned size) noexcept(false) {
 
   // Device found and write the value
   memoryAccess *memory = (memoryAccess *)checkIndex (index) ;
@@ -4703,7 +4703,7 @@ void FecAccess::write (keyType index,
 void FecAccess::write ( keyType index, 
                         tscType8 AH, tscType8 AL, 
                         logicalOperationType op, 
-                        tscType8 mask ) throw ( FecExceptionHandler ) {
+                        tscType8 mask ) noexcept(false) {
 
   // Device found and write the value
   memoryAccess *memory = (memoryAccess *)checkIndex (index) ;
@@ -4869,7 +4869,7 @@ PlugNPlayConfigure.dat and FecHardwareIdList.dat are existing in the directories
  * </lu>
  * \return FecAccess created
  */
-FecAccess *FecAccess::createFecAccess ( int argc, char **argv, int *cnt, bool init ) throw (FecExceptionHandler) {
+FecAccess *FecAccess::createFecAccess ( int argc, char **argv, int *cnt, bool init ) noexcept(false) {
 
   bool forceAck = true ; 
   unsigned int i2cSpeed = 100 ;
diff --git a/FecSoftwareV3_0/generic/src/common/FecAccessManager.cc b/FecSoftwareV3_0/generic/src/common/FecAccessManager.cc
index 2f3fc34..cb5b3a2 100755
--- a/FecSoftwareV3_0/generic/src/common/FecAccessManager.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecAccessManager.cc
@@ -820,7 +820,7 @@ tbbAccessedType &FecAccessManager::getTbbAccesses ( ) {
  * \param access - device access class
  * \exception FecExceptionHandler
  */
-void FecAccessManager::setAccess ( deviceAccess *access ) throw (FecExceptionHandler) {
+void FecAccessManager::setAccess ( deviceAccess *access ) noexcept(false) {
 
   keyType index = access->getKey() ;
   enumDeviceType deviceType = access->getDeviceType() ;
@@ -1071,7 +1071,7 @@ void FecAccessManager::setAccess ( deviceAccess *access ) throw (FecExceptionHan
  * \return error number
  * \exception FecHandlerException
  */
-unsigned int FecAccessManager::downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset, bool dohSet ) throw (FecExceptionHandler) {
+unsigned int FecAccessManager::downloadValues ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset, bool dohSet ) noexcept(false) {
 
   if (displayDebugMessage_) 
     std::cout << __PRETTY_FUNCTION__ << ": " << std::dec << vDevice->size() << " devices to be downloaded" << std::endl ;
@@ -1281,7 +1281,7 @@ unsigned int FecAccessManager::calibrateDOH ( deviceVector &dohDevices, std::lis
  * \return error number
  * \exception FecHandlerException
  */
-unsigned int FecAccessManager::downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset, bool dohSet ) throw (FecExceptionHandler) {
+unsigned int FecAccessManager::downloadValuesMultipleFrames ( deviceVector *vDevice, std::list<FecExceptionHandler *> &errorList, bool pllReset, bool dohSet ) noexcept(false) {
 
   if (displayDebugMessage_) 
     std::cout << __PRETTY_FUNCTION__ << ": " << std::dec << vDevice->size() << " devices to be downloaded => " << maxErrorAllowed_ << std::endl ;
@@ -3750,7 +3750,7 @@ unsigned int FecAccessManager::getLastErrorLastOperation() {
  * Take a vector of PIA reset and reset all modules given by this vector
  * \param vPiaReset - vector of PIA reset description
  */
-unsigned int FecAccessManager::resetPiaModules ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) {
+unsigned int FecAccessManager::resetPiaModules ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) noexcept(false) {
 
   // Number of errors
   unsigned int error = 0 ;
@@ -3861,7 +3861,7 @@ unsigned int FecAccessManager::resetPiaModules ( piaResetVector *vPiaReset, std:
  * \warning The mask must be the same
  * \warning The delayActiveReset and intervalDelayReset that will be used will be the maximum time given by this two arguments
  */
-unsigned int FecAccessManager::resetPiaModulesMultipleFrames ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) {
+unsigned int FecAccessManager::resetPiaModulesMultipleFrames ( piaResetVector *vPiaReset, std::list<FecExceptionHandler *> &errorList ) noexcept(false) {
 
   // Number of errors
   unsigned int error = 0 ;
diff --git a/FecSoftwareV3_0/generic/src/common/FecDeviceFactory.cc b/FecSoftwareV3_0/generic/src/common/FecDeviceFactory.cc
index 0897609..33ee2e1 100755
--- a/FecSoftwareV3_0/generic/src/common/FecDeviceFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecDeviceFactory.cc
@@ -85,7 +85,7 @@ FecDeviceFactory::FecDeviceFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 FecDeviceFactory::FecDeviceFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-    throw ( oracle::occi::SQLException ): 
+    noexcept(false): 
   DeviceFactoryInterface ( login, password, path, threaded ) {
 
   setDatabaseAccess ( login, password, path ) ;
@@ -233,7 +233,7 @@ void FecDeviceFactory::setInputFileName ( std::string inputFileName, std::string
  * \warning in the destructor of FecDeviceFactory, the dbAccess is deleted
  */
 void FecDeviceFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -262,7 +262,7 @@ void FecDeviceFactory::setDatabaseAccess ( std::string login, std::string passwo
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void FecDeviceFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // Retreive the parameters
   std::string login, password, path ;
@@ -300,7 +300,7 @@ void FecDeviceFactory::setDatabaseAccess ( DbFecAccess *dbAccess ) {
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 std::list<unsigned int *> FecDeviceFactory::getPartitionVersion ( std::string partitionName ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "Retreive the current version for the partition " << partitionName << std::endl ;
@@ -352,7 +352,7 @@ std::list<unsigned int *> FecDeviceFactory::getPartitionVersion ( std::string pa
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 void FecDeviceFactory::getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskMajor, unsigned int *maskMinor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "Retreive the current version for the partition " << partitionName << std::endl ;
@@ -396,7 +396,7 @@ void FecDeviceFactory::getPartitionVersion ( std::string partitionName, unsigned
  * </ul>
  */
 void FecDeviceFactory::setPartitionVersion ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   if (dbAccess_ != NULL) {
 
@@ -470,7 +470,7 @@ void FecDeviceFactory::setPartitionVersion ( std::string partitionName, unsigned
  * \see XMLFecDevice::dbConfigure ( std::string, std::string )
  */
 void FecDeviceFactory::createPartition ( deviceVector devices, unsigned int *versionMajor, unsigned int *versionMinor, std::string partitionName, bool createPartitionFlag ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "FecDeviceFactory::createPartition" << std::endl ;
@@ -580,9 +580,9 @@ std::string FecDeviceFactory::setDeviceCorrection ( deviceVector &devices, std::
  */ 
 void FecDeviceFactory::getFecDeviceDescriptions ( bool fileUsed, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor, std::string partitionName, std::string fecHardwareId, deviceVector &outVector, bool allDevices, bool forceDbReload ) 
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 #else
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
 #ifdef DEBUGMSGERROR
@@ -724,9 +724,9 @@ void FecDeviceFactory::getFecDeviceDescriptions ( bool fileUsed, unsigned int ve
  */ 
   void FecDeviceFactory::getFecDeviceDescriptions ( std::string partitionName, std::string fecHardwareId, deviceVector &outVector, unsigned int versionMajor, unsigned int versionMinor, bool allDevices, bool forceDbReload  ) 
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 #else
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
     getFecDeviceDescriptions ( false, versionMajor, versionMinor, 0, 0, partitionName, fecHardwareId, outVector, allDevices, forceDbReload ) ;
@@ -748,9 +748,9 @@ void FecDeviceFactory::getFecDeviceDescriptions ( bool fileUsed, unsigned int ve
  */ 
   void FecDeviceFactory::getFecDeviceDescriptions ( std::string partitionName, deviceVector &outVector, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor, bool allDevices, bool forceDbReload ) 
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 #else
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
     getFecDeviceDescriptions ( false, versionMajor, versionMinor, pMaskVersionMajor, pMaskVersionMinor, partitionName, "0", outVector, allDevices, forceDbReload ) ;
@@ -762,9 +762,9 @@ void FecDeviceFactory::getFecDeviceDescriptions ( bool fileUsed, unsigned int ve
  */
 void FecDeviceFactory::getFecDeviceDescriptions ( deviceVector &outVector, bool allDevices )
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 #else
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
     getFecDeviceDescriptions ( true, 0, 0, 0, 0, "nil", "0", outVector, allDevices ) ;
@@ -787,9 +787,9 @@ void FecDeviceFactory::getFecDeviceDescriptions ( deviceVector &outVector, bool
  */
 void FecDeviceFactory::setFecDeviceDescriptions ( deviceVector devices, std::string partitionName, unsigned int *versionMajor, unsigned int *versionMinor, bool majorVersion, bool uploadVersion )
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 #else
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
 #ifdef DEBUGMSGERROR
@@ -884,7 +884,7 @@ void FecDeviceFactory::getDcuValuesDescriptions ( std::string partitionName,
 						  unsigned long dcuHardId,
 						  unsigned long timeStampStart, unsigned long timeStampStop, 
 						  deviceVector &outVector ) 
-  throw (FecExceptionHandler ) {
+  noexcept(false) {
 
   // Contrarily for the DCU coming from the files, the DCU values are not 
   // retrieve from the database, a specific method is implemented for it
@@ -969,7 +969,7 @@ void FecDeviceFactory::getDcuValuesDescriptions ( std::string partitionName,
  */
 void FecDeviceFactory::getDcuValuesDescriptions ( std::string partitionName, deviceVector &outVector, 
 						  unsigned long timeStampStart, unsigned long timeStampStop ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getDcuValuesDescriptions ( partitionName, 0, timeStampStart, timeStampStop, outVector ) ;
 }
@@ -983,7 +983,7 @@ void FecDeviceFactory::getDcuValuesDescriptions ( std::string partitionName, dev
  * \warning if the input if a file whatever the timestamps are, the device description is retreived from the input file.
  */
 void FecDeviceFactory::getDcuValuesDescriptions ( deviceVector &outVector, unsigned long timeStampStart, unsigned long timeStampStop ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getDcuValuesDescriptions ( "nil", 0, timeStampStart, timeStampStop, outVector ) ;
   
@@ -999,7 +999,7 @@ void FecDeviceFactory::getDcuValuesDescriptions ( deviceVector &outVector, unsig
  * \warning if the input if a file whatever the timestamps are, the device description is retreived from the input file.
  */
 void FecDeviceFactory::getDcuValuesDescriptions ( unsigned long dcuHardId, deviceVector &outVector, unsigned long timeStampStart, unsigned long timeStampStop ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getDcuValuesDescriptions ( "nil", dcuHardId, timeStampStart, timeStampStop, outVector ) ;
 }
@@ -1009,7 +1009,7 @@ void FecDeviceFactory::getDcuValuesDescriptions ( unsigned long dcuHardId, devic
  * \param fileUpload - force the upload into a file
  */
 void FecDeviceFactory::setDcuValuesDescriptions ( std::string partitionName, deviceVector dcuDevices, bool fileUpload ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (dcuDevices.empty()) RAISEFECEXCEPTIONHANDLER (NODATAAVAILABLE, NODATAAVAILABLE_MSG + " to be uploaded", ERRORCODE) ;
 
@@ -1047,7 +1047,7 @@ void FecDeviceFactory::setDcuValuesDescriptions ( std::string partitionName, dev
  * \return the resulting TkRingDescription (the memory is kept in the factory)
  */
 tkringVector FecDeviceFactory::getDbRingDescription ( std::string partitionName ) 
-  throw ( FecExceptionHandler, oracle::occi::SQLException ) {
+  noexcept(false) {
  
   if (!getDbUsed()) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -1077,7 +1077,7 @@ tkringVector FecDeviceFactory::getDbRingDescription ( std::string partitionName
  * \return the resulting TkRingDescription (the memory is kept in the factory)
  */
 TkRingDescription* FecDeviceFactory::getDbRingDescription ( std::string partitionName, std::string fecHardwareId, unsigned int ring ) 
-  throw ( FecExceptionHandler, oracle::occi::SQLException ) {
+  noexcept(false) {
  
   if (!getDbUsed()) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -1107,7 +1107,7 @@ TkRingDescription* FecDeviceFactory::getDbRingDescription ( std::string partitio
  * \warning if the views/tables from construction TKCC database does not exists then an exception is raised
  */
 TkRingDescription* FecDeviceFactory::getDbRingDescription ( std::string fecHardwareId, unsigned int ring ) 
-  throw ( FecExceptionHandler, oracle::occi::SQLException ) {
+  noexcept(false) {
  
   if (!getDbUsed()) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -1132,7 +1132,7 @@ TkRingDescription* FecDeviceFactory::getDbRingDescription ( std::string fecHardw
  * \param partitionName - name of the partition in the database
  * \param ring - ring description
  */
-void FecDeviceFactory::setDbRingDescription  ( std::string partitionName, TkRingDescription ringD )  throw ( FecExceptionHandler, oracle::occi::SQLException ) {
+void FecDeviceFactory::setDbRingDescription  ( std::string partitionName, TkRingDescription ringD )  noexcept(false) {
 
   // Set in database
   if ( getDbUsed() && (partitionName != "") ) {
@@ -1168,7 +1168,7 @@ void FecDeviceFactory::setDbRingDescription  ( std::string partitionName, TkRing
  * \return the resulting TkRingDescription (the memory is kept in the factory)
  */
 TkRingDescription* FecDeviceFactory::getFileRingDescription ( std::string fileName, std::string fecHardwareId, unsigned int ring )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // delete the vector of ring descriptions
   FecFactory::deleteVectorI(tkRingDescription_) ;
@@ -1189,7 +1189,7 @@ TkRingDescription* FecDeviceFactory::getFileRingDescription ( std::string fileNa
  * \warning the upload is done only one ring at a time so only one ring will be returned here
  */
 tkringVector FecDeviceFactory::getFileRingDescription ( std::string fileName )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   // delete the vector of ring descriptions
   FecFactory::deleteVectorI(tkRingDescription_) ;
@@ -1206,7 +1206,7 @@ tkringVector FecDeviceFactory::getFileRingDescription ( std::string fileName )
  * \param inVector - the input vector
  */
 void FecDeviceFactory::setFileRingDescription ( std::string fileName, TkRingDescription ringD )
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   XMLFecCcu xmlFecCcu;
   // Upload to File
diff --git a/FecSoftwareV3_0/generic/src/common/FecFactory.cc b/FecSoftwareV3_0/generic/src/common/FecFactory.cc
index c2f8327..c7d04de 100755
--- a/FecSoftwareV3_0/generic/src/common/FecFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecFactory.cc
@@ -44,7 +44,7 @@ FecFactory::FecFactory (  ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 FecFactory::FecFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   FecDeviceFactory (login, password, path, threaded),
   PiaResetFactory (login, password, path, threaded) {
 }
@@ -74,7 +74,7 @@ void FecFactory::setOutputFileName ( std::string outputFileName ) {
 /** Set a file as the new input, same method than addFecFileName but the previous devices and pia are deleted
  * \param inputFileName - new input file
  */
-void FecFactory::setInputFileName ( std::string inputFileName ) throw ( FecExceptionHandler ) {
+void FecFactory::setInputFileName ( std::string inputFileName ) noexcept(false) {
 
   FecDeviceFactory::setInputFileName (inputFileName) ;
   PiaResetFactory::setInputFileName (inputFileName) ;
@@ -85,7 +85,7 @@ void FecFactory::setInputFileName ( std::string inputFileName ) throw ( FecExcep
  * \param inputFileName - new input file
  * \param fecHardwareId - FEC hardware ID
  */
-void FecFactory::setInputFileName ( std::string inputFileName, std::string fecHardwareId ) throw ( FecExceptionHandler ) {
+void FecFactory::setInputFileName ( std::string inputFileName, std::string fecHardwareId ) noexcept(false) {
 
   FecDeviceFactory::setInputFileName (inputFileName, fecHardwareId) ;
   PiaResetFactory::setInputFileName (inputFileName, fecHardwareId) ;
@@ -102,7 +102,7 @@ std::string FecFactory::getOutputFileName ( ) {
 /** Add a new file name and parse it to retreive the information needed
  * \param fileName - name of the XML file
  */
-void FecFactory::addFileName ( std::string fileName ) throw ( FecExceptionHandler ) {
+void FecFactory::addFileName ( std::string fileName ) noexcept(false) {
 
   FecDeviceFactory::addFileName (fileName) ;
   PiaResetFactory::addFileName (fileName) ;
@@ -111,7 +111,7 @@ void FecFactory::addFileName ( std::string fileName ) throw ( FecExceptionHandle
 /** Add a new file name and parse it to retreive the information needed
  * \param fileName - name of the XML file
  */
-void FecFactory::addFileName ( std::string fileName, std::string fecHardwareId ) throw ( FecExceptionHandler ) {
+void FecFactory::addFileName ( std::string fileName, std::string fecHardwareId ) noexcept(false) {
 
   FecDeviceFactory::addFileName (fileName, fecHardwareId) ;
   PiaResetFactory::addFileName (fileName, fecHardwareId) ;
@@ -136,7 +136,7 @@ void FecFactory::setUsingFile ( bool useIt ) {
 /** 
  * \param useIt - use the database, the database must be created, if not an exception is raised
  */
-void FecFactory::setUsingDb ( bool useIt ) throw (std::string) {
+void FecFactory::setUsingDb ( bool useIt ) noexcept(false) {
   FecDeviceFactory::setUsingDb(useIt) ;
   PiaResetFactory::setUsingDb(useIt) ;
 }
@@ -163,7 +163,7 @@ bool FecFactory::getDbConnected ( ) {
  * \param path - path to database
  * \warning in the destructor of FecFactory, the dbFecAccess is deleted
  */
-void FecFactory::setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) {
+void FecFactory::setDatabaseAccess ( ) noexcept(false) {
 
   FecDeviceFactory::setDatabaseAccess () ;
   PiaResetFactory::setDatabaseAccess () ;
@@ -175,7 +175,7 @@ void FecFactory::setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) {
  * \param path - path to database
  * \warning in the destructor of FecFactory, the dbFecAccess is deleted
  */
-void FecFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) throw ( oracle::occi::SQLException ) {
+void FecFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) noexcept(false) {
 
   FecDeviceFactory::setDatabaseAccess (login, password, path ) ;
   PiaResetFactory::setDatabaseAccess (login, password, path ) ;
@@ -191,7 +191,7 @@ DbFecAccess *FecFactory::getDatabaseAccess ( ) {
 
 /** \return the partition name
  */
-std::string FecFactory::getPartitionName ( unsigned int partitionId )  throw (oracle::occi::SQLException) {
+std::string FecFactory::getPartitionName ( unsigned int partitionId )  noexcept(false) {
 
   return (FecDeviceFactory::getPartitionName (partitionId)) ;
 }
@@ -211,7 +211,7 @@ std::string FecFactory::getPartitionName ( unsigned int partitionId )  throw (or
  * \param partitionNumber - partition number returned
  */
 void FecFactory::getFecDevicePartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *maskMajor, unsigned int *maskMinor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   return (FecDeviceFactory::getPartitionVersion ( partitionName, major, minor, maskMajor, maskMinor, partitionNumber )) ;
 }
@@ -220,7 +220,7 @@ void FecFactory::getFecDevicePartitionVersion ( std::string partitionName, unsig
  * \return the information about partition versus version
  */
 void FecFactory::setFecDevicePartitionVersion ( std::string partitionName, unsigned int versionMajor, unsigned int versionMinor ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
   
   FecDeviceFactory::setPartitionVersion ( partitionName, versionMajor, versionMinor ) ;
 }
@@ -236,7 +236,7 @@ void FecFactory::setFecDevicePartitionVersion ( std::string partitionName, unsig
  * \see XMLFecPiaReset::dbConfigure ( ) and XMLFecDevice::dbConfigure(std::string, std::string)
  */
 void FecFactory::createPartition ( deviceVector devices, piaResetVector piaDevices, unsigned int *deviceMajor, unsigned int *deviceMinor, std::string partitionName, bool createPartitionFlag ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if ( (FecDeviceFactory::getDatabaseAccess() != NULL) &&
        (PiaResetFactory::getDatabaseAccess() != NULL)  &&
@@ -264,7 +264,7 @@ void FecFactory::createPartition ( deviceVector devices, piaResetVector piaDevic
  * \param versionMinor - minor version created
  */
 void FecFactory::createPartition ( deviceVector devices, unsigned int *versionMajor, unsigned int *versionMinor, std::string partitionName, bool createPartitionFlag ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   FecDeviceFactory::createPartition (devices, versionMajor, versionMinor, partitionName, createPartitionFlag ) ;
 }
@@ -273,7 +273,7 @@ void FecFactory::createPartition ( deviceVector devices, unsigned int *versionMa
  * \param partitionName - partition name
  */
 void FecFactory::createPartition ( piaResetVector devices, std::string partitionName )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   PiaResetFactory::createPartition (devices, partitionName ) ;
 }
@@ -294,7 +294,7 @@ void FecFactory::createPartition ( piaResetVector devices, std::string partition
  * \See creationPartition (deviceVector, piaResetVector, int *, int *, std::string, std::string)
  */
 void FecFactory::setFecDevicePiaDescriptions ( deviceVector devices, piaResetVector piaDevices, std::string partitionName, unsigned int *deviceMajor, unsigned int *deviceMinor ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DATABASE
   if ( FecDeviceFactory::getDbUsed() && PiaResetFactory::getDbUsed() && deviceMajor != NULL && deviceMinor != NULL ) {
@@ -321,7 +321,7 @@ void FecFactory::setFecDevicePiaDescriptions ( deviceVector devices, piaResetVec
  * \param fecPiaDevices - a vector of pia reset
  */
 void FecFactory::setFecDevicePiaDescriptions ( deviceVector devices, piaResetVector piaDevices ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (!devices.empty() && !piaDevices.empty()) {
     
@@ -348,7 +348,7 @@ void FecFactory::setFecDevicePiaDescriptions ( deviceVector devices, piaResetVec
  * \return pointer to the memory (NULL in case of problem)
  * \warning this method simply produce a memory with an XML buffer. The pointer allocated with new (so use delete to delete it) should be deleted by the caller of this method.
  */
-void *FecFactory::writeTo ( std::vector<TkRingDescription *> &rings, unsigned int &sizeOfAllocation ) throw (FecExceptionHandler) {
+void *FecFactory::writeTo ( std::vector<TkRingDescription *> &rings, unsigned int &sizeOfAllocation ) noexcept(false) {
 
   std::stringstream buffer ;
 
@@ -380,7 +380,7 @@ void *FecFactory::writeTo ( std::vector<TkRingDescription *> &rings, unsigned in
  * \warning it is up the caller to delete the TkRingDescription returned
  * \warning this method is parsing the memory passed based on XML buffer
  */
-std::vector<TkRingDescription *> FecFactory::readFrom ( const void *memory ) throw (FecExceptionHandler) {
+std::vector<TkRingDescription *> FecFactory::readFrom ( const void *memory ) noexcept(false) {
 
   //XMLByte *xmlBuffer = new XMLByte[sizeOfAllocation];
   //memcpy((void *)xmlBuffer,memory,sizeOfAllocation) ;
diff --git a/FecSoftwareV3_0/generic/src/common/FecPciRingDevice.cc b/FecSoftwareV3_0/generic/src/common/FecPciRingDevice.cc
index ea7e6e3..442530d 100755
--- a/FecSoftwareV3_0/generic/src/common/FecPciRingDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecPciRingDevice.cc
@@ -48,7 +48,7 @@ using std::hex;
  * \param ring - ring slot
  * \param init - initialise the FEC (with reset at the starting)
  */
-FecPciRingDevice::FecPciRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity ) throw ( FecExceptionHandler ) :
+FecPciRingDevice::FecPciRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity ) noexcept(false) :
   FecRingDevice ( fecSlot, ringSlot, FECPCI ) {
 
   // Build the name of the device driver
@@ -98,7 +98,7 @@ FecPciRingDevice::FecPciRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool in
 
 /** Close the PCI device driver
  */
-FecPciRingDevice::~FecPciRingDevice ( ) throw ( FecExceptionHandler )
+FecPciRingDevice::~FecPciRingDevice ( ) noexcept(false)
 {
 #ifdef IRQMANAGER
   // Enable the IRQ
@@ -119,7 +119,7 @@ FecPciRingDevice::~FecPciRingDevice ( ) throw ( FecExceptionHandler )
  * \param ctrl0Value - value of the CR0
  * \param force - if force is set then the value is applied blindly. if force is not set then the invert clock polarity is managed following the parameter in the class.
  */
-void FecPciRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw ( FecExceptionHandler ) {
+void FecPciRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) noexcept(false) {
 
   if (!force) {
     if (invertClockPolarity_) ctrl0Value |= FEC_CR0_POLARITY ;
@@ -145,7 +145,7 @@ void FecPciRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw
 /** Reads a value from FEC ctrl0 
  *\return the value read
  */
-tscType16 FecPciRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
+tscType16 FecPciRingDevice::getFecRingCR0( ) noexcept(false) {
 
   tscType32 ctrl0Value;
 
@@ -168,7 +168,7 @@ tscType16 FecPciRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
 /** Write the value given as parameter in FEC control 1 register 
  * \param value to be written
  */
-void FecPciRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) {
+void FecPciRingDevice::setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << ctrl1Value << " in CR1" << std::endl ;
@@ -190,7 +190,7 @@ void FecPciRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptio
 /** Reads a value from FEC ctrl1 
  * \return value of the FEC CR1 for that ring
  */
-tscType16 FecPciRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecPciRingDevice::getFecRingCR1( ) noexcept(false) {
 
   tscType32 ctrl1Value;
 
@@ -214,7 +214,7 @@ tscType16 FecPciRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
 /** Reads a value from FEC SR0
  * \return the value of the FEC SR0
  */
-tscType32 FecPciRingDevice::getFecRingSR0( ) throw ( FecExceptionHandler ) {
+tscType32 FecPciRingDevice::getFecRingSR0( ) noexcept(false) {
 
   tscType32 sr0Value;
   
@@ -238,7 +238,7 @@ tscType32 FecPciRingDevice::getFecRingSR0( ) throw ( FecExceptionHandler ) {
 /** Reads a value from FEC SR1
  * \return the value of the FEC SR1
  */
-tscType16 FecPciRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecPciRingDevice::getFecRingSR1( ) noexcept(false) {
 
   tscType32 sr1Value;
 
@@ -260,7 +260,7 @@ tscType16 FecPciRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
 /** Return the version of the firmware
  * \return Firmware version
  */
-tscType16 FecPciRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandler ) {
+tscType16 FecPciRingDevice::getFecFirmwareVersion( ) noexcept(false) {
 
   tscType16 fecVersion ;
 
@@ -288,7 +288,7 @@ tscType16 FecPciRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandler
 /** Return a word from the FIFO receive
  * \param return a word from the FIFO receive
  */
-tscType32 FecPciRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
+tscType32 FecPciRingDevice::getFifoReceive( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fiforec_value;
 
@@ -314,7 +314,7 @@ tscType32 FecPciRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO receive
  * \param fiforecValue - word to be set
  */
-void FecPciRingDevice::setFifoReceive( tscType32 fiforec_value )throw ( FecExceptionHandler ) {
+void FecPciRingDevice::setFifoReceive( tscType32 fiforec_value )noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforecValue << " to fifo receive" << std::endl ;
@@ -332,7 +332,7 @@ void FecPciRingDevice::setFifoReceive( tscType32 fiforec_value )throw ( FecExcep
 /** Return a word from the FIFO return
  * \param return a word from the FIFO return
  */
-tscType8 FecPciRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
+tscType8 FecPciRingDevice::getFifoReturn( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fiforet_value;
 
@@ -357,7 +357,7 @@ tscType8 FecPciRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO return
  * \param fiforet_value - word to be set
  */
-void FecPciRingDevice::setFifoReturn( tscType8 fiforet_value )throw ( FecExceptionHandler ) {
+void FecPciRingDevice::setFifoReturn( tscType8 fiforet_value )noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforet_value << " to fifo return" << std::endl ;
@@ -377,7 +377,7 @@ void FecPciRingDevice::setFifoReturn( tscType8 fiforet_value )throw ( FecExcepti
 /** Return a word from the FIFO transmit
  * \param return a word from the FIFO transmit
  */
-tscType32 FecPciRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
+tscType32 FecPciRingDevice::getFifoTransmit( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fifotra_value;
 
@@ -401,7 +401,7 @@ tscType32 FecPciRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO transmit
  * \param fifotra_value - word to be set
  */
-void FecPciRingDevice::setFifoTransmit( tscType32 fifotra_value )throw ( FecExceptionHandler ) {
+void FecPciRingDevice::setFifoTransmit( tscType32 fifotra_value )noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforet_value << " to fifo transmit" << std::endl ;
@@ -429,7 +429,7 @@ void FecPciRingDevice::setFifoTransmit( tscType32 fifotra_value )throw ( FecExce
 
 /** Hard reset of the FEC board or the ring board => PLX reset is issued
  */
-void FecPciRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
+void FecPciRingDevice::fecHardReset ( ) noexcept(false) {
 
 #ifdef F1STLEVELCHECK
   
@@ -475,7 +475,7 @@ void FecPciRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
  * \param enable - enable or disable the IRQ on the PLX
  * \param level - not used, only for code consistent
  */
-void FecPciRingDevice::setIRQ ( bool enable, tscType8 level ) throw (FecExceptionHandler) {
+void FecPciRingDevice::setIRQ ( bool enable, tscType8 level ) noexcept(false) {
 
 #ifdef IRQMANAGER
   DD_TYPE_ERROR lcl_err ;
diff --git a/FecSoftwareV3_0/generic/src/common/FecRingDevice.cc b/FecSoftwareV3_0/generic/src/common/FecRingDevice.cc
index 3e4d190..3b289a4 100755
--- a/FecSoftwareV3_0/generic/src/common/FecRingDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecRingDevice.cc
@@ -109,7 +109,7 @@ FecRingDevice::FecRingDevice ( tscType8 fecSlot, tscType8 ringSlot, enumFecBusTy
  * \exception FecExceptionHandler
  */
 void FecRingDevice::setInitFecRingDevice ( bool init, bool invertClockPolarity ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   firmwareVersion_ = getFecFirmwareVersion() ;
 
@@ -366,7 +366,7 @@ void FecRingDevice::removeAccess ( ) {
  * </ul>
  * \warning no hardware access is performed in this method if the ring is scanned at the beginning
  */
-void FecRingDevice::basicCheckError ( keyType index ) throw (FecExceptionHandler) {
+void FecRingDevice::basicCheckError ( keyType index ) noexcept(false) {
 
 #ifdef S2NDLEVELCHECK
 
@@ -511,7 +511,7 @@ unsigned int FecRingDevice::getReturnFifoDepth () {
  * \author Laurent Gross for the sending and receiving frame
  */
 void FecRingDevice::writeFrame ( tscType8 *frame, bool ignoreDirectAck ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   tscType16 fecSR0D = getFecRingSR0() ;
@@ -1369,7 +1369,7 @@ void FecRingDevice::writeFrame ( tscType8 *frame, bool ignoreDirectAck )
  * \author Laurent Gross for the sending and receiving frame
  */
 void FecRingDevice::writeFrameDelayed ( tscType8 *frame, bool ignoreDirectAck ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   tscType16 fecSR0D = getFecRingSR0() ;
@@ -2201,7 +2201,7 @@ void FecRingDevice::writeFrameDelayed ( tscType8 *frame, bool ignoreDirectAck )
  * \author Laurent Gross for the sending and receiving frame
  */
 void FecRingDevice::readFrame ( tscType8 transaction, tscType8 *frame, tscType8 expectedSize )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType16 fecSR0 ;
 
@@ -2585,7 +2585,7 @@ void FecRingDevice::readFrame ( tscType8 transaction, tscType8 *frame, tscType8
  * \warning any change in the CR0 will keep the value set
  */
 void FecRingDevice::setFecInputB ( bool inputB ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (inputB) setFecRingCR0 ( FEC_CR0_SELSERIN, CMD_OR ) ;
   else setFecRingCR0 ( FEC_CR0_SELSERIN, CMD_XOR ) ;
@@ -2596,7 +2596,7 @@ void FecRingDevice::setFecInputB ( bool inputB )
  * \warning any change in the CR0 will keep the value set
  */
 void FecRingDevice::setFecOutputB ( bool outputB ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (outputB) setFecRingCR0 ( FEC_CR0_SELSEROUT, CMD_OR ) ;
   else setFecRingCR0 ( FEC_CR0_SELSEROUT, CMD_XOR ) ;
@@ -2607,7 +2607,7 @@ void FecRingDevice::setFecOutputB ( bool outputB )
  * \warning any change in the CR0 will keep the value set
  */
 void FecRingDevice::setInvertClockPolarity ( bool invertPolarity ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (invertPolarity) {
     invertClockPolarity_ = 1 ;
@@ -2624,7 +2624,7 @@ void FecRingDevice::setInvertClockPolarity ( bool invertPolarity )
  * \warning any change in the CR0 will keep the value set
  */
 void FecRingDevice::setInternalClock ( bool internal )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   if (internal) setFecRingCR0 ( FEC_CR0_XTALCLOCK, CMD_OR ) ;
   else setFecRingCR0 ( FEC_CR0_XTALCLOCK, CMD_XOR ) ;
@@ -2635,7 +2635,7 @@ void FecRingDevice::setInternalClock ( bool internal )
  * \param op - operation to be performed
  */
  void FecRingDevice::setFecRingCR0 ( tscType16 mask, logicalOperationType op ) 
-   throw (FecExceptionHandler) {
+   noexcept(false) {
 
    // READ modify write
    tscType16 fecCR0 = getFecRingCR0() ;
@@ -2677,7 +2677,7 @@ void FecRingDevice::setInternalClock ( bool internal )
  * \exception FecExceptionHandler
  */
 void FecRingDevice::fecRingResetFSM ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setFecRingCR0 ( FEC_CR0_RESETFSMFEC, CMD_OR ) ;
   setFecRingCR0 ( FEC_CR0_RESETFSMFEC, CMD_XOR ) ;
@@ -2707,7 +2707,7 @@ void FecRingDevice::fecRingResetFSM ( )
  * \warning The FEC reset FEC/CCU (but not the modules done via PIA channels for the CMS Tracker)
  */
 void FecRingDevice::fecRingReset ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setFecRingCR0 ( FEC_CR0_RESETOUT, CMD_OR ) ;
   setFecRingCR0 ( FEC_CR0_RESETOUT, CMD_XOR ) ;
@@ -2763,7 +2763,7 @@ void FecRingDevice::fecRingReset ( )
  * \warning The FEC reset FEC/CCU (but not the modules done via PIA channels for the CMS Tracker)
  */
 void FecRingDevice::fecRingResetB ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setFecRingCR0 ( FEC_CR0_RESETRINGB, CMD_OR ) ;
   setFecRingCR0 ( FEC_CR0_RESETRINGB, CMD_XOR ) ;
@@ -2814,7 +2814,7 @@ void FecRingDevice::fecRingResetB ( )
  * \warning The FEC reset FEC/CCU (but not the modules done via PIA channels for the CMS Tracker)
  */
 void FecRingDevice::initAfterHardReset ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Change the clock polarity
   if (invertClockPolarity_) setFecRingCR0(FEC_CR0_POLARITY,CMD_OR) ;
@@ -2852,7 +2852,7 @@ void FecRingDevice::initAfterHardReset ( )
  * <li> Check if the FIFO receive is empty 
  * </lu>
  */
-void FecRingDevice::checkRing ( ) throw (FecExceptionHandler) {
+void FecRingDevice::checkRing ( ) noexcept(false) {
 
   // Check the status register 0 of the FEC
   tscType32 fecSR0 = getFecRingSR0() ;
@@ -2911,7 +2911,7 @@ void FecRingDevice::checkRing ( ) throw (FecExceptionHandler) {
  * \warning the FEC release is made two times due to the hardware (?)
  */
 void FecRingDevice::fecRingRelease ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Generate the token
   setFecRingCR1 ( FEC_CR1_RELEASEFEC ) ;
@@ -2952,7 +2952,7 @@ void FecRingDevice::fecRingRelease ( )
  * \thanks Wojciech BIALAS
  */
 void FecRingDevice::emptyFifoReceive ( )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType16 fecSR0 ; 
 
@@ -2989,7 +2989,7 @@ void FecRingDevice::emptyFifoReceive ( )
  * \thanks Wojciech BIALAS
  */
 void FecRingDevice::emptyFifoReturn ( )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType16 fecSR0 ; 
 
@@ -3026,7 +3026,7 @@ void FecRingDevice::emptyFifoReturn ( )
  * \thanks Wojciech BIALAS
  */
 void FecRingDevice::emptyFifoTransmit ( )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType16 fecSR0 ; 
 
@@ -3214,7 +3214,7 @@ void FecRingDevice::checkFifoReceive ( int display ) {
  * \warning This method is only used in the basic check error in case of the ring
  * was not scanned at the beginning
  */
-bool FecRingDevice::connectCCU ( keyType index ) throw (FecExceptionHandler) {
+bool FecRingDevice::connectCCU ( keyType index ) noexcept(false) {
 
   // is a CCU 25 ?
   bool isCcu25 ;
@@ -3292,7 +3292,7 @@ bool FecRingDevice::connectCCU ( keyType index ) throw (FecExceptionHandler) {
  * \warning When you use this method all the CCU must be CCU 25
  */
 void FecRingDevice::fecScanRingBroadcast ( )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGGETREGISTERS
   bool readRegisters = readRegistersError_ ;
@@ -3481,7 +3481,7 @@ void FecRingDevice::fecScanRingBroadcast ( )
  * \warning When you use this method all the CCU must be old CCUs
  */
 void FecRingDevice::fecScanRingNoBroadcast ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGGETREGISTERS
   bool readRegisters = readRegistersError_ ;
@@ -3594,7 +3594,7 @@ void FecRingDevice::fecScanRingNoBroadcast ( )
  * \warning this method need the order of the CCU
  */
 tscType16 FecRingDevice::fecRingReconfigure ( ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Ring closed
   tscType16 fecSR0 = getFecRingSR0() ;
@@ -3637,7 +3637,7 @@ tscType16 FecRingDevice::fecRingReconfigure ( )
  * \warning this method apply bindly the redundancy given
  */
 tscType16 FecRingDevice::fecRingReconfigure ( TkRingDescription &tkRing ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   unsigned long msStart;
   unsigned long msCurrent;
@@ -3897,7 +3897,7 @@ tscType16 FecRingDevice::fecRingReconfigure ( TkRingDescription &tkRing )
  */   
 bool FecRingDevice::getCcuType ( keyType index,
                                  tscType32 *CRE ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // read the register and write the new one with the correct value 
   tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] = { 
@@ -3946,7 +3946,7 @@ bool FecRingDevice::getCcuType ( keyType index,
  * \exception FecExceptionHandler
  */   
  bool FecRingDevice::getCcuType ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType32 CRE = 0 ;
   bool isCcu25 = getCcuType (index, &CRE) ;
@@ -3964,7 +3964,7 @@ bool FecRingDevice::getCcuType ( keyType index,
 void FecRingDevice::setCcuRegister ( keyType index, 
                                      tscType8 ccuRegister, 
                                      tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -4057,7 +4057,7 @@ void FecRingDevice::setCcuRegister ( keyType index,
  */   
 tscType32 FecRingDevice::getCcuRegister ( keyType index, 
                                           tscType8 ccuRegister ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -4191,7 +4191,7 @@ tscType32 FecRingDevice::getCcuRegister ( keyType index,
 void FecRingDevice::setCcuRegister ( keyType index, 
                                      tscType8 ccuRegister, 
                                      tscType8 value,
-                                     logicalOperationType op ) throw (FecExceptionHandler) {
+                                     logicalOperationType op ) noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -4260,7 +4260,7 @@ void FecRingDevice::setCcuRegister ( keyType index,
  * \param value - value to be written
  */
 void FecRingDevice::setCcuCRA ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   setCcuRegister( index, CMD_CCUWRITECRA, value ) ;
 }
@@ -4275,7 +4275,7 @@ void FecRingDevice::setCcuCRA ( keyType index, tscType8 value )
  * \param value - value to be written
  */
 void FecRingDevice::setCcuCRB ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setCcuRegister( index, CMD_CCUWRITECRB, value ) ;
 }
@@ -4286,7 +4286,7 @@ void FecRingDevice::setCcuCRB ( keyType index, tscType8 value )
  * \param op - operation to be done (CMD_OR, CMD_AND, CMD_XOR, CMD_EQUAL)
  */
 void FecRingDevice::setCcuCRB ( keyType index, tscType8 value, logicalOperationType op )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setCcuRegister( index, CMD_CCUWRITECRB, value, op ) ;
 }
@@ -4301,7 +4301,7 @@ void FecRingDevice::setCcuCRB ( keyType index, tscType8 value, logicalOperationT
  * </ul>
  */
 void FecRingDevice::setCcuCRC ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   reconfigurationRunning_ = true ;
 
@@ -4358,7 +4358,7 @@ void FecRingDevice::setCcuCRC ( keyType index, tscType8 value )
  * \param op - operation to be done (CMD_OR, CMD_AND, CMD_XOR, CMD_EQUAL)
  * \exception FecExceptionHandler
  */
-void FecRingDevice::setCcuCRC ( keyType index, tscType8 value, logicalOperationType op ) throw (FecExceptionHandler) {
+void FecRingDevice::setCcuCRC ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
   
   reconfigurationRunning_ = true ;
 
@@ -4418,7 +4418,7 @@ void FecRingDevice::setCcuCRC ( keyType index, tscType8 value, logicalOperationT
  * \warning The broadcast register is set to 0x80 after a reset
  */
 void FecRingDevice::setCcuCRD ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setCcuRegister( index, CMD_CCUWRITECRD, value ) ;
 }
@@ -4430,7 +4430,7 @@ void FecRingDevice::setCcuCRD ( keyType index, tscType8 value )
  * \warning The broadcast register is set to 0x80 after a reset
  */
 void FecRingDevice::setCcuCRD ( keyType index, tscType8 value, logicalOperationType op ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setCcuRegister( index, CMD_CCUWRITECRD, value, op ) ;
 }
@@ -4454,7 +4454,7 @@ void FecRingDevice::setCcuCRE ( keyType index, tscType32 value )
   // tscType8 value0,  // 16 - 23
   // tscType8 value1,  // 8 - 15
   // tscType8 value2)  // 0 - 7   
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -4524,7 +4524,7 @@ void FecRingDevice::setCcuCRE ( keyType index,
                             tscType8 valueMemory,
                             tscType8 valueTrigger,
                             tscType8 valueJTAG)
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   setCcuCRE ( index, 
               (valueI2C & 0xFF) | 
@@ -4545,7 +4545,7 @@ void FecRingDevice::setCcuCRE ( keyType index,
  */
 void FecRingDevice::setCcuCRE ( keyType index, 
                                 tscType24 value,
-                                logicalOperationType op ) throw (FecExceptionHandler) {
+                                logicalOperationType op ) noexcept(false) {
 
   // read the register and write the new one with the correct value 
   tscType24 CR = getCcuCRE ( index ) ;
@@ -4570,7 +4570,7 @@ void FecRingDevice::setCcuCRE ( keyType index,
  * \return value read
  */   
 tscType8 FecRingDevice::getCcuCRA ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
  
   return ( getCcuRegister( index, CMD_CCUREADCRA )) ;
 }
@@ -4580,7 +4580,7 @@ tscType8 FecRingDevice::getCcuCRA ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuCRB ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADCRB )) ;
 }
@@ -4590,7 +4590,7 @@ tscType8 FecRingDevice::getCcuCRB ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuCRC ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADCRC )) ;
 }
@@ -4600,7 +4600,7 @@ tscType8 FecRingDevice::getCcuCRC ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuCRD ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADCRD )) ;
 }
@@ -4614,7 +4614,7 @@ tscType8 FecRingDevice::getCcuCRD ( keyType index )
  * </ul>
  */
 tscType24 FecRingDevice::getCcuCRE ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   tscType32 CR = getCcuRegister( index, CMD_CCUREADCRE ) ;
 
@@ -4626,7 +4626,7 @@ tscType24 FecRingDevice::getCcuCRE ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuSRA ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRA )) ;
 }
@@ -4636,7 +4636,7 @@ tscType8 FecRingDevice::getCcuSRA ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuSRB ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRB )) ;
 }
@@ -4646,7 +4646,7 @@ tscType8 FecRingDevice::getCcuSRB ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuSRC ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRC )) ;
 }
@@ -4656,7 +4656,7 @@ tscType8 FecRingDevice::getCcuSRC ( keyType index )
  * \return value read
  */
 tscType8 FecRingDevice::getCcuSRD ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRD )) ;
 }
@@ -4666,7 +4666,7 @@ tscType8 FecRingDevice::getCcuSRD ( keyType index )
  * \return value read
  */
 tscType24 FecRingDevice::getCcuSRE ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRE )) ;
 }
@@ -4676,7 +4676,7 @@ tscType24 FecRingDevice::getCcuSRE ( keyType index )
  * \return value read
  */
 tscType16 FecRingDevice::getCcuSRF ( keyType index ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRF )) ;
 }
@@ -4690,7 +4690,7 @@ tscType16 FecRingDevice::getCcuSRF ( keyType index )
  * </ul>
  */
 tscType8 FecRingDevice::getCcuSRG ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRG )) ;
 }
@@ -4704,7 +4704,7 @@ tscType8 FecRingDevice::getCcuSRG ( keyType index )
  * </ul>
  */
 tscType8 FecRingDevice::getCcuSRH ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getCcuRegister( index, CMD_CCUREADSRH )) ;
 }
@@ -4716,7 +4716,7 @@ tscType8 FecRingDevice::getCcuSRH ( keyType index )
  * \return a list of keyType
  */
 std::list<keyType> *FecRingDevice::getCcuList ( bool noBroadcast, bool scan) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   //#ifndef SCANCCUATSTARTING
   // If the scan order was not done in the FecRingDevice constructor => do it
@@ -4758,7 +4758,7 @@ std::list<keyType> *FecRingDevice::getCcuList ( bool noBroadcast, bool scan)
  * \warning For the CCU 25, all the channels can enable, for the old CCU only the i2c channel and pia channel can be enable (pia channel are not yet developpeed for the PIA)
  */
 void FecRingDevice::setChannelEnable ( keyType index, bool enable ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -4977,7 +4977,7 @@ void FecRingDevice::setChannelEnable ( keyType index, bool enable )
 void FecRingDevice::setCcuAlarmsEnable ( keyType index, 
                                          bool enable1, bool enable2, 
                                          bool enable3, bool enable4 ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -5010,7 +5010,7 @@ void FecRingDevice::setCcuAlarmsEnable ( keyType index,
  */
 void FecRingDevice::waitForAnyCcuAlarms ( keyType index, 
                                           tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -5146,7 +5146,7 @@ void FecRingDevice::waitForAnyCcuAlarms ( keyType index,
  * \warning When a warning is emitted then the transaction number must be zero
  */
 void FecRingDevice::waitForAnyCcuAlarms ( tscType8 frame[DD_USER_MAX_MSG_LENGTH*4] ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
     // Build the frame in 32 bits
     tscType32 c[DD_USER_MAX_MSG_LENGTH], realSize32 = 0, realSize = 0 ;
@@ -5644,7 +5644,7 @@ FecRingRegisters FecRingDevice::getFecRingRegisters ( keyType index ) {
 void FecRingDevice::setChannelRegister ( keyType index, 
                                          tscType8 channelRegister, 
                                          tscType8 value )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -5696,7 +5696,7 @@ void FecRingDevice::setChannelRegister ( keyType index,
                                          tscType8 channelRegister, 
                                          tscType8 value,
                                          logicalOperationType op )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   // Check the index
   basicCheckError (index) ;
@@ -5760,7 +5760,7 @@ void FecRingDevice::setChannelRegister ( keyType index,
  */   
 tscType8 FecRingDevice::getChannelRegister ( keyType index,
 					     tscType8 channelRegister ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   // Check the index
   basicCheckError (index); 
@@ -5830,7 +5830,7 @@ tscType8 FecRingDevice::getChannelRegister ( keyType index,
  * \warning for the old CCU, the software is not developped (if you need it, please contact fec-support@ires.in2p3.fr
  */
 void FecRingDevice::setInitPiaChannel ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -5867,7 +5867,7 @@ void FecRingDevice::setInitPiaChannel ( keyType index )
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value ) noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -5881,7 +5881,7 @@ void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value ) throw ( F
  * \param value - value to be written
  * \param op - operation to be done (CMD_OR, CMD_AND, CMD_XOR, CMD_EQUAL)
  */
-void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) throw ( FecExceptionHandler ) {
+void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value, logicalOperationType op ) noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -5894,7 +5894,7 @@ void FecRingDevice::setPiaChannelGCR ( keyType index, tscType8 value, logicalOpe
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType8 FecRingDevice::getPiaChannelGCR ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecRingDevice::getPiaChannelGCR ( keyType index ) noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELPIAREADGCR)) ;
 }
@@ -5903,7 +5903,7 @@ tscType8 FecRingDevice::getPiaChannelGCR ( keyType index ) throw ( FecExceptionH
  * \param index - key of the corresponding channel
  * \return value read
  */ 
-tscType8 FecRingDevice::getPiaChannelStatus ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecRingDevice::getPiaChannelStatus ( keyType index ) noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELPIAREADSTATUS)) ;
 }
@@ -5916,7 +5916,7 @@ tscType8 FecRingDevice::getPiaChannelStatus ( keyType index ) throw ( FecExcepti
  * <li>TSCFEC_FECPARAMETERNOTMANAGED
  * </ul>
  */
-void FecRingDevice::setPiaChannelDDR ( keyType index, tscType8 value ) throw (FecExceptionHandler) {
+void FecRingDevice::setPiaChannelDDR ( keyType index, tscType8 value ) noexcept(false) {
 
   // The basic check is done in the setChannelRegister
   setChannelRegister ( index, CMD_CHANNELPIAWRITEDDR, value) ;
@@ -5947,7 +5947,7 @@ void FecRingDevice::setPiaChannelDDR ( keyType index, tscType8 value ) throw (Fe
 void FecRingDevice::setPiaChannelDDR ( keyType index, 
                                        tscType8 value, 
                                        logicalOperationType op ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
  
   // The basic check is done in the setChannelRegister
   setChannelRegister ( index, CMD_CHANNELPIAWRITEDDR, value, op) ;
@@ -5969,7 +5969,7 @@ void FecRingDevice::setPiaChannelDDR ( keyType index,
  * \param index - key of the corresponding channel
  * \return value read
  */ 
-tscType8 FecRingDevice::getPiaChannelDDR ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecRingDevice::getPiaChannelDDR ( keyType index ) noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELPIAREADDDR)) ;
 }
@@ -5978,7 +5978,7 @@ tscType8 FecRingDevice::getPiaChannelDDR ( keyType index ) throw ( FecExceptionH
  * \param index - key of the corresponding channel
  * \param value - value to be written
  */
-void FecRingDevice::setPiaChannelDataReg ( keyType index, tscType8 value ) throw ( FecExceptionHandler ) {
+void FecRingDevice::setPiaChannelDataReg ( keyType index, tscType8 value ) noexcept(false) {
 
   // The basic check is done in the setChannelRegister
   setChannelRegister ( index, CMD_CHANNELPIAWRITEDATAREG, value) ;
@@ -5995,7 +5995,7 @@ void FecRingDevice::setPiaChannelDataReg ( keyType index, tscType8 value ) throw
  */
 void FecRingDevice::setPiaChannelDataReg ( keyType index, 
                                        tscType8 value, 
-                                       logicalOperationType op) throw (FecExceptionHandler) {
+                                       logicalOperationType op) noexcept(false) {
 
   // The basic check is done in the setChannelRegister
   setChannelRegister ( index, CMD_CHANNELPIAWRITEDATAREG, value, op) ;
@@ -6014,7 +6014,7 @@ void FecRingDevice::setPiaChannelDataReg ( keyType index,
  * \param index - key of the corresponding channel
  * \return value read
  */   
-tscType8 FecRingDevice::getPiaChannelDataReg ( keyType index ) throw ( FecExceptionHandler ) {
+tscType8 FecRingDevice::getPiaChannelDataReg ( keyType index ) noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELPIAREADDATAREG)) ;
 }
@@ -6024,7 +6024,7 @@ tscType8 FecRingDevice::getPiaChannelDataReg ( keyType index ) throw ( FecExcept
  * \exception FecExceptionHandler
  */
 void FecRingDevice::piaChannelReset( keyType index) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6049,7 +6049,7 @@ void FecRingDevice::piaChannelReset( keyType index)
  * \warning Alarms works with CCU 25 and not old CCU
  * \warning The source must be CLEARED before reenable it.
  */
-void FecRingDevice::setPiaInterruptEnable ( keyType index ) throw (FecExceptionHandler) {
+void FecRingDevice::setPiaInterruptEnable ( keyType index ) noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -6123,7 +6123,7 @@ void FecRingDevice::setPiaInterruptEnable ( keyType index ) throw (FecExceptionH
  * </ul>
  * \warning Alarms works with CCU 25 and not old CCU
  */
-void FecRingDevice::setPiaClearInterrupts ( keyType index ) throw (FecExceptionHandler) {
+void FecRingDevice::setPiaClearInterrupts ( keyType index ) noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -6176,7 +6176,7 @@ void FecRingDevice::setPiaClearInterrupts ( keyType index ) throw (FecExceptionH
  * \param forceAck - the force ack bit
  */
 void FecRingDevice::setInitI2cChannelCRA ( keyType index, bool forceAck, tscType16 i2cSpeed ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the access
   basicCheckError (index);
@@ -6237,7 +6237,7 @@ void FecRingDevice::setInitI2cChannelCRA ( keyType index, bool forceAck, tscType
  * </ul>
  */
 void FecRingDevice::seti2cChannelCRA ( keyType index, tscType8 value) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -6275,7 +6275,7 @@ void FecRingDevice::seti2cChannelCRA ( keyType index, tscType8 value)
  * </ul>
  */
 void FecRingDevice::seti2cChannelCRA ( keyType index, tscType8 value,logicalOperationType op) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -6310,7 +6310,7 @@ void FecRingDevice::seti2cChannelCRA ( keyType index, tscType8 value,logicalOper
  * \return value read
  */ 
 tscType8 FecRingDevice::geti2cChannelCRA ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELI2CREADCRA)) ;
 }
@@ -6320,7 +6320,7 @@ tscType8 FecRingDevice::geti2cChannelCRA ( keyType index )
  * \return value read
  */ 
 tscType8 FecRingDevice::geti2cChannelSRA ( keyType index )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELI2CREADSRA)) ;
 }
@@ -6330,7 +6330,7 @@ tscType8 FecRingDevice::geti2cChannelSRA ( keyType index )
  * \return value read
  */ 
 tscType8 FecRingDevice::geti2cChannelSRB ( keyType index )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELI2CREADSRB) ) ;
 }
@@ -6340,7 +6340,7 @@ tscType8 FecRingDevice::geti2cChannelSRB ( keyType index )
  * \return value read
  */ 
 tscType8 FecRingDevice::geti2cChannelSRC ( keyType index )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELI2CREADSRC)) ;
 }
@@ -6350,7 +6350,7 @@ tscType8 FecRingDevice::geti2cChannelSRC ( keyType index )
  * \return value read
  */ 
 tscType8 FecRingDevice::geti2cChannelSRD ( keyType index )   
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELI2CREADSRD)) ;
 }
@@ -6364,7 +6364,7 @@ tscType8 FecRingDevice::geti2cChannelSRD ( keyType index )
  * </ul>
  */
 void FecRingDevice::i2cChannelReset ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Same command than PIA
   piaChannelReset (index) ;
@@ -6374,7 +6374,7 @@ void FecRingDevice::i2cChannelReset ( keyType index )
  * \param index - key of the corresponding channel
  */
 void FecRingDevice::i2cChannelReset ( keyType index, bool reconf )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -6403,7 +6403,7 @@ void FecRingDevice::i2cChannelReset ( keyType index, bool reconf )
  * \warning this method is only available for CCU 25
  */
 bool FecRingDevice::isChannelEnabled ( keyType index )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6492,7 +6492,7 @@ bool FecRingDevice::isChannelEnabled ( keyType index )
  * \warning this method is only available for CCU 25
  */
 bool FecRingDevice::isChannelBusy ( keyType index )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   //char msg[80] ;
   //decodeKey(msg,index) ;
@@ -6559,7 +6559,7 @@ bool FecRingDevice::isChannelBusy ( keyType index )
  * \param enable - boolean for enable or disable the force ack bit
  */
 void FecRingDevice::setChannelForceAck ( keyType index, bool enable )   
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6603,7 +6603,7 @@ void FecRingDevice::setChannelForceAck ( keyType index, bool enable )
  * \exception FecExceptionHandler
  */
 void FecRingDevice::writei2cDevice ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6653,7 +6653,7 @@ void FecRingDevice::writei2cDevice ( keyType index, tscType8 value )
 void FecRingDevice::writei2cDevice ( keyType index, 
                                      tscType8 offset, 
                                      tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6703,7 +6703,7 @@ void FecRingDevice::writei2cDevice ( keyType index,
 void FecRingDevice::writei2cRalDevice ( keyType index, 
                                         tscType8 offset, 
                                         tscType8 value )   
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Same as write extended mode
   writei2cDevice (index, offset, value) ;
@@ -6720,7 +6720,7 @@ void FecRingDevice::writei2cDeviceOffset ( keyType index,
                                            tscType8 offset, 
                                            tscType8 decal, 
                                            tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6768,7 +6768,7 @@ void FecRingDevice::writei2cDeviceOffset ( keyType index,
  */
 void FecRingDevice::writei2cDeviceOffset ( keyType index, 
                                            tscType8 offset, tscType8 value )   
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   writei2cDeviceOffset (index, offset, 0) ;
 }
@@ -6779,7 +6779,7 @@ void FecRingDevice::writei2cDeviceOffset ( keyType index,
  * \exception FecExceptionHandler
  */
 tscType8 FecRingDevice::readi2cDevice ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   // Check the index
   basicCheckError (index) ;
@@ -6815,7 +6815,7 @@ tscType8 FecRingDevice::readi2cDevice ( keyType index )
  */
 tscType8 FecRingDevice::readi2cDevice ( keyType index, 
                                         tscType8 addressMSB ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the access
   basicCheckError (index) ;
@@ -6853,7 +6853,7 @@ tscType8 FecRingDevice::readi2cDevice ( keyType index,
  */
 tscType8 FecRingDevice::readi2cRalDevice ( keyType index, 
                                            tscType8 offset ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the access
   basicCheckError (index) ;
@@ -6892,7 +6892,7 @@ tscType8 FecRingDevice::readi2cRalDevice ( keyType index,
 tscType8 FecRingDevice::readi2cDeviceOffset ( keyType index, 
                                               tscType8 offset, 
                                               tscType8 decal ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -6926,7 +6926,7 @@ tscType8 FecRingDevice::readi2cDeviceOffset ( keyType index,
  * \return the value read in the register
  */
 tscType8 FecRingDevice::readi2cDeviceOffset ( keyType index, tscType8 offset ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return (readi2cDeviceOffset (index, offset, 0)) ;
 }
@@ -6952,7 +6952,7 @@ std::list<keyType> *FecRingDevice::scanRingForI2CDevice ( keyType *deviceValues,
 							  tscType32 sizeDevices,
 							  bool noBroadcast,
 							  bool display ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // --------------------------------------------------------------------------------------
   // Check the FEC ring SR0
@@ -7173,7 +7173,7 @@ std::list<keyType> *FecRingDevice::scanRingForI2CDevice ( keyType *deviceValues,
  * \warning this method is dedicated to the CCU 25 but can work for old CCUs
  */
 std::list<keyType> *FecRingDevice::scanRingForI2CDevice ( bool noBroadcast, bool display ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGGETREGISTERS
   bool readRegisters = readRegistersError_ ;
@@ -7282,7 +7282,7 @@ std::list<keyType> *FecRingDevice::scanRingForI2CDevice ( bool noBroadcast, bool
  * \param index - key of the corresponding channel
  */
 void FecRingDevice::memoryChannelReset( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   piaChannelReset (index) ;
 }
@@ -7293,7 +7293,7 @@ void FecRingDevice::memoryChannelReset( keyType index )
  * \param value - value to be written
  */
 void FecRingDevice::setMemoryChannelCRA ( keyType index, tscType8 value )  
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -7308,7 +7308,7 @@ void FecRingDevice::setMemoryChannelCRA ( keyType index, tscType8 value )
  */
 void FecRingDevice::setMemoryChannelCRA ( keyType index, tscType8 value,
                                           logicalOperationType op ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -7326,7 +7326,7 @@ void FecRingDevice::setMemoryChannelCRA ( keyType index, tscType8 value,
  void FecRingDevice::setMemoryChannelWinReg ( keyType index, 
                                               tscType8 memoryRegister, 
                                               tscType16 value ) 
-   throw (FecExceptionHandler) {
+   noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -7366,7 +7366,7 @@ void FecRingDevice::setMemoryChannelCRA ( keyType index, tscType8 value,
  * \param value - value to be written
  */
 void FecRingDevice::setMemoryChannelWin1LReg ( keyType index, tscType16 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // The basic check is done in setMemoryChannelWinReg
   setMemoryChannelWinReg ( index, CMD_CHANNELMEMWRITEWIN1LREG, value ) ;
@@ -7377,7 +7377,7 @@ void FecRingDevice::setMemoryChannelWin1LReg ( keyType index, tscType16 value )
  * \param value - value to be written
  */
 void FecRingDevice::setMemoryChannelWin1HReg ( keyType index, tscType16 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // The basic check is done in setMemoryChannelWinReg
   setMemoryChannelWinReg ( index, CMD_CHANNELMEMWRITEWIN1HREG, value ) ;
@@ -7388,7 +7388,7 @@ void FecRingDevice::setMemoryChannelWin1HReg ( keyType index, tscType16 value )
  * \param value - value to be written
  */
 void FecRingDevice::setMemoryChannelWin2LReg ( keyType index, tscType16 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   // The basic check is done in setMemoryChannelWinReg
   setMemoryChannelWinReg ( index, CMD_CHANNELMEMWRITEWIN2LREG, value ) ;
 }
@@ -7398,7 +7398,7 @@ void FecRingDevice::setMemoryChannelWin2LReg ( keyType index, tscType16 value )
  * \param value - value to be written
  */
 void FecRingDevice::setMemoryChannelWin2HReg ( keyType index, tscType16 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // The basic check is done in setMemoryChannelWinReg
   setMemoryChannelWinReg ( index, CMD_CHANNELMEMWRITEWIN2HREG, value ) ;
@@ -7410,7 +7410,7 @@ void FecRingDevice::setMemoryChannelWin2HReg ( keyType index, tscType16 value )
  * \param op - logical operation (and / or / xor)
  */
 void FecRingDevice::setMemoryChannelMaskReg ( keyType index, tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -7424,7 +7424,7 @@ void FecRingDevice::setMemoryChannelMaskReg ( keyType index, tscType8 value )
  * \return value read
  */   
 tscType8 FecRingDevice::getMemoryChannelCRA ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELMEMREADCRA)) ;
 }
@@ -7434,7 +7434,7 @@ tscType8 FecRingDevice::getMemoryChannelCRA ( keyType index )
  * \return value read
  */   
 tscType8 FecRingDevice::getMemoryChannelMaskReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELMEMREADMASKREG)) ;
 }
@@ -7447,7 +7447,7 @@ tscType8 FecRingDevice::getMemoryChannelMaskReg ( keyType index )
  */
 tscType16 FecRingDevice::getMemoryChannelWinReg ( keyType index,
                                                   tscType8 memoryRegister ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index); 
@@ -7514,7 +7514,7 @@ tscType16 FecRingDevice::getMemoryChannelWinReg ( keyType index,
  * \return value read
  */   
 tscType16 FecRingDevice::getMemoryChannelWin1LReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getMemoryChannelWinReg ( index, CMD_CHANNELMEMREADWIN1LREG)) ;
 }
@@ -7524,7 +7524,7 @@ tscType16 FecRingDevice::getMemoryChannelWin1LReg ( keyType index )
  * \return value read
  */   
 tscType16 FecRingDevice::getMemoryChannelWin1HReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getMemoryChannelWinReg ( index, CMD_CHANNELMEMREADWIN1HREG)) ;
 }
@@ -7534,7 +7534,7 @@ tscType16 FecRingDevice::getMemoryChannelWin1HReg ( keyType index )
  * \return value read
  */   
 tscType16 FecRingDevice::getMemoryChannelWin2LReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getMemoryChannelWinReg ( index, CMD_CHANNELMEMREADWIN2LREG)) ;
 }
@@ -7544,7 +7544,7 @@ tscType16 FecRingDevice::getMemoryChannelWin2LReg ( keyType index )
  * \return value read
  */   
 tscType16 FecRingDevice::getMemoryChannelWin2HReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getMemoryChannelWinReg ( index, CMD_CHANNELMEMREADWIN2HREG)) ;
 }
@@ -7554,7 +7554,7 @@ tscType16 FecRingDevice::getMemoryChannelWin2HReg ( keyType index )
  * \return value read
  */   
 tscType8 FecRingDevice::getMemoryChanneMaskReg ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELMEMREADMASKREG)) ;
 }
@@ -7564,7 +7564,7 @@ tscType8 FecRingDevice::getMemoryChanneMaskReg ( keyType index )
  * \return value read
  */   
 tscType8 FecRingDevice::getMemoryChannelStatus ( keyType index ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   return ( getChannelRegister ( index, CMD_CHANNELMEMREADSTATUSREG)) ;
 }
@@ -7579,7 +7579,7 @@ tscType8 FecRingDevice::getMemoryChannelStatus ( keyType index )
 void FecRingDevice::writeIntoMemory ( keyType index, 
                                       tscType8 AH, tscType8 AL, 
                                       tscType8 value ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -7629,7 +7629,7 @@ void FecRingDevice::writeIntoMemory ( keyType index,
                                       tscType8 AH, tscType8 AL, 
                                       tscType8 *values,
                                       unsigned long size ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 
 
@@ -7741,7 +7741,7 @@ void FecRingDevice::writeIntoMemory2BytesLength ( keyType index,
                                                   tscType8 AH, tscType8 AL, 
                                                   tscType8 *values,
                                                   unsigned long size ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // 127 means FEC_UPPERLIMIT_LENGTH
   // 119 means FEC_UPPERLIMIT_LENGTH - 5 - 3
@@ -7841,7 +7841,7 @@ void FecRingDevice::writeIntoMemory ( keyType index,
                                       tscType8 AH, tscType8 AL, 
                                       logicalOperationType op, 
                                       tscType8 mask ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Set the mask register with the value
   setMemoryChannelMaskReg ( index, mask ) ;
@@ -7861,7 +7861,7 @@ void FecRingDevice::writeIntoMemory ( keyType index,
 void FecRingDevice::writeIntoMemory ( keyType index, 
                                       tscType8 AH, tscType8 AL, 
                                       logicalOperationType op) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -7915,7 +7915,7 @@ void FecRingDevice::writeIntoMemory ( keyType index,
  */
 tscType8 FecRingDevice::readFromMemory ( keyType index, 
                                          tscType8 AH, tscType8 AL ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -7968,7 +7968,7 @@ void FecRingDevice::readFromMemory ( keyType index,
                                      tscType8 AH, tscType8 AL,
                                      unsigned long size,
                                      tscType8 *values ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Check the index
   basicCheckError (index) ;
@@ -8138,7 +8138,7 @@ tscType8 FecRingDevice::getTriggerChannelSRA ( keyType index ) {
 /**
  */
 tscType32 FecRingDevice::getTriggerChannelCounter ( keyType index, 
-                                                    int cnt ) throw (FecExceptionHandler) {
+                                                    int cnt ) noexcept(false) {
 
   // Check the access
   basicCheckError (index) ;
@@ -8199,7 +8199,7 @@ tscType32 FecRingDevice::getTriggerChannelCounter ( keyType index,
  * </ul>
  */
 void FecRingDevice::setCR0Receive ( bool enable ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // Enable the receive of clock for the optical link of the FEC
   tscType16 fecCR0Value = getFecRingCR0() ;
@@ -8213,7 +8213,7 @@ void FecRingDevice::setCR0Receive ( bool enable )
 /** initialise the TTCRx
  * \exception FecExceptionHandler
  */
-void FecRingDevice::initTTCRx ( ) throw (FecExceptionHandler) {
+void FecRingDevice::initTTCRx ( ) noexcept(false) {
 
   setFecRingCR0 ( FEC_CR0_RESETTCRX ) ;
   setFecRingCR0 ( FEC_CR0_ENABLEFEC ) ;
@@ -8233,7 +8233,7 @@ void FecRingDevice::initTTCRx ( ) throw (FecExceptionHandler) {
  * \param value - values to be written (array)
  * \param count - number of values
  */
-void FecRingDevice::setFifoReceive ( tscType32 *value, int count) throw (FecExceptionHandler) {
+void FecRingDevice::setFifoReceive ( tscType32 *value, int count) noexcept(false) {
   int i;
   for(i=0;i<count;i++) setFifoReceive(value[i]) ;
 }
@@ -8243,7 +8243,7 @@ void FecRingDevice::setFifoReceive ( tscType32 *value, int count) throw (FecExce
  * \param count - number of value to be read
  * \return pointer to the array of value ( = value )
  */
-tscType32* FecRingDevice::getFifoReceive (  tscType32 *value, int count ) throw (FecExceptionHandler) {
+tscType32* FecRingDevice::getFifoReceive (  tscType32 *value, int count ) noexcept(false) {
   int i;
   for(i=0;i<count;i++) value[i] = getFifoReceive() ;
   return value ;
@@ -8253,7 +8253,7 @@ tscType32* FecRingDevice::getFifoReceive (  tscType32 *value, int count ) throw
  * \param value - values to be written (array)
  * \param count - number of values
  */
-void FecRingDevice::setFifoReturn ( tscType8 *value, int count ) throw (FecExceptionHandler) {
+void FecRingDevice::setFifoReturn ( tscType8 *value, int count ) noexcept(false) {
   int i;
   for(i=0;i<count;i++) setFifoReturn(value[i]) ;
 }
@@ -8263,7 +8263,7 @@ void FecRingDevice::setFifoReturn ( tscType8 *value, int count ) throw (FecExcep
  * \param count - number of value to be read
  * \return pointer to the array of value ( = value )
  */
-tscType8* FecRingDevice::getFifoReturn (  tscType8 *value,int count ) throw (FecExceptionHandler) {
+tscType8* FecRingDevice::getFifoReturn (  tscType8 *value,int count ) noexcept(false) {
   int i;
   for(i=0;i<count;i++) value[i]  = getFifoReturn() ;
   return value ;
@@ -8273,7 +8273,7 @@ tscType8* FecRingDevice::getFifoReturn (  tscType8 *value,int count ) throw (Fec
  * \param value - values to be written (array)
  * \param count - number of values
  */
-void FecRingDevice::setFifoTransmit ( tscType32 *value, int count ) throw (FecExceptionHandler) {
+void FecRingDevice::setFifoTransmit ( tscType32 *value, int count ) noexcept(false) {
   int i;
   for(i=0;i<count;i++) setFifoTransmit(value[i]) ;
 }
@@ -8283,7 +8283,7 @@ void FecRingDevice::setFifoTransmit ( tscType32 *value, int count ) throw (FecEx
  * \param count - number of value to be read
  * \return pointer to the array of value ( = value )
  */
-tscType32* FecRingDevice::getFifoTransmit (  tscType32 *value,int count ) throw (FecExceptionHandler) {
+tscType32* FecRingDevice::getFifoTransmit (  tscType32 *value,int count ) noexcept(false) {
   int i;
   for(i=0;i<count;i++) value[i]  = getFifoTransmit() ;
   return value ;
@@ -8484,7 +8484,7 @@ unsigned int FecRingDevice::buildPIAFrame ( accessDeviceType b, tscType32 *toBeT
  * \warning All the accessDeviceType must be initialise with dAck = 0 and sent = false
  * \warning if this method encounters a register problem, the rest of the registers will be sent and the same exception (pointer point of view) is set in all the request to that device. So do not delete directly all the exception from the list returned
  */
-void FecRingDevice::setBlockDevices ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) throw (FecExceptionHandler) {
+void FecRingDevice::setBlockDevices ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge ) noexcept(false) {
 
   if (firmwareVersion_ >= MINFIRMWAREVERSION) {
     setBlockDevicesBltMode(vAccessDevices, forceAcknowledge) ;
@@ -9421,7 +9421,7 @@ void FecRingDevice::setBlockDevices ( std::list<accessDeviceType> &vAccessDevice
  */
 void FecRingDevice::getBlockFrames ( bool forceChannelAck, accessTransactionFrameMap &tnumSent,
 				     Sgi::hash_map<keyType, int> & busy, unsigned int & cptRead )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   //#define DEBUGMSGERROR_DISPLAYMULTIPLEFRAMES 
   //#define DEBUGMSGERRORMF
@@ -9960,7 +9960,7 @@ void FecRingDevice::getBlockFrames ( bool forceChannelAck, accessTransactionFram
  * \warning if this method encounters a register problem, the rest of the registers will be sent and the same exception (pointer point of view) is set in all the request to that device. So do not delete directly all the exception from the list returned
  */
 void FecRingDevice::setBlockDevicesBltMode ( std::list<accessDeviceType> &vAccessDevices, bool forceAcknowledge )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   //#define DEBUGMSGERROR_DISPLAYMULTIPLEFRAMES 
   //#define DEBUGMSGERRORMF
diff --git a/FecSoftwareV3_0/generic/src/common/FecUsbRingDevice.cc b/FecSoftwareV3_0/generic/src/common/FecUsbRingDevice.cc
index 90a657d..56d6b63 100755
--- a/FecSoftwareV3_0/generic/src/common/FecUsbRingDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecUsbRingDevice.cc
@@ -62,7 +62,7 @@ const unsigned int FecUsbRingDevice::minUsbFecRing = 0 ;
  * \param ring - ring slot
  * \param init - initialise the FEC (with reset at the starting)
  */
-FecUsbRingDevice::FecUsbRingDevice (std::string serial, tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity  ) throw ( FecExceptionHandler ) :
+FecUsbRingDevice::FecUsbRingDevice (std::string serial, tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity  ) noexcept(false) :
   FecRingDevice ( fecSlot, ringSlot, FECUSB ) {
 
   device_ = fec_usb_open((char*)serial.c_str()) ; /* do not check for serial number */ 
@@ -90,7 +90,7 @@ FecUsbRingDevice::FecUsbRingDevice (std::string serial, tscType8 fecSlot, tscTyp
 
 /** Close the USB device
  */
-FecUsbRingDevice::~FecUsbRingDevice ( ) throw ( FecExceptionHandler ) {
+FecUsbRingDevice::~FecUsbRingDevice ( ) noexcept(false) {
 
 //   if (device_ != -1) { 
 
@@ -121,7 +121,7 @@ FecUsbRingDevice::~FecUsbRingDevice ( ) throw ( FecExceptionHandler ) {
  * \param ctrl0Value - value of the CR0
  * \param force - if force is set then the value is applied blindly. if force is not set then the invert clock polarity is managed following the parameter in the class.
  */
-void FecUsbRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) noexcept(false) {
 
   if (!force) {
     if (invertClockPolarity_) ctrl0Value |= FEC_CR0_POLARITY ;
@@ -149,7 +149,7 @@ void FecUsbRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw
 /** Reads a value from FEC ctrl0 
  *\return the value read
  */
-tscType16 FecUsbRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
+tscType16 FecUsbRingDevice::getFecRingCR0( ) noexcept(false) {
   tscType16 ctrl0Value = 0 ;
   
   FECUSB_TYPE_ERROR error = fec_usb_get_ctrl0(device_, &ctrl0Value);
@@ -173,7 +173,7 @@ tscType16 FecUsbRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
 /** Write the value given as parameter in FEC control 1 register 
  * \param value to be written
  */
-void FecUsbRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) {
   
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << ctrl1Value << " in CR1" << std::endl ;
@@ -194,7 +194,7 @@ void FecUsbRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptio
 
 
 
-tscType16 FecUsbRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecUsbRingDevice::getFecRingCR1( ) noexcept(false) {
 
   tscType16 ctrl1Value = 0;
   
@@ -218,7 +218,7 @@ tscType16 FecUsbRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
 /** Reads a value from FEC SR0
  * \return the value of the FEC SR0
  */
-tscType32 FecUsbRingDevice::getFecRingSR0( ) throw ( FecExceptionHandler ) {
+tscType32 FecUsbRingDevice::getFecRingSR0( ) noexcept(false) {
 
   tscType32 sr0Value = 0 ; 
   FECUSB_TYPE_ERROR error = fec_usb_get_sr0(device_, &sr0Value);
@@ -241,7 +241,7 @@ tscType32 FecUsbRingDevice::getFecRingSR0( ) throw ( FecExceptionHandler ) {
 
 
 
-tscType16 FecUsbRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecUsbRingDevice::getFecRingSR1( ) noexcept(false) {
 
   tscType16 sr1Value = 0 ;
   
@@ -265,7 +265,7 @@ tscType16 FecUsbRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
 /** \brief Get the FEC version register the FEC
  * \return value read
  */
-tscType16 FecUsbRingDevice::getFecFirmwareVersion( )  throw ( FecExceptionHandler ) { 
+tscType16 FecUsbRingDevice::getFecFirmwareVersion( )  noexcept(false) { 
   tscType32 versionValue = 0 ;
   
   FECUSB_TYPE_ERROR error = fec_usb_get_version(device_, &versionValue);
@@ -298,7 +298,7 @@ tscType16 FecUsbRingDevice::getFecFirmwareVersion( )  throw ( FecExceptionHandle
 /** Return a word from the FIFO receive
  * \param return a word from the FIFO receive
  */
-tscType32 FecUsbRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
+tscType32 FecUsbRingDevice::getFifoReceive( ) noexcept(false) {
 
   tscType32 fiforec_value = 0 ;
   
@@ -323,7 +323,7 @@ tscType32 FecUsbRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO receive
  * \param fiforecValue - word to be set
  */
-void FecUsbRingDevice::setFifoReceive( tscType32 fiforecValue ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setFifoReceive( tscType32 fiforecValue ) noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforecValue << " to fifo receive" << std::endl ;
@@ -343,7 +343,7 @@ void FecUsbRingDevice::setFifoReceive( tscType32 fiforecValue ) throw ( FecExcep
 /** Return a word from the FIFO return
  * \param return a word from the FIFO return
  */
-tscType8 FecUsbRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
+tscType8 FecUsbRingDevice::getFifoReturn( ) noexcept(false) {
   
   tscType32 fiforet_value = 0 ;
   
@@ -368,7 +368,7 @@ tscType8 FecUsbRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO return
  * \param fiforet_value - word to be set
  */
-void FecUsbRingDevice::setFifoReturn( tscType8 fiforetValue ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setFifoReturn( tscType8 fiforetValue ) noexcept(false) {
   
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforet_value << " to fifo return" << std::endl ;
@@ -389,7 +389,7 @@ void FecUsbRingDevice::setFifoReturn( tscType8 fiforetValue ) throw ( FecExcepti
 /** Return a word from the FIFO transmit
  * \param return a word from the FIFO transmit
  */
-tscType32 FecUsbRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
+tscType32 FecUsbRingDevice::getFifoTransmit( ) noexcept(false) {
 
   tscType32 fifotra_value = 0 ; 
   
@@ -411,7 +411,7 @@ tscType32 FecUsbRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
 }
 
 
-void FecUsbRingDevice::setFifoTransmit( tscType32 fifotraValue ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setFifoTransmit( tscType32 fifotraValue ) noexcept(false) {
 
 #ifdef FECPCIRINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << hex << fiforet_value << " to fifo transmit" << std::endl ;
@@ -445,7 +445,7 @@ void FecUsbRingDevice::setFifoTransmit( tscType32 fifotraValue ) throw ( FecExce
  * \exception FecExceptionHandler
  * 
  */
-void FecUsbRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::fecHardReset ( ) noexcept(false) {
 
   std::cout << "FecUsbRingDevice::fecHardReset(), rising up bit 13 in FEC CR0..." << std::endl ; 
   std::cout << "FecUsbRingDevice::fecHardReset(), getting original value..." << std::endl ; 
@@ -466,7 +466,7 @@ void FecUsbRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
 
 /** IRQ address, enable and disable the IRQ, nothing for the USB FEC 
  */
-void FecUsbRingDevice::setIRQ ( bool enable, tscType8 level ) throw ( FecExceptionHandler ) {
+void FecUsbRingDevice::setIRQ ( bool enable, tscType8 level ) noexcept(false) {
 
   /* empty function: do nothing , USB is not interrupt driven, no risc of interrupt overflood */
   
@@ -475,7 +475,7 @@ void FecUsbRingDevice::setIRQ ( bool enable, tscType8 level ) throw ( FecExcepti
 /** Write a block of words to the FIFO receive
  */
 void FecUsbRingDevice::setFifoReceive ( tscType32 *value, int count) 
-  throw (FecExceptionHandler) { 
+  noexcept(false) { 
 
   //int i; 
   //for(i=0;i<count;i++) setFifoReceive(value[i]) ; 
@@ -497,7 +497,7 @@ void FecUsbRingDevice::setFifoReceive ( tscType32 *value, int count)
 /** Get block of words from the FIFO receive
  */
 tscType32* FecUsbRingDevice::getFifoReceive ( tscType32 *value, int count ) 
-  throw (FecExceptionHandler) { 
+  noexcept(false) { 
   //int i; 
   //for(i=0;i<count;i++) value[i]  = getFifoReceive() ;
   //return value ; 
@@ -518,7 +518,7 @@ tscType32* FecUsbRingDevice::getFifoReceive ( tscType32 *value, int count )
 /** set a word into the FIFO return
  */
 void FecUsbRingDevice::setFifoReturn ( tscType8 *value, int count ) 
-  throw (FecExceptionHandler) { 
+  noexcept(false) { 
 
   fecusbType32 valueTemp[count] ;
   for(int i=0;i<count;i++) valueTemp[i] = (fecusbType32)value[i] ;
@@ -539,7 +539,7 @@ void FecUsbRingDevice::setFifoReturn ( tscType8 *value, int count )
 /** get a word from the FIFO return
  */
 tscType8* FecUsbRingDevice::getFifoReturn ( tscType8 *value, int count ) 
-  throw (FecExceptionHandler) { 
+  noexcept(false) { 
   //int i; 
   //for(i=0;i<count;i++) value[i]  = getFifoReturn() ;
   //return value ; 
@@ -563,7 +563,7 @@ tscType8* FecUsbRingDevice::getFifoReturn ( tscType8 *value, int count )
 /** set a word into the FIFO Transmit
  */
 void FecUsbRingDevice::setFifoTransmit ( tscType32 *value, int count ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   //int i; 
   //for(i=0;i<count;i++) setFifoTransmit(value[i]) ;
   FECUSB_TYPE_ERROR error = fec_usb_set_block_fifotra(device_,value,count);
@@ -580,7 +580,7 @@ void FecUsbRingDevice::setFifoTransmit ( tscType32 *value, int count )
 /** get a word from the FIFO transmit
  */
 tscType32* FecUsbRingDevice::getFifoTransmit ( tscType32 *value, int count ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   //int i; 
   //for(i=0;i<count;i++) value[i]  = getFifoTransmit() ;
   //return value ; 
diff --git a/FecSoftwareV3_0/generic/src/common/FecUtcaRingDevice.cc b/FecSoftwareV3_0/generic/src/common/FecUtcaRingDevice.cc
index 40b2efb..7eb6af6 100644
--- a/FecSoftwareV3_0/generic/src/common/FecUtcaRingDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecUtcaRingDevice.cc
@@ -58,7 +58,7 @@ uhal::HwInterface *FecUtcaRingDevice::hwBoard=NULL;
  * \param ring - ring slot
  * \param init - initialise the FEC (with reset at the starting)
  */
-FecUtcaRingDevice::FecUtcaRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity ) throw ( FecExceptionHandler ) :
+FecUtcaRingDevice::FecUtcaRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool init, bool invertClockPolarity ) noexcept(false) :
   FecRingDevice ( fecSlot, ringSlot, FECUTCA ) {
   //try{
   //} catch(){
@@ -90,7 +90,7 @@ FecUtcaRingDevice::FecUtcaRingDevice (tscType8 fecSlot, tscType8 ringSlot, bool
 
 /** Close the uHal connection
  */
-FecUtcaRingDevice::~FecUtcaRingDevice ( ) throw ( FecExceptionHandler )
+FecUtcaRingDevice::~FecUtcaRingDevice ( ) noexcept(false)
 {
     //delete hwBoard;
 }
@@ -119,7 +119,7 @@ void FecUtcaRingDevice::releaseUhal (){
  * \param ctrl0Value - value of the CR0
  * \param force - if force is set then the value is applied blindly. if force is not set then the invert clock polarity is managed following the parameter in the class.
  */
-void FecUtcaRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) noexcept(false) {
 
   if (!force) {
     if (invertClockPolarity_) ctrl0Value |= FEC_CR0_POLARITY ;
@@ -145,7 +145,7 @@ void FecUtcaRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw
 /** Reads a value from FEC ctrl0 
  *\return the value read
  */
-tscType16 FecUtcaRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
+tscType16 FecUtcaRingDevice::getFecRingCR0( ) noexcept(false) {
 
   tscType32 ctrl0Value = readRegisterValue('C','0');
 
@@ -167,7 +167,7 @@ tscType16 FecUtcaRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
 /** Write the value given as parameter in FEC control 1 register 
  * \param value to be written
  */
-void FecUtcaRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) {
 
   setControlRegister('1', ctrl1Value);
   /*if (sendCommand(REG_CONTROL1, ctrl1Value, NULL)) {
@@ -187,7 +187,7 @@ void FecUtcaRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExcepti
 /** Reads a value from FEC ctrl1 
  * \return value of the FEC CR1 for that ring
  */
-tscType16 FecUtcaRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecUtcaRingDevice::getFecRingCR1( ) noexcept(false) {
 
   tscType32 ctrl1Value=readRegisterValue('C','1');
 
@@ -209,7 +209,7 @@ tscType16 FecUtcaRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
 /** Reads a value from FEC SR0
  * \return the value of the FEC SR0
  */
-tscType32 FecUtcaRingDevice::getFecRingSR0(unsigned long sleeptime) throw ( FecExceptionHandler ) {
+tscType32 FecUtcaRingDevice::getFecRingSR0(unsigned long sleeptime) noexcept(false) {
 
   tscType32 sr0Value = readRegisterValue('S','0');
   
@@ -230,7 +230,7 @@ tscType32 FecUtcaRingDevice::getFecRingSR0(unsigned long sleeptime) throw ( FecE
 /** Reads a value from FEC SR1
  * \return the value of the FEC SR1
  */
-tscType16 FecUtcaRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecUtcaRingDevice::getFecRingSR1( ) noexcept(false) {
 
   tscType32 sr1Value = readRegisterValue('S','1');
 
@@ -249,7 +249,7 @@ tscType16 FecUtcaRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
 /** Return the version of the firmware
  * \return Firmware version
  */
-tscType16 FecUtcaRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandler ) {
+tscType16 FecUtcaRingDevice::getFecFirmwareVersion( ) noexcept(false) {
 
 /*  tscType32 fecVersion ;
 
@@ -277,7 +277,7 @@ tscType16 FecUtcaRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandle
 /** Return a word from the FIFO receive
  * \param return a word from the FIFO receive
  */
-tscType32 FecUtcaRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
+tscType32 FecUtcaRingDevice::getFifoReceive( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fiforec_value=readRegisterValue('R','R');
 
@@ -300,7 +300,7 @@ tscType32 FecUtcaRingDevice::getFifoReceive( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO receive
  * \param fiforecValue - word to be set
  */
-void FecUtcaRingDevice::setFifoReceive( tscType32 fiforec_value )throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::setFifoReceive( tscType32 fiforec_value )noexcept(false) {
 
   //if (sendCommand(REG_REC_FIFO, fiforec_value, NULL)) {
     RAISEFECEXCEPTIONHANDLER_HARDPOSITION (WRITE_ERROR,
@@ -317,7 +317,7 @@ void FecUtcaRingDevice::setFifoReceive( tscType32 fiforec_value )throw ( FecExce
 /** Return a word from the FIFO return
  * \param return a word from the FIFO return
  */
-tscType8 FecUtcaRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
+tscType8 FecUtcaRingDevice::getFifoReturn( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fiforet_value;
 
@@ -340,7 +340,7 @@ tscType8 FecUtcaRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO return
  * \param fiforet_value - word to be set
  */
-void FecUtcaRingDevice::setFifoReturn( tscType8 fiforet_value )throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::setFifoReturn( tscType8 fiforet_value )noexcept(false) {
 
   if (sendCommand(REG_RET_FIFO, fiforet_value, NULL)) {
     RAISEFECEXCEPTIONHANDLER_HARDPOSITION (WRITE_ERROR,
@@ -359,7 +359,7 @@ void FecUtcaRingDevice::setFifoReturn( tscType8 fiforet_value )throw ( FecExcept
 /** Return a word from the FIFO transmit
  * \param return a word from the FIFO transmit
  */
-tscType32 FecUtcaRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
+tscType32 FecUtcaRingDevice::getFifoTransmit( ) noexcept(false) {
 
   DD_FEC_FIFO_DATA_32 fifotra_value;
 
@@ -381,7 +381,7 @@ tscType32 FecUtcaRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO transmit
  * \param fifotra_value - word to be set
  */
-void FecUtcaRingDevice::setFifoTransmit( tscType32 fifotra_value )throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::setFifoTransmit( tscType32 fifotra_value )noexcept(false) {
 
 /*
   if (sendCommand(REG_TRA_FIFO, fifotra_value, NULL)) {
@@ -414,7 +414,7 @@ void FecUtcaRingDevice::setFifoTransmit( tscType32 fifotra_value )throw ( FecExc
 
 /** Hard reset of the FEC board or the ring board => PLX reset is issued
  */
-void FecUtcaRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
+void FecUtcaRingDevice::fecHardReset ( ) noexcept(false) {
 #ifdef FECUTCARINGDEVICE_DEBUG
   std::cout << "DEBUG: Hard reset"<< std::endl ;
 #endif
@@ -454,7 +454,7 @@ void FecUtcaRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
  * \param enable - enable or disable the IRQ on the PLX
  * \param level - not used, only for code consistent
  */
-void FecUtcaRingDevice::setIRQ ( bool enable, tscType8 level ) throw (FecExceptionHandler) {
+void FecUtcaRingDevice::setIRQ ( bool enable, tscType8 level ) noexcept(false) {
 
 #ifdef IRQMANAGER
 #endif
diff --git a/FecSoftwareV3_0/generic/src/common/FecVmeRingDevice.cc b/FecSoftwareV3_0/generic/src/common/FecVmeRingDevice.cc
index 2e09b08..cc899b0 100755
--- a/FecSoftwareV3_0/generic/src/common/FecVmeRingDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecVmeRingDevice.cc
@@ -68,7 +68,7 @@ HAL::VMEAddressTable *FecVmeRingDevice::addressTable_ = NULL ;
  * \param init - initialise the FEC (with reset at the starting)
  * \warning note that the numbering schema comes from the file use for the creation of the bus adapter, see the configurePLugAndPlay and configureHardBaseAddress method from this class
  */
-FecVmeRingDevice::FecVmeRingDevice (HAL::VME64xDevice *vmeDevice, tscType8 fecSlot, tscType8 ringSlot, bool init, fecRingDeviceFifoAccessModeEnum blockMode, uint32_t adapterSlot, bool invertClockPolarity ) throw ( FecExceptionHandler ) :
+FecVmeRingDevice::FecVmeRingDevice (HAL::VME64xDevice *vmeDevice, tscType8 fecSlot, tscType8 ringSlot, bool init, fecRingDeviceFifoAccessModeEnum blockMode, uint32_t adapterSlot, bool invertClockPolarity ) noexcept(false) :
   FecRingDevice ( fecSlot, ringSlot, FECVME ) {
 
   // Raise an exception if the VME Device is incoherent
@@ -142,7 +142,7 @@ FecVmeRingDevice::FecVmeRingDevice (HAL::VME64xDevice *vmeDevice, tscType8 fecSl
 /** Nothing
  * \warning the VME device used must be destroy by the creator (ie. FecAccess class in the current implementation). If you don't use the FecAcess, you must delete it).
  */
-FecVmeRingDevice::~FecVmeRingDevice ( ) throw ( FecExceptionHandler ) {
+FecVmeRingDevice::~FecVmeRingDevice ( ) noexcept(false) {
 }
 
 /** \return the FEC hardware id
@@ -160,7 +160,7 @@ std::string FecVmeRingDevice::getFecHardwareId ( ) {
  * \param ctrl0Value - value of the CR0
  * \param force - if force is set then the value is applied blindly. if force is not set then the invert clock polarity is managed following the parameter in the class.
  */
-void FecVmeRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) noexcept(false) {
 
   if (!force) {
     if (invertClockPolarity_) ctrl0Value |= FEC_CR0_POLARITY ;
@@ -245,7 +245,7 @@ void FecVmeRingDevice::setFecRingCR0 ( tscType16 ctrl0Value, bool force ) throw
 /** Reads a value from FEC ctrl0 
  *\return the value read
  */
-tscType16 FecVmeRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
+tscType16 FecVmeRingDevice::getFecRingCR0( ) noexcept(false) {
 
   uint32_t ctrl0Value;
   try {
@@ -331,7 +331,7 @@ tscType16 FecVmeRingDevice::getFecRingCR0( ) throw ( FecExceptionHandler ) {
 /** Write the value given as parameter in FEC control 1 register 
  * \param value to be written
  */
-void FecVmeRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFecRingCR1( tscType16 ctrl1Value ) noexcept(false) {
 
 #ifdef FECVMERINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << std::hex << ctrl1Value << " in CR1" << std::endl ;
@@ -412,7 +412,7 @@ void FecVmeRingDevice::setFecRingCR1( tscType16 ctrl1Value ) throw ( FecExceptio
 /** Reads a value from FEC ctrl1 
  * \return value of the FEC CR1 for that ring
  */
-tscType16 FecVmeRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecVmeRingDevice::getFecRingCR1( ) noexcept(false) {
 
   uint32_t ctrl1Value;
   
@@ -496,7 +496,7 @@ tscType16 FecVmeRingDevice::getFecRingCR1( ) throw ( FecExceptionHandler ) {
 /** Reads a value from FEC SR0 
  * \return the value of the FEC SR0
  */
-tscType32 FecVmeRingDevice::getFecRingSR0(unsigned long sleeptime) throw ( FecExceptionHandler ) {
+tscType32 FecVmeRingDevice::getFecRingSR0(unsigned long sleeptime) noexcept(false) {
 
   uint32_t sr0Value;
   
@@ -597,7 +597,7 @@ tscType32 FecVmeRingDevice::getFecRingSR0(unsigned long sleeptime) throw ( FecEx
 /** Reads a value from FEC SR1
  * \return the value of the FEC SR1
  */
-tscType16 FecVmeRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
+tscType16 FecVmeRingDevice::getFecRingSR1( ) noexcept(false) {
 
   uint32_t sr1Value;
 
@@ -681,7 +681,7 @@ tscType16 FecVmeRingDevice::getFecRingSR1( ) throw ( FecExceptionHandler ) {
  * \return Firmware version
  * \warning the value read is mask with (0xFF00 >> 16)
  */
-tscType16 FecVmeRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandler ) {
+tscType16 FecVmeRingDevice::getFecFirmwareVersion( ) noexcept(false) {
 
   //std::cout << fecHalItem_[FECHALVERSION_SRC] << " ring initialised " << getmFecInitialised() << std::endl ;
 
@@ -773,7 +773,7 @@ tscType16 FecVmeRingDevice::getFecFirmwareVersion( ) throw ( FecExceptionHandler
 /** Return a word from the FIFO receive
  * \param return a word from the FIFO receive
  */
-tscType32 FecVmeRingDevice::getFifoReceive ( ) throw ( FecExceptionHandler ) {
+tscType32 FecVmeRingDevice::getFifoReceive ( ) noexcept(false) {
 
   uint32_t fiforec_value;
 
@@ -856,7 +856,7 @@ tscType32 FecVmeRingDevice::getFifoReceive ( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO receive
  * \param fiforecValue - word to be set
  */
-void FecVmeRingDevice::setFifoReceive( tscType32 fiforecValue ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFifoReceive( tscType32 fiforecValue ) noexcept(false) {
 
   try {
     currentVmeBoard_->unmaskedWrite(fecHalItem_[FECHALREC_FIFO_W], (uint32_t)fiforecValue);
@@ -936,7 +936,7 @@ void FecVmeRingDevice::setFifoReceive( tscType32 fiforecValue ) throw ( FecExcep
 /** Return a word from the FIFO return
  * \param return a word from the FIFO return
  */
-tscType8 FecVmeRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
+tscType8 FecVmeRingDevice::getFifoReturn( ) noexcept(false) {
 
   uint32_t fiforet_value;
 
@@ -1019,7 +1019,7 @@ tscType8 FecVmeRingDevice::getFifoReturn( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO return
  * \param fiforetValue - word to be set
  */
-void FecVmeRingDevice::setFifoReturn( tscType8 fiforetValue ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFifoReturn( tscType8 fiforetValue ) noexcept(false) {
 
   try {
     currentVmeBoard_->unmaskedWrite(fecHalItem_[FECHALRET_FIFO_W], (uint32_t)fiforetValue);
@@ -1098,7 +1098,7 @@ void FecVmeRingDevice::setFifoReturn( tscType8 fiforetValue ) throw ( FecExcepti
 /** Return a word from the FIFO transmit
  * \param return a word from the FIFO transmit
  */
-tscType32 FecVmeRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
+tscType32 FecVmeRingDevice::getFifoTransmit( ) noexcept(false) {
 
   uint32_t fifotra_value;
 
@@ -1181,7 +1181,7 @@ tscType32 FecVmeRingDevice::getFifoTransmit( ) throw ( FecExceptionHandler ) {
 /** set a word in the FIFO transmit
  * \param fifotra_value - word to be set
  */
-void FecVmeRingDevice::setFifoTransmit ( tscType32 fifotraValue ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFifoTransmit ( tscType32 fifotraValue ) noexcept(false) {
 
 #ifdef FECVMERINGDEVICE_DEBUG
   std::cout << "DEBUG : writing value 0x" << std::hex << fifotraValue << " to fifo transmit" << std::endl ;
@@ -1262,7 +1262,7 @@ void FecVmeRingDevice::setFifoTransmit ( tscType32 fifotraValue ) throw ( FecExc
  * \param fifotra_value - word to be set
  * \warning if the block transfer is enabled and the version of the FEC VME firmware is correct and if the HAL version is correct then the block transfer is used
  */
-void FecVmeRingDevice::setFifoTransmit ( tscType32 *fifotraValue, int count ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFifoTransmit ( tscType32 *fifotraValue, int count ) noexcept(false) {
   
 #ifdef FECVMERINGDEVICE_DEBUG 
   {
@@ -1373,7 +1373,7 @@ void FecVmeRingDevice::setFifoTransmit ( tscType32 *fifotraValue, int count ) th
  * \param fiforecValue - array of words to be set
  * \warning if the block transfer is enabled and the version of the FEC VME firmware is correct and if the HAL version is correct then the block transfer is used
  */
-void FecVmeRingDevice::setFifoReceive ( tscType32 *fiforecValue, int count ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setFifoReceive ( tscType32 *fiforecValue, int count ) noexcept(false) {
   
 #ifdef FECVMERINGDEVICE_DEBUG 
   {
@@ -1507,7 +1507,7 @@ void FecVmeRingDevice::setFifoReceive ( tscType32 *fiforecValue, int count ) thr
  * \param fiforec_value - array word to be retrieved
  * \warning if the block transfer is enable and the version of the FEC VME firmware is correct and if the HAL version is correct then the block transfer is used
  */
-tscType32* FecVmeRingDevice::getFifoTransmit ( tscType32 *fifotraValue, int count ) throw ( FecExceptionHandler ) {
+tscType32* FecVmeRingDevice::getFifoTransmit ( tscType32 *fifotraValue, int count ) noexcept(false) {
 
   try {
     switch (getFifoAccessMode())  { 
@@ -1625,7 +1625,7 @@ tscType32* FecVmeRingDevice::getFifoTransmit ( tscType32 *fifotraValue, int coun
  * \param fiforec_value - array word to be retrieved
  * \warning if the block transfer is enable and the version of the FEC VME firmware is correct and if the HAL version is correct then the block transfer is used
  */
-tscType32* FecVmeRingDevice::getFifoReceive ( tscType32 *fiforecValue, int count ) throw ( FecExceptionHandler ) {
+tscType32* FecVmeRingDevice::getFifoReceive ( tscType32 *fiforecValue, int count ) noexcept(false) {
 
   try {
     switch (getFifoAccessMode())  { 
@@ -1752,7 +1752,7 @@ tscType32* FecVmeRingDevice::getFifoReceive ( tscType32 *fiforecValue, int count
  * \warning Only the mFECs
  * 
  */
-void FecVmeRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::fecHardReset ( ) noexcept(false) {
 
   // static method
   uFecsReload() ;
@@ -1780,7 +1780,7 @@ void FecVmeRingDevice::fecHardReset ( ) throw ( FecExceptionHandler ) {
  * 
  * \warning This method is not used until the IRQ will be managed by the VME FEC / software
  */
-void FecVmeRingDevice::setIRQ ( bool enable, tscType8 level ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::setIRQ ( bool enable, tscType8 level ) noexcept(false) {
 
   /* empty function: do nothing , USB is not interrupt driven, no risc of interrupt overflood */
 
@@ -1898,7 +1898,7 @@ void FecVmeRingDevice::setIRQ ( bool enable, tscType8 level ) throw ( FecExcepti
  * \param adapterSlot - where the adapter is
  * \param strBusAdapter - string with the bus adapter name. A static attributs exists FecVmeRingDevice::STR_BUSADAPTER_NAME together with an enumeration enumBusAdapter
  */
-HAL::VMEBusAdapterInterface *FecVmeRingDevice::createBusAdapter ( uint32_t adapterSlot, std::string strBusAdapter ) throw ( HAL::BusAdapterException, FecExceptionHandler ) {
+HAL::VMEBusAdapterInterface *FecVmeRingDevice::createBusAdapter ( uint32_t adapterSlot, std::string strBusAdapter ) noexcept(false) {
 
   HAL::VMEBusAdapterInterface *busAdapter = NULL ;
 
@@ -1948,12 +1948,7 @@ HAL::VMEBusAdapterInterface *FecVmeRingDevice::createBusAdapter ( uint32_t adapt
  * \param listOfVMEDevice - returns the list of devices detected
  */
 HAL::VME64xCrate *FecVmeRingDevice::configurePlugAndPlay( uint32_t adapterSlot, std::string addresstablefile, std::string maptable, std::string strBusAdapter, hashMapVMEDevice &hashMapVMEDevice )
-  throw (HAL::BusAdapterException,
-	 HAL::NoSuchFileException,
-	 HAL::IllegalValueException,
-	 HAL::XMLProcessingException,
-	 HAL::HardwareProblemException,
-	 HAL::UnsupportedException ) {
+	 noexcept(false) {
 
 #ifdef FECVMERINGDEVICE_DEBUG
   std::cout << "configurePlugAndPlay with file " << std::endl
@@ -2051,11 +2046,7 @@ HAL::VME64xCrate *FecVmeRingDevice::configurePlugAndPlay( uint32_t adapterSlot,
  * \param strBusAdapter - PCI to VME link used see the method createBusAdapter
  */
 HAL::VME64xDevice * FecVmeRingDevice::configureHardBaseAddress( uint32_t adapterSlot, std::string addresstablefile, uint32_t baseaddress, uint32_t fecSlot, std::string strBusAdapter )
-  throw (HAL::BusAdapterException,
-	 HAL::NoSuchFileException,
-	 HAL::IllegalValueException,
-	 HAL::UnsupportedException,
-	 FecExceptionHandler) {
+	 noexcept(false) {
 
   // Mutex to avoid mutithread access
   pthread_mutex_lock(&mutexBusAdapter_) ;
@@ -2175,7 +2166,7 @@ void FecVmeRingDevice::autoNumberingSchema ( const HAL::AddressTableInterface& a
    board itself and not only the rings registers.
    The first mezzanine must be always plugged at the first place from the top of the FEC. This is mandatory for the load of the firmware
 */
-tscType16 FecVmeRingDevice::detectVmeBoard(HAL::VME64xDevice *vmedevice, tscType8 fecSlot) throw ( FecExceptionHandler ) {
+tscType16 FecVmeRingDevice::detectVmeBoard(HAL::VME64xDevice *vmedevice, tscType8 fecSlot) noexcept(false) {
 
   uint32_t confValue;
   
@@ -2271,7 +2262,7 @@ tscType16 FecVmeRingDevice::detectVmeBoard(HAL::VME64xDevice *vmedevice, tscType
 /** Delete all the statics value allowed for VME 64x or in automatic detection
  * Never call this method if you are multithreaded, the busAdapter_ is shared between the threads
  */
-void FecVmeRingDevice::closeFecVmeAccess ( ) throw (HAL::BusAdapterException) {
+void FecVmeRingDevice::closeFecVmeAccess ( ) noexcept(false) {
 
   if (busAdapter_.size() != 0) {
     for (Sgi::hash_map<uint32_t, HAL::VMEBusAdapterInterface *>::iterator vme = busAdapter_.begin() ; vme != busAdapter_.end() ; vme ++) {
@@ -2299,7 +2290,7 @@ void FecVmeRingDevice::closeFecVmeAccess ( ) throw (HAL::BusAdapterException) {
 
 /** Hard reset of the VME crate
  */
-void FecVmeRingDevice::crateReset ( uint32_t adapterSlot ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::crateReset ( uint32_t adapterSlot ) noexcept(false) {
   pthread_mutex_lock(&mutexCrateReset_);
   if (crateResetDone) {
     std::cerr << "Crate reset for adapterSlot "<<adapterSlot<< " already done !" << std::endl;
@@ -2351,7 +2342,7 @@ void FecVmeRingDevice::crateReset ( uint32_t adapterSlot ) throw ( FecExceptionH
 /** Read an hardware ID from a VME board
  * \param slot of the VME board
  */
-std::string FecVmeRingDevice::getSerialNumber ( uint32_t slot, uint32_t adapterSlot ) throw ( FecExceptionHandler ) {
+std::string FecVmeRingDevice::getSerialNumber ( uint32_t slot, uint32_t adapterSlot ) noexcept(false) {
 
   std::string serialNumber ;
 
@@ -2401,7 +2392,7 @@ std::string FecVmeRingDevice::getSerialNumber () {
 
 /**  \brief return trigger version number (firmware)
  */
-tscType32 FecVmeRingDevice::getTriggerVersion() throw ( FecExceptionHandler ) {
+tscType32 FecVmeRingDevice::getTriggerVersion() noexcept(false) {
   uint32_t triggerVersion, value;
   try {
 
@@ -2495,7 +2486,7 @@ tscType32 FecVmeRingDevice::getTriggerVersion() throw ( FecExceptionHandler ) {
 
 /**  \brief return VME slave version number
  */
-tscType32 FecVmeRingDevice::getVmeVersion() throw ( FecExceptionHandler ) {
+tscType32 FecVmeRingDevice::getVmeVersion() noexcept(false) {
   uint32_t VmeVersion;
   try {
     currentVmeBoard_->read("VME_VERSION_FW",(haltype *)&VmeVersion);
@@ -2581,7 +2572,7 @@ tscType32 FecVmeRingDevice::getVmeVersion() throw ( FecExceptionHandler ) {
 /**  \brief Reload all the uFECs on the board. Sleep about 1 sec after that.
  * \param value - 1 for mFECs (by default), 2 for trigger FPGA, 4 for VME FPGA
  */
-void FecVmeRingDevice::uFecsReload( tscType8 value ) throw ( FecExceptionHandler ) {
+void FecVmeRingDevice::uFecsReload( tscType8 value ) noexcept(false) {
 
   try {
     currentVmeBoard_->write("RELOAD_FW",value);
diff --git a/FecSoftwareV3_0/generic/src/common/FecVmeTemperature.cc b/FecSoftwareV3_0/generic/src/common/FecVmeTemperature.cc
index 8309403..02e4269 100755
--- a/FecSoftwareV3_0/generic/src/common/FecVmeTemperature.cc
+++ b/FecSoftwareV3_0/generic/src/common/FecVmeTemperature.cc
@@ -33,7 +33,7 @@
 
 /** Build a FecVmeTemperature and initalise the access
  */
-FecVmeTemperature::FecVmeTemperature (HAL::VME64xDevice *vmedevice, unsigned int fecSlot ) throw ( FecExceptionHandler ) {
+FecVmeTemperature::FecVmeTemperature (HAL::VME64xDevice *vmedevice, unsigned int fecSlot ) noexcept(false) {
   vmeBoard_ = vmedevice;
   fecSlot_ = fecSlot ;
   try {
@@ -121,12 +121,12 @@ FecVmeTemperature::FecVmeTemperature (HAL::VME64xDevice *vmedevice, unsigned int
   Destructor ::
   Standard implementation
 */
-FecVmeTemperature::~FecVmeTemperature ( ) throw ( FecExceptionHandler ) {
+FecVmeTemperature::~FecVmeTemperature ( ) noexcept(false) {
 }
 
 
 
-int FecVmeTemperature::getTemp(int tempSlot) throw ( FecExceptionHandler ) {
+int FecVmeTemperature::getTemp(int tempSlot) noexcept(false) {
 
   if(tempSlot<1 || tempSlot >2)
     RAISEFECEXCEPTIONHANDLER_INFOSUP (CODECONSISTENCYERROR,
diff --git a/FecSoftwareV3_0/generic/src/common/MemBufOutputSource.cc b/FecSoftwareV3_0/generic/src/common/MemBufOutputSource.cc
index 6286e26..cf384b1 100755
--- a/FecSoftwareV3_0/generic/src/common/MemBufOutputSource.cc
+++ b/FecSoftwareV3_0/generic/src/common/MemBufOutputSource.cc
@@ -34,7 +34,7 @@ MemBufOutputSource::MemBufOutputSource () {
  * @see MemBufOutputSource::generateDeviceTag(deviceVector)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, bool forDb) noexcept(false) {
   generateHeader();
   generateStartTag(COMMON_XML_SCHEME);
   generateDeviceTag(deviceParameters, forDb);
@@ -57,7 +57,7 @@ MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, bool forD
  * @see MemBufOutputSource::generateStartTag()
  * @see MemBufOutputSource::generateDeviceTag(deviceVector *) 
  * @see MemBufOutputSource::generateEndTag()                                                                                          */
-MemBufOutputSource::MemBufOutputSource (ConnectionVector connections, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (ConnectionVector connections, bool forDb) noexcept(false) {
   generateHeader();
   if (forDb) memBuffer_ << "<ROWSET>" ;
   else generateStartTag(COMMON_XML_SCHEME);
@@ -83,7 +83,7 @@ MemBufOutputSource::MemBufOutputSource (ConnectionVector connections, bool forDb
  * @see MemBufOutputSource::generatePiaResetTag(piaResetVector *)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (piaResetVector piaResetParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (piaResetVector piaResetParameters, bool forDb) noexcept(false) {
 
   generateHeader();
   generateStartTag(COMMON_XML_SCHEME);
@@ -108,7 +108,7 @@ MemBufOutputSource::MemBufOutputSource (piaResetVector piaResetParameters, bool
  * @see MemBufOutputSource::generatePiaResetTag(piaResetVector)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (dcuConversionVector dcuConversionParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (dcuConversionVector dcuConversionParameters, bool forDb) noexcept(false) {
   generateHeader();
   generateStartTag(DCUCONVERSION_XML_SCHEME);
   generateTkDcuConversionTag(dcuConversionParameters, forDb);
@@ -132,7 +132,7 @@ MemBufOutputSource::MemBufOutputSource (dcuConversionVector dcuConversionParamet
  * @see MemBufOutputSource::generatePiaResetTag(piaResetVector)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource ( TkIdVsHostnameVector tkIdVsHostnameVector , bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource ( TkIdVsHostnameVector tkIdVsHostnameVector , bool forDb) noexcept(false) {
 
   generateHeader();
   if (forDb) memBuffer_ << "<ROWSET>" ;
@@ -160,7 +160,7 @@ MemBufOutputSource::MemBufOutputSource ( TkIdVsHostnameVector tkIdVsHostnameVect
  * @see MemBufOutputSource::generatePiaResetTag(tkDcuInfoVector)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (tkDcuInfoVector dcuInfoParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (tkDcuInfoVector dcuInfoParameters, bool forDb) noexcept(false) {
   if(!forDb){
     generateHeader();
     generateStartTag(DCUCONVERSION_XML_SCHEME);
@@ -188,7 +188,7 @@ MemBufOutputSource::MemBufOutputSource (tkDcuInfoVector dcuInfoParameters, bool
  * @see MemBufOutputSource::generatePiaResetTag(tkDcuPsuMapVector *)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (tkDcuPsuMapVector dcuPsuMapParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (tkDcuPsuMapVector dcuPsuMapParameters, bool forDb) noexcept(false) {
   if(!forDb){
     generateHeader();
     generateStartTag(DCUCONVERSION_XML_SCHEME);
@@ -219,7 +219,7 @@ MemBufOutputSource::MemBufOutputSource (tkDcuPsuMapVector dcuPsuMapParameters, b
  * @see MemBufOutputSource::generateDeviceTag(deviceVector)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, piaResetVector piaResetParameters) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, piaResetVector piaResetParameters) noexcept(false) {
   generateHeader();
   generateStartTag(COMMON_XML_SCHEME);
   generatePiaResetTag(piaResetParameters);
@@ -248,7 +248,7 @@ MemBufOutputSource::MemBufOutputSource (deviceVector deviceParameters, piaResetV
  * @see MemBufOutputSource::generateCcuTag(ccuVector,bool)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (ccuVector ccuParameters, bool forDb) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (ccuVector ccuParameters, bool forDb) noexcept(false) {
   if(!forDb){
     generateHeader();
     generateStartTag(COMMON_XML_SCHEME);
@@ -277,7 +277,7 @@ MemBufOutputSource::MemBufOutputSource (ccuVector ccuParameters, bool forDb) thr
  * @see MemBufOutputSource::generateTkRingTag(TkRingDescription,bool)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (TkRingDescription ringParameters, bool forDb, bool withCcus) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (TkRingDescription ringParameters, bool forDb, bool withCcus) noexcept(false) {
 
   if (forDb && withCcus) {
     std::cerr << "ERROR in running mode> " << __PRETTY_FUNCTION__ << "with forDb==true and withCcus==true." << std::endl ;
@@ -319,7 +319,7 @@ MemBufOutputSource::MemBufOutputSource (TkRingDescription ringParameters, bool f
  * @see MemBufOutputSource::generateTkRingTag(TkRingDescription,bool)
  * @see MemBufOutputSource::generateEndTag()
  */
-MemBufOutputSource::MemBufOutputSource (tkringVector rings, bool forDb, bool withCcus) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource (tkringVector rings, bool forDb, bool withCcus) noexcept(false) {
 
   if (forDb && withCcus) {
     std::cerr << "ERROR in running mode> " << __PRETTY_FUNCTION__ << "with forDb==true and withCcus==true." << std::endl ;
@@ -364,7 +364,7 @@ MemBufOutputSource::MemBufOutputSource (tkringVector rings, bool forDb, bool wit
  * @param forDb - Indicates whether XML output has to be generated for database target or ASCII file
  * @exception FecExceptionHandler
  */
-MemBufOutputSource::MemBufOutputSource( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) throw (FecExceptionHandler) {
+MemBufOutputSource::MemBufOutputSource( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) noexcept(false) {
 	generateHeader();
 	//std::string xmlVersion("1.1");
 	if (forDb)
@@ -535,7 +535,7 @@ void MemBufOutputSource::generateEndTag(){
  * @see generateXMLKchip(kchipDescription *, std::stringstream &);
  * @see generateXMLVfat(vfatDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generateDeviceTag(deviceVector deviceParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateDeviceTag(deviceVector deviceParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
 #ifdef PRESHOWER
@@ -652,7 +652,7 @@ void MemBufOutputSource::generateDeviceTag(deviceVector deviceParameters, bool f
  * @param ringParameters - TkRingDescriptions
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the ccuType code is unknown
  */
-void MemBufOutputSource::generateConnectionTag(ConnectionVector connections, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateConnectionTag(ConnectionVector connections, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
   for (ConnectionVector::iterator it = connections.begin() ; it != connections.end() ; it ++) {
@@ -687,7 +687,7 @@ void MemBufOutputSource::generateConnectionTag(ConnectionVector connections, boo
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the ccuType code is unknown
  * @see generateXMLCcu(CCUDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generateCcuTag(ccuVector ccuParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateCcuTag(ccuVector ccuParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
   std::stringstream memBufferCcu ;
 
@@ -714,7 +714,7 @@ void MemBufOutputSource::generateCcuTag(ccuVector ccuParameters, bool forDb) thr
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the ccuType code is unknown
  * @see generateXMLTkRing(TkRingDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generateTkRingTag(TkRingDescription ringParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateTkRingTag(TkRingDescription ringParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
   std::stringstream memBufferTkRing ;
 
@@ -739,7 +739,7 @@ void MemBufOutputSource::generateTkRingTag(TkRingDescription ringParameters, boo
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the deviceType code is unknown
  * @see generateXMLPiaReset(piaResetDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generatePiaResetTag(piaResetVector piaResetParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generatePiaResetTag(piaResetVector piaResetParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
   if (forDb) {
@@ -769,7 +769,7 @@ void MemBufOutputSource::generatePiaResetTag(piaResetVector piaResetParameters,
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the deviceType code is unknown
  * @see generateXMLPiaReset(piaResetDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generateTkDcuConversionTag(dcuConversionVector dcuConversionParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateTkDcuConversionTag(dcuConversionVector dcuConversionParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
   if (forDb) {
@@ -791,7 +791,7 @@ void MemBufOutputSource::generateTkDcuConversionTag(dcuConversionVector dcuConve
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the deviceType code is unknown
  * @see generateXMLPiaReset(piaResetDescription *, std::stringstream &);
  */
-void MemBufOutputSource::generateTkIdVsHostnameTag( TkIdVsHostnameVector tkIdVsHostnameVector, bool forDb ) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateTkIdVsHostnameTag( TkIdVsHostnameVector tkIdVsHostnameVector, bool forDb ) noexcept(false) {
   std::stringstream errorMsg;
 
   for (TkIdVsHostnameVector::iterator it = tkIdVsHostnameVector.begin() ; it != tkIdVsHostnameVector.end() ; it ++) {
@@ -807,7 +807,7 @@ void MemBufOutputSource::generateTkIdVsHostnameTag( TkIdVsHostnameVector tkIdVsH
  * @param analysisType - Analysis type
  * @param forDb - Indicates whether XML output has to be built for database or ASCII file target 
  */
-void MemBufOutputSource::generateAnalysisTag( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateAnalysisTag( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType analysisType, bool forDb ) noexcept(false) {
 	for (std::vector<CommissioningAnalysisDescription*>::iterator it=inVector.begin(); it!=inVector.end(); it++) {
 		CommissioningAnalysisDescription *description = *it;
 		generateXMLAnalysisTag(description, memBuffer_, analysisType, forDb);
@@ -1081,7 +1081,7 @@ void MemBufOutputSource::generateXMLTkIdVsHostname(TkIdVsHostnameDescription *ho
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the deviceType code is unknown
  * @see generateXMLTkDcuInfo(TkDcuInfo*, std::stringstream &);
  */
-void MemBufOutputSource::generateTkDcuInfoTag(tkDcuInfoVector dcuInfoParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateTkDcuInfoTag(tkDcuInfoVector dcuInfoParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
   if (forDb) {
@@ -1130,7 +1130,7 @@ void MemBufOutputSource::generateXMLTkDcuInfo(TkDcuInfo *dcuInfo, std::stringstr
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the deviceType code is unknown
  * @see generateXMLTkDcuInfo(TkDcuInfo*, std::stringstream &);
  */
-void MemBufOutputSource::generateTkDcuPsuMapTag(tkDcuPsuMapVector dcuPsuMapParameters, bool forDb) throw (FecExceptionHandler) {
+void MemBufOutputSource::generateTkDcuPsuMapTag(tkDcuPsuMapVector dcuPsuMapParameters, bool forDb) noexcept(false) {
   std::stringstream errorMsg;
 
   if (forDb) {
diff --git a/FecSoftwareV3_0/generic/src/common/PiaResetAccess.cc b/FecSoftwareV3_0/generic/src/common/PiaResetAccess.cc
index d8ef95a..3414b76 100755
--- a/FecSoftwareV3_0/generic/src/common/PiaResetAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/PiaResetAccess.cc
@@ -155,7 +155,7 @@ tscType8 PiaResetAccess::getMask ( ) {
 void PiaResetAccess::setPiaReset ( tscType8 mask,
                                    unsigned long delayActiveReset,
                                    unsigned long intervalDelayReset) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // ?????????????????????????????????????????????
   // Semaphore ici
@@ -202,7 +202,7 @@ void PiaResetAccess::setPiaReset ( tscType8 mask,
 unsigned int PiaResetAccess::resetPiaModulesMultipleFrame ( FecAccess &fecAccess, piaResetVector vPiaReset, 
 							    unsigned int delayActiveReset, unsigned int intervalDelayReset,
 							    tscType8 initialValue,
-							    std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) {
+							    std::list<FecExceptionHandler *> &errorList ) noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   typedef Sgi::hash_map< keyType, std::list<accessDeviceType> > accessPiaTypeListMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/PiaResetFactory.cc b/FecSoftwareV3_0/generic/src/common/PiaResetFactory.cc
index abc7578..db6f586 100755
--- a/FecSoftwareV3_0/generic/src/common/PiaResetFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/PiaResetFactory.cc
@@ -68,7 +68,7 @@ PiaResetFactory::PiaResetFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 PiaResetFactory::PiaResetFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   DeviceFactoryInterface ( login, password, path, threaded ) {
 
   setDatabaseAccess ( login, password, path ) ;
@@ -211,7 +211,7 @@ void PiaResetFactory::setInputFileName ( std::string inputFileName, std::string
  * \warning in the destructor of PiaResetFactory, the dbAccess is deleted
  */
 void PiaResetFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -236,7 +236,7 @@ void PiaResetFactory::setDatabaseAccess ( std::string login, std::string passwor
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void PiaResetFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -266,7 +266,7 @@ void PiaResetFactory::setDatabaseAccess ( DbPiaResetAccess *dbAccess ) {
  * \bug is this method is usefull. In the FecDeviceFactory, it is mandatory to create or not the partition but is it necessary in the PiaResetFactory
  */
 void PiaResetFactory::createPartition ( piaResetVector devices, std::string partitionName ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "PiaResetFactory::createPartition ( piaResetVector devices, std::string partitionName = \"\" )"  << std::endl ;
@@ -322,7 +322,7 @@ void PiaResetFactory::createPartition ( piaResetVector devices, std::string part
  * retreived from the input file.
  */
 void PiaResetFactory::getPiaResetDescriptions ( bool fileUsed, std::string partitionName, std::string fecHardwareId, piaResetVector &outVector, bool allDevices, bool forceDbReload  ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   if (fileUsed) 
@@ -369,7 +369,7 @@ void PiaResetFactory::getPiaResetDescriptions ( bool fileUsed, std::string parti
  * retreived from the input file.
  */
 void PiaResetFactory::getPiaResetDescriptions ( std::string partitionName, std::string fecHardwareId, piaResetVector &outVector, bool allDevices, bool forceDbReload )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getPiaResetDescriptions(false, partitionName, fecHardwareId, outVector, allDevices, forceDbReload) ;
 }
@@ -386,7 +386,7 @@ void PiaResetFactory::getPiaResetDescriptions ( std::string partitionName, std::
  * \warning this method is the same than getPiaResetDescriptionsPartitionName, it is maintained for backward compatibility
  */
 void PiaResetFactory::getPiaResetDescriptions ( std::string partitionName, piaResetVector &outVector, bool allDevices, bool forceDbReload )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getPiaResetDescriptions(false, partitionName, "0", outVector, allDevices, forceDbReload) ;
 }
@@ -396,7 +396,7 @@ void PiaResetFactory::getPiaResetDescriptions ( std::string partitionName, piaRe
  * \param allDevices - return all devices including the disable device
  */
 void PiaResetFactory::getPiaResetDescriptions ( piaResetVector &outVector, bool allDevices )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   getPiaResetDescriptions(true, "nil", "0", outVector, allDevices ) ;
 }
@@ -411,7 +411,7 @@ void PiaResetFactory::getPiaResetDescriptions ( piaResetVector &outVector, bool
  * \warning if you create a minor version, the process will try to get the version for the partition if it is set or FEC hardware ID and partition name
  */
 void PiaResetFactory::setPiaResetDescriptions ( piaResetVector devices, std::string partitionName ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
diff --git a/FecSoftwareV3_0/generic/src/common/TShare.cc b/FecSoftwareV3_0/generic/src/common/TShare.cc
index 9cd8ed1..3655a08 100644
--- a/FecSoftwareV3_0/generic/src/common/TShare.cc
+++ b/FecSoftwareV3_0/generic/src/common/TShare.cc
@@ -49,7 +49,7 @@ void clrshm(int ie,void *arg)
 //}
 
 
-TShare::TShare(char *cdev,int type,int size) throw (std::string)
+TShare::TShare(char *cdev,int type,int size) noexcept(false)
 {
   fSize=size;
   memset(fName,0,256);
@@ -116,7 +116,7 @@ TShare::TShare(char *cdev,int type,int size) throw (std::string)
       //  on_exit(rmsem,(void*)&fSemid);
     }
 } 
-TShare::~TShare() throw (std::string)
+TShare::~TShare() noexcept(false)
 {
   if (isServer)
     {
@@ -138,7 +138,7 @@ TShare::~TShare() throw (std::string)
 
 }
 
-void TShare::Lock() throw (std::string)
+void TShare::Lock() noexcept(false)
 {
   int nretry = 0;
  start:
@@ -158,7 +158,7 @@ void TShare::Lock() throw (std::string)
       goto start;
     }
 }
-void TShare::Unlock() throw (std::string)
+void TShare::Unlock() noexcept(false)
 {
   union semun arg={0};
   int nretry=0;
@@ -187,7 +187,7 @@ void TShare::Unlock() throw (std::string)
     }
 
 }
-void* TShare::Attach() throw (std::string)
+void* TShare::Attach() noexcept(false)
 {
   
   void* Shared = shmat(fShmid, 0, 0);
@@ -201,7 +201,7 @@ void* TShare::Attach() throw (std::string)
   return Shared;
 }
 
-void TShare::Detach(const void* ad) throw (std::string)
+void TShare::Detach(const void* ad) noexcept(false)
 {
   
  int err= shmdt(ad);
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactors.cc b/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactors.cc
index ef21626..c1e3441 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactors.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactors.cc
@@ -602,7 +602,7 @@ TkDcuConversionFactors *TkDcuConversionFactors::clone (){
 /** \brief Display the conversion factors
  * \param convertedValue - display the converted value with the DCU
  */
-void TkDcuConversionFactors::display ( bool convertedValue ) throw (std::string) {
+void TkDcuConversionFactors::display ( bool convertedValue ) noexcept(false) {
 
   std::string str = getDisplay( convertedValue ) ;
   std::cout << str ;
@@ -611,7 +611,7 @@ void TkDcuConversionFactors::display ( bool convertedValue ) throw (std::string)
 /** \brief Display the conversion factors
  * \param convertedValue - display the converted value with the DCU
  */
-std::string TkDcuConversionFactors::getDisplay ( bool convertedValue ) throw (std::string) {
+std::string TkDcuConversionFactors::getDisplay ( bool convertedValue ) noexcept(false) {
 
   std::ostringstream str ;
 
@@ -735,7 +735,7 @@ std::string TkDcuConversionFactors::getDisplay ( bool convertedValue ) throw (st
  * \return silicon sensor temperature
  * \warning return temperature are in degree celcuis
  */
-double TkDcuConversionFactors::getSiliconSensorTemperature ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getSiliconSensorTemperature ( bool &quality ) noexcept(false) {
 
   double tSi = 0 ;
 
@@ -779,7 +779,7 @@ double TkDcuConversionFactors::getSiliconSensorTemperature ( bool &quality ) thr
  * \param quality - data quality (good or bad)
  * \return V250 in mV
  */
-double TkDcuConversionFactors::getV250 ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getV250 ( bool &quality ) noexcept(false) {
 
   double v250 = 0 ;
   if (dcuType_ == DCUFEH) {
@@ -803,7 +803,7 @@ double TkDcuConversionFactors::getV250 ( bool &quality ) throw (std::string) {
  * \param quality - data quality (good or bad)
  * \return V125 in mV
  */
-double TkDcuConversionFactors::getV125 ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getV125 ( bool &quality ) noexcept(false) {
 
   double v125 = 0 ;
   if (dcuType_ == DCUFEH) {
@@ -827,7 +827,7 @@ double TkDcuConversionFactors::getV125 ( bool &quality ) throw (std::string) {
  * \param quality - data quality (good or bad)
  * \return Leakage current in uA
  */
-double TkDcuConversionFactors::getILeak ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getILeak ( bool &quality ) noexcept(false) {
 
   double iLeak = 0 ;
 
@@ -848,7 +848,7 @@ double TkDcuConversionFactors::getILeak ( bool &quality ) throw (std::string) {
  * \return Temperature of the corresponding hybrid
  * \warning return temperature are in degree celcuis
  */
-double TkDcuConversionFactors::getHybridTemperature ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getHybridTemperature ( bool &quality ) noexcept(false) {
 
   double tHyb = 0 ;
 
@@ -870,7 +870,7 @@ double TkDcuConversionFactors::getHybridTemperature ( bool &quality ) throw (std
  * \param quality - data quality (good or bad)
  * \return Temperature of the DCU
  */
-double TkDcuConversionFactors::getDcuTemperature ( bool &quality ) throw (std::string) {
+double TkDcuConversionFactors::getDcuTemperature ( bool &quality ) noexcept(false) {
 
   double tDcu = 0 ;
 
@@ -1042,7 +1042,7 @@ bool TkDcuConversionFactors::isPourcentageDifferent ( dcuDescription *dcu, doubl
 /** \brief return the corresponding subdetector from the det id
  * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
  */
-std::string TkDcuConversionFactors::getSubDetectorFromDetId ( ) throw (std::string) {
+std::string TkDcuConversionFactors::getSubDetectorFromDetId ( ) noexcept(false) {
 
   return TkDcuInfo::getSubDetectorFromDetId ( detId_ ) ;
 }
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactory.cc b/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactory.cc
index fbaba42..6d03a56 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuConversionFactory.cc
@@ -66,7 +66,7 @@ TkDcuConversionFactory::TkDcuConversionFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 TkDcuConversionFactory::TkDcuConversionFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   DeviceFactoryInterface ( login, password, path, threaded ) {
 
   setDatabaseAccess ( login, password, path ) ;
@@ -170,7 +170,7 @@ void TkDcuConversionFactory::setInputFileName ( std::string inputFileName ) {
  * \warning in the destructor of TkDcuConversionFactory, the dbAccess is deleted
  */
 void TkDcuConversionFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -195,7 +195,7 @@ void TkDcuConversionFactory::setDatabaseAccess ( std::string login, std::string
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void TkDcuConversionFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -224,7 +224,7 @@ void TkDcuConversionFactory::setDatabaseAccess ( DbTkDcuConversionAccess *dbAcce
 /** \brief Add the descriptions of the devices from the partitionName
  */
 void TkDcuConversionFactory::addConversionPartition ( std::string partitionName )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // For conversion factors
   XMLTkDcuConversion xmlTkDcuConversion;
@@ -259,7 +259,7 @@ void TkDcuConversionFactory::addConversionPartition ( std::string partitionName
  * \return return the conversion factors, do not delete the conversion factors returned
  */
 TkDcuConversionFactors *TkDcuConversionFactory::getTkDcuConversionFactors ( unsigned long dcuHardId, bool forceDbReload )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -334,7 +334,7 @@ TkDcuConversionFactors *TkDcuConversionFactory::getTkDcuConversionFactors ( unsi
  * \exception an exception is raised if the conversion factors is already present in the map
  */
 void TkDcuConversionFactory::setTkDcuConversionFactors ( TkDcuConversionFactors tkDcuConversionFactors ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   if (vConversionFactors_.find(tkDcuConversionFactors.getDcuHardId()) == vConversionFactors_.end()) 
     vConversionFactors_[tkDcuConversionFactors.getDcuHardId()] = tkDcuConversionFactors.clone() ;
@@ -350,7 +350,7 @@ void TkDcuConversionFactory::setTkDcuConversionFactors ( TkDcuConversionFactors
  * \param dcuConversionVector - a vector of conversion factor
  */
 void TkDcuConversionFactory::setTkDcuConversionFactors ( dcuConversionVector vDcuConversion ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -384,7 +384,7 @@ void TkDcuConversionFactory::setTkDcuConversionFactors ( dcuConversionVector vDc
  * \param vConversionFactors - a hash_map of conversion factors
  */
 void TkDcuConversionFactory::setTkDcuConversionFactors ( Sgi::hash_map<unsigned long, TkDcuConversionFactors *> vConversionFactors ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   dcuConversionVector vDcuConversion ;
   for (Sgi::hash_map<unsigned long, TkDcuConversionFactors *>::iterator itr = vConversionFactors.begin() ; itr != vConversionFactors.end() ; itr ++) {
@@ -397,7 +397,7 @@ void TkDcuConversionFactory::setTkDcuConversionFactors ( Sgi::hash_map<unsigned
 /** Upload the description in the output (database or file) with the hash_map attribut of the class
  */
 void TkDcuConversionFactory::setTkDcuConversionFactors ( ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
   setTkDcuConversionFactors (vConversionFactors_) ;
 }
 
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuInfo.cc b/FecSoftwareV3_0/generic/src/common/TkDcuInfo.cc
index c208967..aa1fa61 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuInfo.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuInfo.cc
@@ -147,7 +147,7 @@ void TkDcuInfo::display ( ) {
 /** \brief return the corresponding subdetector from the det id
  * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
  */
-std::string TkDcuInfo::getSubDetectorFromDetId ( ) throw (std::string) {
+std::string TkDcuInfo::getSubDetectorFromDetId ( ) noexcept(false) {
 
   return TkDcuInfo::getSubDetectorFromDetId ( detId_ ) ;
 }
@@ -156,7 +156,7 @@ std::string TkDcuInfo::getSubDetectorFromDetId ( ) throw (std::string) {
  * \param detId - detector ID
  * \return the string with TIB, TIB, TOB, TEC+, TEC- and an exception if the det id is not recognized
  */
-std::string TkDcuInfo::getSubDetectorFromDetId ( unsigned int detId ) throw (std::string) {
+std::string TkDcuInfo::getSubDetectorFromDetId ( unsigned int detId ) noexcept(false) {
 
   if (ISTOB(detId)) return "TOB" ;
   if (ISTIB(detId)) return "TIB" ;
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuInfoFactory.cc b/FecSoftwareV3_0/generic/src/common/TkDcuInfoFactory.cc
index c37dfa0..1f170f7 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuInfoFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuInfoFactory.cc
@@ -66,7 +66,7 @@ TkDcuInfoFactory::TkDcuInfoFactory ( ):
  * \param path - URL to acess the database
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
-TkDcuInfoFactory::TkDcuInfoFactory ( std::string login, std::string password, std::string path, bool threaded ) throw ( oracle::occi::SQLException ): 
+TkDcuInfoFactory::TkDcuInfoFactory ( std::string login, std::string password, std::string path, bool threaded ) noexcept(false): 
   
   DeviceFactoryInterface ( login, password, path, threaded ), 
   initDbVersion_(false), partitionName_("NONE"), versionMajor_(0), versionMinor_(0) {
@@ -183,7 +183,7 @@ void TkDcuInfoFactory::setInputFileName ( std::string inputFileName ) {
  * \warning in the destructor of TkDcuInfoFactory, the dbAccess is deleted
  */
 void TkDcuInfoFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -208,7 +208,7 @@ void TkDcuInfoFactory::setDatabaseAccess ( std::string login, std::string passwo
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void TkDcuInfoFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -245,7 +245,7 @@ void TkDcuInfoFactory::setDatabaseAccess ( DbTkDcuInfoAccess *dbAccess ) {
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 void TkDcuInfoFactory::getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   if (dbAccess_ == NULL) {
     RAISEFECEXCEPTIONHANDLER(DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE ) ;
@@ -291,7 +291,7 @@ void TkDcuInfoFactory::getPartitionVersion ( std::string partitionName, unsigned
 
 /** \brief Update the channel delays (coarse and fine) according to the fibre length between detector and FED
 */
-void TkDcuInfoFactory::updateChannelDelays (std::string partitionName) throw (oracle::occi::SQLException, FecExceptionHandler){
+void TkDcuInfoFactory::updateChannelDelays (std::string partitionName) noexcept(false){
 
   if (getDbConnected()) {
     ((DbTkDcuInfoAccess *)dbAccess_)->updateChannelDelays(partitionName);
@@ -303,7 +303,7 @@ void TkDcuInfoFactory::updateChannelDelays (std::string partitionName) throw (or
 /** \brief Get all the current states
  *  \return An array of TkState. Do not delete the vector returned, it is managed by the current class
  */
-tkStateVector &TkDcuInfoFactory::getCurrentStates () throw (FecExceptionHandler){
+tkStateVector &TkDcuInfoFactory::getCurrentStates () noexcept(false){
 
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
@@ -325,7 +325,7 @@ tkStateVector &TkDcuInfoFactory::getCurrentStates () throw (FecExceptionHandler)
  *  \param stateName the reference state for the partition
  *  \return The new currentStateId
  */
-unsigned int TkDcuInfoFactory::setCurrentState(std::string partitionName, std::string stateName) throw (FecExceptionHandler){
+unsigned int TkDcuInfoFactory::setCurrentState(std::string partitionName, std::string stateName) noexcept(false){
 
   unsigned int updatedStateId;
 
@@ -355,7 +355,7 @@ unsigned int TkDcuInfoFactory::setCurrentState(std::string partitionName, std::s
  *  \param states A list of state
  *  \return The new currentStateId
  */
-unsigned int TkDcuInfoFactory::setCurrentState(tkStateVector states) throw (FecExceptionHandler){
+unsigned int TkDcuInfoFactory::setCurrentState(tkStateVector states) noexcept(false){
   if (getDbConnected()) {
     try{
       unsigned int newStateId = dbAccess_->getNewStateHistoryId();
@@ -387,7 +387,7 @@ unsigned int TkDcuInfoFactory::setCurrentState(tkStateVector states) throw (FecE
  *  \param stateName The name of the chosen state
  *  \return The new current state ID
  */
-unsigned int TkDcuInfoFactory::setCurrentState(std::string stateName) throw (FecExceptionHandler){
+unsigned int TkDcuInfoFactory::setCurrentState(std::string stateName) noexcept(false){
   unsigned int updatedStateId;
   if (getDbConnected()) {
     try{
@@ -416,7 +416,7 @@ unsigned int TkDcuInfoFactory::setCurrentState(std::string stateName) throw (Fec
  * \return The new current state ID
  * \see DbCommonAccess::copyStateForRunNumber(unsigned int runNumber, bool allPartition)
  */
-unsigned int TkDcuInfoFactory::copyStateForRunNumber(unsigned int runNumber, bool allPartition) throw (FecExceptionHandler) {
+unsigned int TkDcuInfoFactory::copyStateForRunNumber(unsigned int runNumber, bool allPartition) noexcept(false) {
 
   if (getDbConnected()) {
     try{
@@ -442,7 +442,7 @@ unsigned int TkDcuInfoFactory::copyStateForRunNumber(unsigned int runNumber, boo
  *  \param partitionName The name of the chosen partition
  *  \return The list of dcuHardId to disable
  */  
-void TkDcuInfoFactory::disableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) throw (FecExceptionHandler){
+void TkDcuInfoFactory::disableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) noexcept(false){
   if (getDbConnected()) {
     try{
       dbAccess_->setDeviceState(partitionName, dcuHardId, 0);//0-> disable the devices
@@ -467,7 +467,7 @@ void TkDcuInfoFactory::disableDevice(std::string partitionName, std::vector<unsi
  *  \param partitionName The name of the chosen partition
  *  \return The list of dcuHardId to disable
  */  
-void TkDcuInfoFactory::enableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) throw (FecExceptionHandler){
+void TkDcuInfoFactory::enableDevice(std::string partitionName, std::vector<unsigned int> dcuHardId) noexcept(false){
   if (getDbConnected()) {
     try{
       dbAccess_->setDeviceState(partitionName, dcuHardId, 1);//1-> enable the devices
@@ -493,7 +493,7 @@ void TkDcuInfoFactory::enableDevice(std::string partitionName, std::vector<unsig
  *  \param runMode The mode of the run
  */
 
-void TkDcuInfoFactory::setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) throw (FecExceptionHandler){
+void TkDcuInfoFactory::setRun(std::string partitionName, unsigned int runNumber, int runMode, int local, std::string comment) noexcept(false){
   if (getDbConnected()) {
     try{
       dbAccess_->setRun(partitionName, runNumber, runMode, local, comment);
@@ -518,7 +518,7 @@ void TkDcuInfoFactory::setRun(std::string partitionName, unsigned int runNumber,
    *  \param partitionName The partition used for the run
    *  \param comment Modify the comment on the run if filled
    */
-void TkDcuInfoFactory::stopRun(std::string partitionName, std::string comment) throw (FecExceptionHandler){
+void TkDcuInfoFactory::stopRun(std::string partitionName, std::string comment) noexcept(false){
 if (getDbConnected()) {
     try{
       dbAccess_->stopRun(partitionName, comment);
@@ -544,7 +544,7 @@ if (getDbConnected()) {
  *  \param runNumber The number of the run
  */
 
-void TkDcuInfoFactory::setO2ORun(std::string partitionName, unsigned int runNumber) throw (FecExceptionHandler) {
+void TkDcuInfoFactory::setO2ORun(std::string partitionName, unsigned int runNumber) noexcept(false) {
   if (getDbConnected()) {
     try{
       dbAccess_->setO2ORun(partitionName, runNumber);
@@ -566,7 +566,7 @@ void TkDcuInfoFactory::setO2ORun(std::string partitionName, unsigned int runNumb
 /** 
  * \return the database version
  */
-double TkDcuInfoFactory::getDbVersion ( ) throw (FecExceptionHandler) {
+double TkDcuInfoFactory::getDbVersion ( ) noexcept(false) {
 
   double dbversion = 0 ;
   if (getDbConnected()) {
@@ -587,7 +587,7 @@ double TkDcuInfoFactory::getDbVersion ( ) throw (FecExceptionHandler) {
 /** 
  * \return the database size in Mbytes
  */
-double TkDcuInfoFactory::getDbSize ( ) throw (FecExceptionHandler) {
+double TkDcuInfoFactory::getDbSize ( ) noexcept(false) {
 
   double dbSize = 0 ;
   if (getDbConnected()) {
@@ -610,7 +610,7 @@ double TkDcuInfoFactory::getDbSize ( ) throw (FecExceptionHandler) {
  * \param runNumber The number of the run
  * \param newComment - new comment in the database
  */
-void TkDcuInfoFactory::updateRunComment(std::string partitionName, unsigned int runNumber, std::string newComment) throw (FecExceptionHandler){
+void TkDcuInfoFactory::updateRunComment(std::string partitionName, unsigned int runNumber, std::string newComment) noexcept(false){
   if (getDbConnected()) {
     try{
       dbAccess_->setNewComment(partitionName, runNumber, newComment);
@@ -632,7 +632,7 @@ void TkDcuInfoFactory::updateRunComment(std::string partitionName, unsigned int
 
 /** \brief Get the last run for the given partition
  */
-TkRun* TkDcuInfoFactory::getLastRun (std::string partitionName) throw (FecExceptionHandler){
+TkRun* TkDcuInfoFactory::getLastRun (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -651,7 +651,7 @@ TkRun* TkDcuInfoFactory::getLastRun (std::string partitionName) throw (FecExcept
 /** \brief Get the given run for the given partition
  *  \return a TkRun. YOU have to delete this object !
  */
-TkRun* TkDcuInfoFactory::getRun (std::string partitionName, int runNumber) throw (FecExceptionHandler){
+TkRun* TkDcuInfoFactory::getRun (std::string partitionName, int runNumber) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -669,7 +669,7 @@ TkRun* TkDcuInfoFactory::getRun (std::string partitionName, int runNumber) throw
 /** \brief Get all the runs from the DB.
  *  \return a tkRunVector. YOU have to delete this object !
  */
-tkRunVector TkDcuInfoFactory::getAllRuns () throw (FecExceptionHandler){
+tkRunVector TkDcuInfoFactory::getAllRuns () noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -686,7 +686,7 @@ tkRunVector TkDcuInfoFactory::getAllRuns () throw (FecExceptionHandler){
 /** \brief Get the last run used by O2O for the given partition
  *  \return a TkRun. YOU have to delete this object !
  */
-TkRun* TkDcuInfoFactory::getLastO2ORun (std::string partitionName) throw (FecExceptionHandler){
+TkRun* TkDcuInfoFactory::getLastO2ORun (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -704,7 +704,7 @@ TkRun* TkDcuInfoFactory::getLastO2ORun (std::string partitionName) throw (FecExc
 /** \brief Retrieve the partition names for a given run
  *  \return A list with all the partition names.
  */
-std::list<std::string> TkDcuInfoFactory::getAllPartitionNames( unsigned int runNumber ) throw (FecExceptionHandler) {
+std::list<std::string> TkDcuInfoFactory::getAllPartitionNames( unsigned int runNumber ) noexcept(false) {
 
   if (getDbConnected()) {
     try{
@@ -722,7 +722,7 @@ std::list<std::string> TkDcuInfoFactory::getAllPartitionNames( unsigned int runN
 /** \brief Retrieve the partition names from the current state
  *  \return A list with all the partition names.
  */
-std::list<std::string> TkDcuInfoFactory::getAllPartitionNamesFromCurrentState() throw (FecExceptionHandler){
+std::list<std::string> TkDcuInfoFactory::getAllPartitionNamesFromCurrentState() noexcept(false){
   if (getDbConnected()) {
     try{
       return dbAccess_->getAllPartitionNamesFromCurrentState();
@@ -739,7 +739,7 @@ std::list<std::string> TkDcuInfoFactory::getAllPartitionNamesFromCurrentState()
 /** \brief Retrieve the state names
  *  \return A list with all the state names. YOU have to delete that list!
  */
-std::list<std::string> TkDcuInfoFactory::getAllStateHistoryNames() throw (FecExceptionHandler){
+std::list<std::string> TkDcuInfoFactory::getAllStateHistoryNames() noexcept(false){
   if (getDbConnected()) {
     try{
       return dbAccess_->getAllStateHistoryNames();
@@ -756,7 +756,7 @@ std::list<std::string> TkDcuInfoFactory::getAllStateHistoryNames() throw (FecExc
 /** \brief Retrieve the state names
  *  \return A list with all the state names. YOU have to delete that list!
  */
-unsigned int TkDcuInfoFactory::getCurrentStateHistoryId() throw (FecExceptionHandler){
+unsigned int TkDcuInfoFactory::getCurrentStateHistoryId() noexcept(false){
   if (getDbConnected()) {
     try{
       return dbAccess_->getCurrentStateHistoryId();
@@ -773,7 +773,7 @@ unsigned int TkDcuInfoFactory::getCurrentStateHistoryId() throw (FecExceptionHan
 /** \brief Retrieve the partition names
  *  \return A list with all the partition names.
  */
-std::list<std::string> TkDcuInfoFactory::getAllPartitionNames() throw (FecExceptionHandler){
+std::list<std::string> TkDcuInfoFactory::getAllPartitionNames() noexcept(false){
   if (getDbConnected()) {
     try{
       return dbAccess_->getAllPartitionNames();
@@ -790,7 +790,7 @@ std::list<std::string> TkDcuInfoFactory::getAllPartitionNames() throw (FecExcept
 /** \brief Get all the Fec versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllFecVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllFecVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -807,7 +807,7 @@ tkVersionVector &TkDcuInfoFactory::getAllFecVersions (std::string partitionName)
 /** \brief Get all the Fed versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllFedVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllFedVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -824,7 +824,7 @@ tkVersionVector &TkDcuInfoFactory::getAllFedVersions (std::string partitionName)
 /** \brief Get all the Dcu Info versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllDcuInfoVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllDcuInfoVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -841,7 +841,7 @@ tkVersionVector &TkDcuInfoFactory::getAllDcuInfoVersions (std::string partitionN
 /** \brief Get all the Connection versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllConnectionVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllConnectionVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -858,7 +858,7 @@ tkVersionVector &TkDcuInfoFactory::getAllConnectionVersions (std::string partiti
 /** \brief Get all the DcuPsuMap versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllDcuPsuMapVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllDcuPsuMapVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -876,7 +876,7 @@ tkVersionVector &TkDcuInfoFactory::getAllDcuPsuMapVersions (std::string partitio
 /** \brief Get all the Mask versions
  *  \return An array of TkVersion. 
  */
-tkVersionVector &TkDcuInfoFactory::getAllMaskVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector &TkDcuInfoFactory::getAllMaskVersions (std::string partitionName) noexcept(false){
   if (getDbConnected()) {
     XMLTkDcuInfo xmlTkDcuInfo;
     xmlTkDcuInfo.setDatabaseAccess(dbAccess_) ;
@@ -898,7 +898,7 @@ tkVersionVector &TkDcuInfoFactory::getAllMaskVersions (std::string partitionName
  * \param forceDbReload - force the reload of the database
  */
 void TkDcuInfoFactory::addDetIdPartition ( std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId, bool cleanCache, bool forceDbReload )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // check if the partition should be re-downloaded
   if (forceDbReload) initDbVersion_ = false ;
@@ -985,7 +985,7 @@ void TkDcuInfoFactory::addDetIdPartition ( std::string partitionName, unsigned i
  * \warning the attribut partition name is set to ALL in that call
  */
 void TkDcuInfoFactory::addAllDetId( unsigned int majorVersionId, unsigned int minorVersionId, bool cleanCache, bool forceDbReload )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string partitionName = "ALL" ;
 
@@ -1077,7 +1077,7 @@ void TkDcuInfoFactory::addAllDetId( unsigned int majorVersionId, unsigned int mi
  * \return The TkDcuInfo object containing the informations
  */
 TkDcuInfo *TkDcuInfoFactory::getTkDcuInfo ( unsigned long dcuHardId )
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // No Dcu info exists in the map
   if (vDcuInfo_.find(dcuHardId) == vDcuInfo_.end()) { 
@@ -1092,7 +1092,7 @@ TkDcuInfo *TkDcuInfoFactory::getTkDcuInfo ( unsigned long dcuHardId )
  * \param dcuInfoVector - a vector of conversion factor
  */
 void TkDcuInfoFactory::setTkDcuInfo ( tkDcuInfoVector vDcuInfo ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -1126,7 +1126,7 @@ void TkDcuInfoFactory::setTkDcuInfo ( tkDcuInfoVector vDcuInfo )
 #ifdef DATABASE
 /** \brief Create a new version for the dcu infos
  */
-void TkDcuInfoFactory::createNewDcuInfoVersion() throw (FecExceptionHandler){
+void TkDcuInfoFactory::createNewDcuInfoVersion() noexcept(false){
   if (getDbConnected()) {
     try{
       dbAccess_->createNewDcuInfoVersion();
@@ -1151,7 +1151,7 @@ void TkDcuInfoFactory::createNewDcuInfoVersion() throw (FecExceptionHandler){
  * \param vInfo - a hash_map of conversion factors
  */
 void TkDcuInfoFactory::setTkDcuInfo ( Sgi::hash_map<unsigned long, TkDcuInfo *> vInfo ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   tkDcuInfoVector vDcuInfo ;
   for (Sgi::hash_map<unsigned long, TkDcuInfo *>::iterator itr = vInfo.begin() ; itr != vInfo.end() ; itr ++) {
@@ -1165,7 +1165,7 @@ void TkDcuInfoFactory::setTkDcuInfo ( Sgi::hash_map<unsigned long, TkDcuInfo *>
 /** Upload the description in the output (database or file) with the hash_map attribut of the class
  */
 void TkDcuInfoFactory::setTkDcuInfo ( ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   setTkDcuInfo (vDcuInfo_) ;
 }
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuPsuMap.cc b/FecSoftwareV3_0/generic/src/common/TkDcuPsuMap.cc
index e92e37b..7364fb4 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuPsuMap.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuPsuMap.cc
@@ -25,7 +25,7 @@
 
 /** Constructor
  */
-TkDcuPsuMap::TkDcuPsuMap ( tscType32 dcuHardId, std::string psuName, std::string psuType, keyType fecIndex, std::string dcuType ) throw (FecExceptionHandler):
+TkDcuPsuMap::TkDcuPsuMap ( tscType32 dcuHardId, std::string psuName, std::string psuType, keyType fecIndex, std::string dcuType ) noexcept(false):
   dcuHardId_(dcuHardId),
   psuType_(psuType),
   fecIndex_(fecIndex),
@@ -36,7 +36,7 @@ TkDcuPsuMap::TkDcuPsuMap ( tscType32 dcuHardId, std::string psuName, std::string
 
 /** Constructor with the parameter definition extracted from the database or XML file
  */
-TkDcuPsuMap::TkDcuPsuMap ( parameterDescriptionNameType parameterNames ) throw (FecExceptionHandler):
+TkDcuPsuMap::TkDcuPsuMap ( parameterDescriptionNameType parameterNames ) noexcept(false):
   dcuHardId_(0),
   dpName_(""),
   pvssName_(""),
@@ -71,7 +71,7 @@ tscType32 TkDcuPsuMap::getDcuHardId ( ) {
  * DB. This method will separate in two parts this name. If one error is detected then an exception is raised.
  * \param psuName - complete PSU name
  */
-void TkDcuPsuMap::setPsuName ( std::string psuName ) throw (FecExceptionHandler) {
+void TkDcuPsuMap::setPsuName ( std::string psuName ) noexcept(false) {
 
   std::string::size_type loc = psuName.find( COMMA, 0 );
   if (loc == std::string::npos) {
diff --git a/FecSoftwareV3_0/generic/src/common/TkDcuPsuMapFactory.cc b/FecSoftwareV3_0/generic/src/common/TkDcuPsuMapFactory.cc
index 4c7bec1..f1a8475 100755
--- a/FecSoftwareV3_0/generic/src/common/TkDcuPsuMapFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDcuPsuMapFactory.cc
@@ -70,7 +70,7 @@ TkDcuPsuMapFactory::TkDcuPsuMapFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 TkDcuPsuMapFactory::TkDcuPsuMapFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   DeviceFactoryInterface ( login, password, path, threaded ) {
   setDatabaseAccess ( login, password, path ) ;
 }
@@ -186,7 +186,7 @@ void TkDcuPsuMapFactory::setInputFileName ( std::string inputFileName ) {
  *
  * \exception a FecExceptionHanlder is raised in two cases, the file is invalid or the PSU name is invalid.
 */
-void TkDcuPsuMapFactory::setInputTextFile ( std::string inputFileName ) throw (FecExceptionHandler) {
+void TkDcuPsuMapFactory::setInputTextFile ( std::string inputFileName ) noexcept(false) {
 
 #define CONTROLCHANNELSSTART "CONTROL CHANNELS"
 #define POWERGROUPSSTART     "POWER GROUPS"
@@ -353,7 +353,7 @@ void TkDcuPsuMapFactory::setOutputPVSSFile ( tkDcuPsuMapVector dcuPsuMapResult,
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 void TkDcuPsuMapFactory::getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -397,7 +397,7 @@ void TkDcuPsuMapFactory::getPartitionVersion ( std::string partitionName, unsign
  * \warning in the destructor of TkDcuPsuMapFactory, the dbAccess is deleted
  */
 void TkDcuPsuMapFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -422,7 +422,7 @@ void TkDcuPsuMapFactory::setDatabaseAccess ( std::string login, std::string pass
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void TkDcuPsuMapFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -455,7 +455,7 @@ void TkDcuPsuMapFactory::setDatabaseAccess ( DbTkDcuPsuMapAccess *dbAccess ) {
  * \param versionMajorId - version major
  * \param versionMinorId - version minor
  */
-void TkDcuPsuMapFactory::getDcuPsuMapPartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+void TkDcuPsuMapFactory::getDcuPsuMapPartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
 
   // Empty the lists
   deleteVectorI (vCGDcuPsuMap_) ;
@@ -490,7 +490,7 @@ void TkDcuPsuMapFactory::getDcuPsuMapPartition (std::string partitionName, unsig
  * \param versionMajorId - version major
  * \param versionMinorId - version minor
  */
-void TkDcuPsuMapFactory::getPsuNotConnectedPartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+void TkDcuPsuMapFactory::getPsuNotConnectedPartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
 
   // Empty the list 
   deleteVectorI (vCGPsuNotConnected_) ;
@@ -523,7 +523,7 @@ void TkDcuPsuMapFactory::getPsuNotConnectedPartition (std::string partitionName,
  * \param versionMajorId - version major
  * \param versionMinorId - version minor
  */
-void TkDcuPsuMapFactory::getPsuNamePartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+void TkDcuPsuMapFactory::getPsuNamePartition (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
 
   bool error = false ;
   std::stringstream psuNameInError ;
@@ -554,7 +554,7 @@ void TkDcuPsuMapFactory::getPsuNamePartition (std::string partitionName, unsigne
  * \param versionMajor - output version major (only for database purpose)
  * \param versionMinor - output version minor (only for database purpose)
  */
-void TkDcuPsuMapFactory::setTkDcuPsuMap ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) throw ( FecExceptionHandler ) {
+void TkDcuPsuMapFactory::setTkDcuPsuMap ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -586,7 +586,7 @@ void TkDcuPsuMapFactory::setTkDcuPsuMap ( tkDcuPsuMapVector dcuPsuMap, std::stri
  * \param versionMajor - output version major (only for database purpose)
  * \param versionMinor - output version minor (only for database purpose)
  */
-void TkDcuPsuMapFactory::setTkPsuNames ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) throw ( FecExceptionHandler ) {
+void TkDcuPsuMapFactory::setTkPsuNames ( tkDcuPsuMapVector dcuPsuMap, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -621,7 +621,7 @@ void TkDcuPsuMapFactory::setTkPsuNames ( tkDcuPsuMapVector dcuPsuMap, std::strin
  * \param coolingLoopResult - result of cooling loops (pair with the name and the result (true = ok, false = not ok)
  * \return true if ok, false if not
  */
-bool TkDcuPsuMapFactory::checkTKCCCoolingLoop ( std::string partitionName, std::vector<std::pair<std::string, bool> > &coolingLoopResult ) throw ( FecExceptionHandler, oracle::occi::SQLException, std::string ) {
+bool TkDcuPsuMapFactory::checkTKCCCoolingLoop ( std::string partitionName, std::vector<std::pair<std::string, bool> > &coolingLoopResult ) noexcept(false) {
 
   DbTkDcuPsuMapAccess *dbAccess = (DbTkDcuPsuMapAccess *)this->getDatabaseAccess() ;
   bool result = true ;
diff --git a/FecSoftwareV3_0/generic/src/common/TkDiagErrorAnalyser.cc b/FecSoftwareV3_0/generic/src/common/TkDiagErrorAnalyser.cc
index 605ccb6..e9d8059 100644
--- a/FecSoftwareV3_0/generic/src/common/TkDiagErrorAnalyser.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkDiagErrorAnalyser.cc
@@ -31,14 +31,14 @@
  */
 TkDiagErrorAnalyser::TkDiagErrorAnalyser ( std::string partitionName, std::string login, std::string password, std::string path ) 
 #ifdef DATABASE
-  throw (oracle::occi::SQLException, FecExceptionHandler) {
+  noexcept(false) {
 
   if (login == "nil") DbAccess::getDbConfiguration (login, password, path) ;
 
   buildDatabaseInformation (partitionName, login, password, path) ;
 }
 #else
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   RAISEFECEXCEPTIONHANDLER (CODECONSISTENCYERROR, "Database support is not compiled, cannot use this class", FATALERRORCODE) ;
 }
@@ -66,7 +66,7 @@ TkDiagErrorAnalyser::~TkDiagErrorAnalyser ( ) {
  * \warning the number of det id (detIdList_) and the number of modules (listModulesAsConnection_) should be the same
  */
 void TkDiagErrorAnalyser::buildDatabaseInformation ( std::string partitionName, std::string login, std::string password, std::string path ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   // -----------------------------------------------------------------
   // Database creation
@@ -313,7 +313,7 @@ void TkDiagErrorAnalyser::buildDatabaseInformation ( std::string partitionName,
  * \param i2cAddress - i2c address (if NOLIFEINPARAMETER is set (default value) then just looking for the parameters before)
  * \exception a string saying the given hardware is not known
  */
-void TkDiagErrorAnalyser::setFecError ( std::string fecHardwareId, unsigned int ring, unsigned int ccu, unsigned int channel, unsigned int i2cAddress ) throw (std::string) {
+void TkDiagErrorAnalyser::setFecError ( std::string fecHardwareId, unsigned int ring, unsigned int ccu, unsigned int channel, unsigned int i2cAddress ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << __LINE__ << " " << __PRETTY_FUNCTION__ << ": set error on " 
@@ -490,7 +490,7 @@ void TkDiagErrorAnalyser::setFecError ( std::string fecHardwareId, unsigned int
  * \param fedChannel - FED channel (if NOLIFEINPARAMETER is set (default value) then just looking for the parameters before)
  * \exception a string saying the given hardware is not known
  */
-void TkDiagErrorAnalyser::setFedSoftIdError ( unsigned int fedSoftId, unsigned int fedChannel ) throw (std::string) {
+void TkDiagErrorAnalyser::setFedSoftIdError ( unsigned int fedSoftId, unsigned int fedChannel ) noexcept(false) {
 
 #ifdef DEBUGTIMING
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
@@ -553,7 +553,7 @@ void TkDiagErrorAnalyser::setFedSoftIdError ( unsigned int fedSoftId, unsigned i
  * \param fedChannel - FED channel (if NOLIFEINPARAMETER is set (default value) then just looking for the parameters before)
  * \exception a string saying the given hardware is not known
  */
-void TkDiagErrorAnalyser::setFedCrateIdError ( unsigned int crateId, unsigned int slot, unsigned int fedChannel ) throw (std::string) {
+void TkDiagErrorAnalyser::setFedCrateIdError ( unsigned int crateId, unsigned int slot, unsigned int fedChannel ) noexcept(false) {
 
 #ifdef DEBUGTIMING
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
@@ -595,7 +595,7 @@ void TkDiagErrorAnalyser::setFedCrateIdError ( unsigned int crateId, unsigned in
  * \param psuName - PVSS name (or dp name or Psu name)
  * \see TkDcuPsuMapDescription for more details
  */
-void TkDiagErrorAnalyser::setPsuError ( std::string psuName ) throw (std::string) {
+void TkDiagErrorAnalyser::setPsuError ( std::string psuName ) noexcept(false) {
 
 #ifdef DEBUGTIMING
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
@@ -632,7 +632,7 @@ void TkDiagErrorAnalyser::setPsuError ( std::string psuName ) throw (std::string
 /** Set an error for a given DCU hard ID
  * \param dcuHardId - DCU hard ID
  */
-void TkDiagErrorAnalyser::setDcuHardIdError ( unsigned int dcuHardId ) throw (std::string) {
+void TkDiagErrorAnalyser::setDcuHardIdError ( unsigned int dcuHardId ) noexcept(false) {
 
 #ifdef DEBUGTIMING
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
@@ -657,7 +657,7 @@ void TkDiagErrorAnalyser::setDcuHardIdError ( unsigned int dcuHardId ) throw (st
 /** Set an error for given det id 
  * \param detId - detector ID 
  */
-void TkDiagErrorAnalyser::setDetIdError ( unsigned int detId ) throw (std::string) {
+void TkDiagErrorAnalyser::setDetIdError ( unsigned int detId ) noexcept(false) {
 
 #ifdef DEBUGTIMING
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
diff --git a/FecSoftwareV3_0/generic/src/common/TkIdVsHostnameFactory.cc b/FecSoftwareV3_0/generic/src/common/TkIdVsHostnameFactory.cc
index 0826d9c..3636677 100755
--- a/FecSoftwareV3_0/generic/src/common/TkIdVsHostnameFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkIdVsHostnameFactory.cc
@@ -54,7 +54,7 @@ TkIdVsHostnameFactory::TkIdVsHostnameFactory ( ): DeviceFactoryInterface(), vers
 /** Build a TkIdVsHostname factory from database
  */
 TkIdVsHostnameFactory::TkIdVsHostnameFactory ( std::string login, std::string password, std::string path, bool threaded )
-  throw ( oracle::occi::SQLException ): 
+  noexcept(false): 
   DeviceFactoryInterface ( login, password, path, threaded ), versionMajorId_(0), versionMinorId_(0), hostname_("") {
   
   setDatabaseAccess ( login, password, path ) ;
@@ -126,7 +126,7 @@ TkIdVsHostnameVector TkIdVsHostnameFactory::generateVectorFromHashMap ( HashMapT
 
 /** Add a new file name in the descriptions
  */
-void TkIdVsHostnameFactory::addFileName ( std::string fileName ) throw (FecExceptionHandler) {
+void TkIdVsHostnameFactory::addFileName ( std::string fileName ) noexcept(false) {
 
   // Parsing
   XMLTkIdVsHostname xmlTkIdVsHostname ( fileName ) ;
@@ -148,7 +148,7 @@ void TkIdVsHostnameFactory::addFileName ( std::string fileName ) throw (FecExcep
 
 /** set a new input file
  */
-void TkIdVsHostnameFactory::setInputFileName ( std::string inputFileName ) throw (FecExceptionHandler) {
+void TkIdVsHostnameFactory::setInputFileName ( std::string inputFileName ) noexcept(false) {
 
   // delete the old data
   deleteHashMapTkIdVsHostname() ;
@@ -168,7 +168,7 @@ void TkIdVsHostnameFactory::setInputFileName ( std::string inputFileName ) throw
 /** Create the database access
  */
 void TkIdVsHostnameFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -190,7 +190,7 @@ void TkIdVsHostnameFactory::setDatabaseAccess ( std::string login, std::string p
   
 /** Create the database access with the configuration given by the env. variable CONFDB
  */
-void TkIdVsHostnameFactory::setDatabaseAccess ( ) throw ( oracle::occi::SQLException ) {
+void TkIdVsHostnameFactory::setDatabaseAccess ( ) noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -221,9 +221,9 @@ void TkIdVsHostnameFactory::setDatabaseAccess ( DbTkIdVsHostnameAccess *dbAccess
  */
 TkIdVsHostnameVector TkIdVsHostnameFactory::getAllTkIdVsHostname ( unsigned int versionMajorId, unsigned int versionMinorId, bool forceDbReload ) 
 #ifdef DATABASE
-  throw ( FecExceptionHandler, oracle::occi::SQLException  ) {
+  noexcept(false) {
 #else
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
 #ifdef DEBUGMSGERROR
@@ -301,9 +301,9 @@ TkIdVsHostnameVector TkIdVsHostnameFactory::getAllTkIdVsHostname ( unsigned int
  */
 TkIdVsHostnameVector TkIdVsHostnameFactory::getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajorId, unsigned int versionMinorId, bool forceDbReload ) 
 #ifdef DATABASE
-  throw ( FecExceptionHandler, oracle::occi::SQLException  ) {
+  noexcept(false) {
 #else
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
   TkIdVsHostnameVector v ;
@@ -378,9 +378,9 @@ TkIdVsHostnameVector TkIdVsHostnameFactory::getAllTkIdFromHostname ( std::string
  */
 TkIdVsHostnameDescription *TkIdVsHostnameFactory::getAllTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajorId, unsigned int versionMinorId, bool forceDbReload ) 
 #ifdef DATABASE
-  throw ( FecExceptionHandler, oracle::occi::SQLException  ) {
+  noexcept(false) {
 #else
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
   TkIdVsHostnameDescription *tkIdVsHostnameDescription = NULL ;
@@ -426,9 +426,9 @@ TkIdVsHostnameDescription *TkIdVsHostnameFactory::getAllTkIdFromHostnameSlot ( s
  */
 void TkIdVsHostnameFactory::getSubDetectorCrateNumberFromHostname ( std::string hostname, std::string &subDetector, unsigned int &crateNumber, unsigned int versionMajorId, unsigned int versionMinorId, bool forceDbReload ) 
 #ifdef DATABASE
-  throw ( FecExceptionHandler, oracle::occi::SQLException  ) {
+  noexcept(false) {
 #else
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 #endif
 
   // We consider here that the subdetector cannot change between two uploads
@@ -452,7 +452,7 @@ void TkIdVsHostnameFactory::getSubDetectorCrateNumberFromHostname ( std::string
 /** Upload a new version of TkIdVsHostnameDescriptions
  */
 void TkIdVsHostnameFactory::setTkIdVsHostnameDescription ( TkIdVsHostnameVector tkDcuConversionFactors, bool major ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 #  ifdef DATABASE
@@ -485,7 +485,7 @@ void TkIdVsHostnameFactory::setTkIdVsHostnameDescription ( TkIdVsHostnameVector
 /** upload the hash_map (attribut of the class) in the output
  */
 void TkIdVsHostnameFactory::setTkIdVsHostnameDescription ( bool major  ) 
-  throw ( FecExceptionHandler ) {
+  noexcept(false) {
 
   TkIdVsHostnameVector v = generateVectorFromHashMap ( vIdVsHostname_ ) ;
   TkIdVsHostnameFactory::setTkIdVsHostnameDescription ( v ) ;
@@ -496,7 +496,7 @@ void TkIdVsHostnameFactory::setTkIdVsHostnameDescription ( bool major  )
  * \return the FED crate
  * \warning the information should be present in the memory before calling it
  */
-unsigned int TkIdVsHostnameFactory::getFedCrate ( unsigned int fedId ) throw ( FecExceptionHandler ) {
+unsigned int TkIdVsHostnameFactory::getFedCrate ( unsigned int fedId ) noexcept(false) {
 
   unsigned int crateId = 0xFFFFFFFF ;
 
@@ -519,7 +519,7 @@ unsigned int TkIdVsHostnameFactory::getFedCrate ( unsigned int fedId ) throw ( F
  * \return the FED slot
  * \warning the information should be present in the memory before calling it
  */
-unsigned int TkIdVsHostnameFactory::getFedSlot ( unsigned int fedId ) throw ( FecExceptionHandler ) {
+unsigned int TkIdVsHostnameFactory::getFedSlot ( unsigned int fedId ) noexcept(false) {
 
   unsigned int crateSlot = 0xFFFFFFFF ;
 
diff --git a/FecSoftwareV3_0/generic/src/common/TkMaskModulesFactory.cc b/FecSoftwareV3_0/generic/src/common/TkMaskModulesFactory.cc
index 8d9188b..e72f9da 100644
--- a/FecSoftwareV3_0/generic/src/common/TkMaskModulesFactory.cc
+++ b/FecSoftwareV3_0/generic/src/common/TkMaskModulesFactory.cc
@@ -59,7 +59,7 @@ TkMaskModulesFactory::TkMaskModulesFactory ( ):
  * \param threaded - this parameter define if you want or not to share the connections between all applications (by default false)
  */
 TkMaskModulesFactory::TkMaskModulesFactory ( std::string login, std::string password, std::string path, bool threaded ) 
-  throw ( oracle::occi::SQLException ):
+  noexcept(false):
   DeviceFactoryInterface ( login, password, path, threaded ) {
   setDatabaseAccess ( login, password, path ) ;
 }
@@ -119,7 +119,7 @@ void TkMaskModulesFactory::setInputFileName ( std::string inputFileName ) {
  * Note that the method returns always a pointer allocated but the list can be empty
  */
 void TkMaskModulesFactory::getPartitionVersion ( std::string partitionName, unsigned int *major, unsigned int *minor, unsigned int *partitionNumber ) 
-  throw (oracle::occi::SQLException, FecExceptionHandler ) {
+  noexcept(false) {
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -133,7 +133,7 @@ void TkMaskModulesFactory::getPartitionVersion ( std::string partitionName, unsi
  * \warning in the destructor of TkMaskModulesFactory, the dbAccess is deleted
  */
 void TkMaskModulesFactory::setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   // For FEC database delete the old one if needed
   if (dbAccess_ != NULL)
@@ -158,7 +158,7 @@ void TkMaskModulesFactory::setDatabaseAccess ( std::string login, std::string pa
  * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
  */
 void TkMaskModulesFactory::setDatabaseAccess ( ) 
-  throw ( oracle::occi::SQLException ) {
+  noexcept(false) {
 
   std::string login, password, path ;
   if (getDatabaseConfiguration(login, password, path)) {
@@ -194,7 +194,7 @@ void TkMaskModulesFactory::setDatabaseAccess ( DbTkMaskModulesAccess *dbAccess )
  * \param pVersionMinor - mask version minor ID
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  */
-void TkMaskModulesFactory::getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void TkMaskModulesFactory::getCurrentMaskVersion ( std::string pPartitionName, unsigned int *pPartitionId, unsigned int *pVersionMajor, unsigned int *pVersionMinor ) noexcept(false) {
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -207,7 +207,7 @@ void TkMaskModulesFactory::getCurrentMaskVersion ( std::string pPartitionName, u
  * \param pVersionMinor - mask version minor ID
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::copyMask
  */
-void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int pVersionMajor, unsigned int pVersionMinor, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -219,7 +219,7 @@ void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int p
  * \param pPartitionName - partition name*
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::copyMask
  */
-void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -231,7 +231,7 @@ void TkMaskModulesFactory::copyMask ( std::string pPartitionName, unsigned int *
  * \param pPartitionName - partition name
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::resetMask
  */
-void TkMaskModulesFactory::resetMask ( std::string pPartitionName) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::resetMask ( std::string pPartitionName) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -244,7 +244,7 @@ void TkMaskModulesFactory::resetMask ( std::string pPartitionName) throw (oracle
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -258,7 +258,7 @@ void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -273,7 +273,7 @@ void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFedModules
  */
-void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned int pFedSoftId, unsigned int pFedChannel, unsigned int pApvFed, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -287,7 +287,7 @@ void TkMaskModulesFactory::maskFedModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -301,7 +301,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -316,7 +316,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::str
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -331,7 +331,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -347,7 +347,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::str
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -363,7 +363,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -380,7 +380,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::str
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -397,7 +397,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -415,7 +415,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::str
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned int pFecSlot, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -433,7 +433,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, unsigned
  * \param newMajorVersion - 1 means that you create a new version, 0 means you add to the current state the devices to be disabled
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::string pFecHardId, unsigned int pRing, unsigned int pCcuAddress, unsigned int pChannel, unsigned int pAddress, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -448,7 +448,7 @@ void TkMaskModulesFactory::maskFecModules ( std::string pPartitionName, std::str
  * \see maskFecModules ( std::string pPartitionName, pFecHardId, pRing, pCcuAddress, pChannel, unsigned int newMajorVersion )
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskDcuModule ( std::string pPartitionName, unsigned int pDcuHardId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -463,7 +463,7 @@ void TkMaskModulesFactory::maskDcuModule ( std::string pPartitionName, unsigned
  * \see maskDcuModule ( std::string pPartitionName, dcuHardId, unsigned int newMajorVersion);
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) { 
+void TkMaskModulesFactory::maskDetIdModule ( std::string pPartitionName, unsigned int pDetId, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) { 
 
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
 
@@ -478,7 +478,7 @@ void TkMaskModulesFactory::maskDetIdModule ( std::string pPartitionName, unsigne
  * \see maskDcuModule ( std::string pPartitionName, dcuHardId, unsigned int newMajorVersion);
  * \see Database/Packages/src/PkgMaskModules.sql, PkgMaskModules::maskFecModules
  */
-void TkMaskModulesFactory::maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) throw (oracle::occi::SQLException, FecExceptionHandler) {
+void TkMaskModulesFactory::maskPsuNameModules ( std::string pPartitionName, std::string pPsuName, unsigned int newMajorVersion, unsigned int *outMaskVersionMajor, unsigned int *outMaskVersionMinor) noexcept(false) {
   
   if (dbAccess_ == NULL) RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, DB_NOTCONNECTED_MSG, FATALERRORCODE) ;
   
diff --git a/FecSoftwareV3_0/generic/src/common/XMLCommissioningAnalysis.cc b/FecSoftwareV3_0/generic/src/common/XMLCommissioningAnalysis.cc
index 7a9ef8f..a065583 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLCommissioningAnalysis.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLCommissioningAnalysis.cc
@@ -19,24 +19,24 @@ const char *XMLCommissioningAnalysis::RUNVERSION[] = {"runNumber","versionMajorI
 
 
 //----------------------------------
-XMLCommissioningAnalysis::XMLCommissioningAnalysis() throw (FecExceptionHandler) : XMLCommonFec () {
+XMLCommissioningAnalysis::XMLCommissioningAnalysis() noexcept(false) : XMLCommonFec () {
   _init();
 }
 
 //----------------------------------
-XMLCommissioningAnalysis::XMLCommissioningAnalysis( const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ) {
+XMLCommissioningAnalysis::XMLCommissioningAnalysis( const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ) {
   _init();
 }
 
 #ifdef DATABASE
 //----------------------------------
-XMLCommissioningAnalysis::XMLCommissioningAnalysis( DbCommissioningAnalysisAccess *dbAccess )throw (FecExceptionHandler) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
+XMLCommissioningAnalysis::XMLCommissioningAnalysis( DbCommissioningAnalysisAccess *dbAccess )noexcept(false) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
   _init();
 }
 #endif
 
 //----------------------------------
-XMLCommissioningAnalysis::XMLCommissioningAnalysis( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLCommissioningAnalysis::XMLCommissioningAnalysis( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
   _init();
   parseXMLBuffer();
 }
@@ -249,7 +249,7 @@ std::vector<CommissioningAnalysisDescription*> XMLCommissioningAnalysis::getDesc
 }
 
 //----------------------------------
-void XMLCommissioningAnalysis::setDescriptions( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType type ) throw (FecExceptionHandler) {
+void XMLCommissioningAnalysis::setDescriptions( std::vector<CommissioningAnalysisDescription*> &inVector, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
   clearVector();
   _currentCommissioningType = type;
   std::cout << "SET DESCRIPTIONS:" << inVector.size() << " TYPE:" << CommissioningAnalysisDescription::getAnalysisType(type) << std::endl;
@@ -260,7 +260,7 @@ void XMLCommissioningAnalysis::setDescriptions( std::vector<CommissioningAnalysi
 }
 
 //----------------------------------
-void XMLCommissioningAnalysis::uploadAnalysis( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLCommissioningAnalysis::uploadAnalysis( std::string outputFileName ) noexcept(false) {
   if ( _dVector.size() ) {
     MemBufOutputSource memBufOS( _dVector, _currentCommissioningType, false );
     XMLCommonFec::writeXMLFile( memBufOS.getOutputBuffer()->str(), outputFileName );
@@ -272,7 +272,7 @@ void XMLCommissioningAnalysis::uploadAnalysis( std::string outputFileName ) thro
 
 
 //----------------------------------
-uint32_t XMLCommissioningAnalysis::uploadAnalysis( bool updateCurrentState ) throw ( FecExceptionHandler ) {
+uint32_t XMLCommissioningAnalysis::uploadAnalysis( bool updateCurrentState ) noexcept(false) {
 #ifndef DATABASE
   return 0;
 #else
@@ -298,7 +298,7 @@ uint32_t XMLCommissioningAnalysis::uploadAnalysis( bool updateCurrentState ) thr
 
 //----------------------------------
 std::vector<CommissioningAnalysisDescription*> XMLCommissioningAnalysis::getCalibrationData( uint32_t runNumber,
-											     std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+											     std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 #ifndef DATABASE
   {
     RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, "Database support not compiled", FATALERRORCODE) ;
@@ -356,7 +356,7 @@ std::vector<CommissioningAnalysisDescription*> XMLCommissioningAnalysis::getCali
 
 
 //----------------------------------
-HashMapRunVersion XMLCommissioningAnalysis::getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+HashMapRunVersion XMLCommissioningAnalysis::getAnalysisHistory( std::string partitionName, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 #ifndef DATABASE
   {
     RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, "Database support not compiled", FATALERRORCODE) ;
@@ -415,7 +415,7 @@ HashMapRunVersion XMLCommissioningAnalysis::getAnalysisHistory( std::string part
 
 //----------------------------------
 std::vector<CommissioningAnalysisDescription*> XMLCommissioningAnalysis::getAnalysisHistory( std::string partitionName,
-											     uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) throw ( FecExceptionHandler ) {
+											     uint32_t versionMajorID, uint32_t versionMinorID, CommissioningAnalysisDescription::commissioningType type ) noexcept(false) {
 #ifndef DATABASE
   {
     RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, "Database support not compiled", FATALERRORCODE) ;	
@@ -473,7 +473,7 @@ std::vector<CommissioningAnalysisDescription*> XMLCommissioningAnalysis::getAnal
 
 
 //----------------------------------
-HashMapAnalysisVersions XMLCommissioningAnalysis::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) throw ( FecExceptionHandler ) {
+HashMapAnalysisVersions XMLCommissioningAnalysis::getLocalAnalysisVersions( uint32_t globalAnalysisVersion ) noexcept(false) {
 #ifndef DATABASE
   {
     RAISEFECEXCEPTIONHANDLER (DB_NOTCONNECTED, "Database support not compiled", FATALERRORCODE) ;
diff --git a/FecSoftwareV3_0/generic/src/common/XMLCommonFec.cc b/FecSoftwareV3_0/generic/src/common/XMLCommonFec.cc
index d2990b8..85b26dd 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLCommonFec.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLCommonFec.cc
@@ -78,7 +78,7 @@ XMLCommonFec::XMLCommonFec (DbCommonAccess *dbAccess):
 
 /** \brief Constructor with xml buffer
  */
-XMLCommonFec::XMLCommonFec ( const XMLByte* buffer, bool toBeDeleted ) throw (FecExceptionHandler):
+XMLCommonFec::XMLCommonFec ( const XMLByte* buffer, bool toBeDeleted ) noexcept(false):
 
   domImplementation_(NULL),
   parser_(NULL),
@@ -92,7 +92,7 @@ XMLCommonFec::XMLCommonFec ( const XMLByte* buffer, bool toBeDeleted ) throw (Fe
 
   /** \brief Constructor with file access
    */
-XMLCommonFec::XMLCommonFec ( std::string xmlFileName ) throw (FecExceptionHandler) :
+XMLCommonFec::XMLCommonFec ( std::string xmlFileName ) noexcept(false) :
 
   domImplementation_(NULL),
   parser_(NULL),
@@ -129,7 +129,7 @@ XMLCommonFec::~XMLCommonFec (){
 
   /** \brief Parses the xml Buffer using DOM interface
    */
-void XMLCommonFec::parseXMLBuffer( ) throw (FecExceptionHandler) {
+void XMLCommonFec::parseXMLBuffer( ) noexcept(false) {
 
   clearVector();
   // -----------------------------------------------------
@@ -152,7 +152,7 @@ void XMLCommonFec::parseXMLBuffer( ) throw (FecExceptionHandler) {
 }
   /** \brief Return the non fatal parsing error number
    */
-int XMLCommonFec::getParseErrorCount( ) throw (FecExceptionHandler){
+int XMLCommonFec::getParseErrorCount( ) noexcept(false){
 
   if (domCountErrorHandler_ != NULL) 
     return domCountErrorHandler_->getSawErrors() ;
@@ -162,7 +162,7 @@ int XMLCommonFec::getParseErrorCount( ) throw (FecExceptionHandler){
 
   /** \brief Return the non fatal parsing error messages
    */
-std::vector<std::string> *XMLCommonFec::getParseErrorMessages( ) throw (FecExceptionHandler){
+std::vector<std::string> *XMLCommonFec::getParseErrorMessages( ) noexcept(false){
 
   if (domCountErrorHandler_ != NULL) 
     return domCountErrorHandler_->getErrorMessages() ;
@@ -173,7 +173,7 @@ std::vector<std::string> *XMLCommonFec::getParseErrorMessages( ) throw (FecExcep
 
   /** \brief Writes the parameter values into an XML file
    */
-void XMLCommonFec::writeXMLFile(std::string xmlBuffer, std::string xmlFileName) throw (FecExceptionHandler){
+void XMLCommonFec::writeXMLFile(std::string xmlBuffer, std::string xmlFileName) noexcept(false){
   if (FileHandle toWriteFileHandle =  XMLPlatformUtils::openFileToWrite(xmlFileName.c_str())) {
       XMLPlatformUtils::writeBufferToFile(toWriteFileHandle, xmlBuffer.size(), (const XMLByte *)(xmlBuffer.c_str()));
       XMLPlatformUtils::closeFile(toWriteFileHandle);
@@ -203,7 +203,7 @@ std::string XMLCommonFec::getDatabaseRequest () {
 
 #endif
 
-void XMLCommonFec::init() throw (FecExceptionHandler){
+void XMLCommonFec::init() noexcept(false){
 
   //std::cout << "Using DOM parser" << std::endl ;
   pthread_mutex_lock(&mutexXMLInit_);
@@ -218,7 +218,7 @@ void XMLCommonFec::init() throw (FecExceptionHandler){
   /**
    * \brief Reads the parameter values from an XML buffer
    */
-void XMLCommonFec::readXMLBuffer(const XMLByte* buffer) throw (FecExceptionHandler){
+void XMLCommonFec::readXMLBuffer(const XMLByte* buffer) noexcept(false){
 
   std::string xmlBufferId = "theXMLBuffer";
   //std::cout<<"readXMLBuffer"<<std::endl;
@@ -259,7 +259,7 @@ void XMLCommonFec::readXMLBuffer(const XMLByte* buffer) throw (FecExceptionHandl
 /**
  * \brief Reads the parameter values from an XML file
  */
-void XMLCommonFec::readXMLFile(std::string xmlFileName) throw (FecExceptionHandler){
+void XMLCommonFec::readXMLFile(std::string xmlFileName) noexcept(false){
 
   XMLCh* fileName = XMLString::transcode(xmlFileName.c_str());
   XMLURL urlFileName = XMLURL(fileName);
@@ -291,7 +291,7 @@ void XMLCommonFec::readXMLFile(std::string xmlFileName) throw (FecExceptionHandl
   /**
    * \brief Creates a SAX parser
    */
-void XMLCommonFec::createParser() throw (FecExceptionHandler){
+void XMLCommonFec::createParser() noexcept(false){
 
   try {
     // Instantiate the DOM parser.
@@ -386,7 +386,7 @@ InputSource *XMLCommonFec::createInputSource(oracle::occi::Clob *xmlClob, std::s
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess has not been intialized
  */
-void XMLCommonFec::parseDatabaseResponse ()  throw (FecExceptionHandler) {
+void XMLCommonFec::parseDatabaseResponse ()  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromFecHardId";
 
diff --git a/FecSoftwareV3_0/generic/src/common/XMLConnection.cc b/FecSoftwareV3_0/generic/src/common/XMLConnection.cc
index 8f5c904..edefb90 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLConnection.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLConnection.cc
@@ -42,7 +42,7 @@ using namespace XERCES_CPP_NAMESPACE;
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::XMLCommonFec()</I>
  */
-XMLConnection::XMLConnection () throw (FecExceptionHandler) :
+XMLConnection::XMLConnection () noexcept(false) :
   XMLCommonFec () {
 
   countConnections_ = 0 ;
@@ -56,7 +56,7 @@ XMLConnection::XMLConnection () throw (FecExceptionHandler) :
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::XMLCommonFec(const XMLByte* xmlBuffer)</I>
  */
-XMLConnection::XMLConnection ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ){
+XMLConnection::XMLConnection ( const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ){
 
   countConnections_ = 0 ;
   parameterNames_ = ConnectionDescription::getParameterNames() ;
@@ -71,7 +71,7 @@ XMLConnection::XMLConnection ( const XMLByte* xmlBuffer ) throw (FecExceptionHan
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLConnection::init()</I>
  */
-XMLConnection::XMLConnection ( DbConnectionsAccess *dbAccess ) throw (FecExceptionHandler) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
+XMLConnection::XMLConnection ( DbConnectionsAccess *dbAccess ) noexcept(false) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
 
   countConnections_ = 0 ;
   parameterNames_ = ConnectionDescription::getParameterNames() ;
@@ -86,7 +86,7 @@ XMLConnection::XMLConnection ( DbConnectionsAccess *dbAccess ) throw (FecExcepti
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLConnection::init()</I>
  */
-XMLConnection::XMLConnection ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLConnection::XMLConnection ( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
 
   countConnections_ = 0 ;
   parameterNames_ = ConnectionDescription::getParameterNames() ;
@@ -171,7 +171,7 @@ unsigned int XMLConnection::parseAttributes( XERCES_CPP_NAMESPACE::DOMNode *n )
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLConnection::parseDatabaseResponse(std::string partitionName) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
   
@@ -236,7 +236,7 @@ void XMLConnection::parseDatabaseResponse(std::string partitionName)
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLConnection::parseDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor, bool retrieveApvNotConnected) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
   
@@ -302,7 +302,7 @@ void XMLConnection::parseDatabaseResponse(std::string partitionName, unsigned in
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-ConnectionVector XMLConnection::getConnections (std::string partitionName) throw (FecExceptionHandler) {
+ConnectionVector XMLConnection::getConnections (std::string partitionName) noexcept(false) {
 
 #ifdef DATABASEDEBUG
   unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
@@ -333,7 +333,7 @@ ConnectionVector XMLConnection::getConnections (std::string partitionName) throw
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-ConnectionVector XMLConnection::getConnections (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) throw (FecExceptionHandler) {
+ConnectionVector XMLConnection::getConnections (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId, unsigned int maskVersionMajor, unsigned int maskVersionMinor) noexcept(false) {
   parseDatabaseResponse(partitionName,versionMajorId,versionMinorId,maskVersionMajor,maskVersionMinor,false);
   parseXMLBuffer();
   return connectionVector_;
@@ -348,7 +348,7 @@ ConnectionVector XMLConnection::getConnections (std::string partitionName, unsig
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-ConnectionVector XMLConnection::getApvNotConnected (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (FecExceptionHandler) {
+ConnectionVector XMLConnection::getApvNotConnected (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
   parseDatabaseResponse(partitionName,versionMajorId,versionMinorId,0,0,true);
   parseXMLBuffer();
   return apvNotConnectedVector_;
@@ -360,7 +360,7 @@ ConnectionVector XMLConnection::getApvNotConnected (std::string partitionName, u
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLConnection::parseXMLBuffer()
  */
-ConnectionVector XMLConnection::getConnections () throw (FecExceptionHandler) {
+ConnectionVector XMLConnection::getConnections () noexcept(false) {
 
   parseXMLBuffer();
   return connectionVector_;
@@ -374,7 +374,7 @@ ConnectionVector XMLConnection::getConnections () throw (FecExceptionHandler) {
  *     - the MemBufOutputSource created from the parameter <I>dVector</I> is not initialized 
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLConnection::setFileConnections ( ConnectionVector connectionVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLConnection::setFileConnections ( ConnectionVector connectionVector, std::string outputFileName) noexcept(false) {
 
   MemBufOutputSource memBufOS (connectionVector, false) ;
 
@@ -385,7 +385,7 @@ void XMLConnection::setFileConnections ( ConnectionVector connectionVector, std:
  * @param outputFileName - name of the output xml file
  * @exception FecExceptionHandler
  */
-void XMLConnection::setFileConnections ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLConnection::setFileConnections ( std::string outputFileName ) noexcept(false) {
   setFileConnections( connectionVector_, outputFileName);
 }
 
@@ -396,7 +396,7 @@ void XMLConnection::setFileConnections ( std::string outputFileName ) throw (Fec
  * \param cVector - connection vector
  * \param versionUpdate - 1 for a new major version, 0 for a new minor version
    */
-void XMLConnection::setDbConnectionDescription ( std::string partitionName, ConnectionVector connectionVector, unsigned int versionUpdate ) throw (FecExceptionHandler, oracle::occi::SQLException) {
+void XMLConnection::setDbConnectionDescription ( std::string partitionName, ConnectionVector connectionVector, unsigned int versionUpdate ) noexcept(false) {
 
   MemBufOutputSource memBufOS (connectionVector,true) ;
 
@@ -415,7 +415,7 @@ void XMLConnection::setDbConnectionDescription ( std::string partitionName, Conn
  * \param partitionName - partition name
  * \param versionUpdate - 1 for a new major version, 0 for a new minor version
  */
-void XMLConnection::setDbConnectionDescription ( std::string partitionName, unsigned int versionUpdate ) throw (FecExceptionHandler, oracle::occi::SQLException) {
+void XMLConnection::setDbConnectionDescription ( std::string partitionName, unsigned int versionUpdate ) noexcept(false) {
 
   setDbConnectionDescription ( partitionName, connectionVector_, versionUpdate ) ;
 }
diff --git a/FecSoftwareV3_0/generic/src/common/XMLFec.cc b/FecSoftwareV3_0/generic/src/common/XMLFec.cc
index 99996d0..083f7f0 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLFec.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLFec.cc
@@ -63,7 +63,7 @@ XMLFec::XMLFec () :
  * @see init()
  * @exception FecExceptionHandler
  */
-XMLFec::XMLFec (DbAccess *dbAccess) throw (FecExceptionHandler) :
+XMLFec::XMLFec (DbAccess *dbAccess) noexcept(false) :
   XMLCommonFec((DbCommonAccess *)dbAccess),
   countPLL(0), countAPV25(0), countDCUCCU(0), countDCUFEH(0), countAPVMUX(0), countPIA(0), countAOH(0), countDOH(0)
 {
@@ -78,7 +78,7 @@ XMLFec::XMLFec (DbAccess *dbAccess) throw (FecExceptionHandler) :
  * @see init()
  * @exception FecExceptionHandler
  */
-XMLFec::XMLFec (const XMLByte* buffer) throw (FecExceptionHandler) :
+XMLFec::XMLFec (const XMLByte* buffer) noexcept(false) :
   XMLCommonFec(buffer),countPLL(0), countAPV25(0), countDCUCCU(0), countDCUFEH(0), countAPVMUX(0), countPIA(0), countAOH(0), countDOH(0)
 {
 }
@@ -91,7 +91,7 @@ XMLFec::XMLFec (const XMLByte* buffer) throw (FecExceptionHandler) :
  * @see init()
  * @exception FecExceptionHandler
  */
-XMLFec::XMLFec (std::string xmlFileName) throw (FecExceptionHandler) :
+XMLFec::XMLFec (std::string xmlFileName) noexcept(false) :
   XMLCommonFec(xmlFileName),
   countPLL(0), countAPV25(0), countDCUCCU(0), countDCUFEH(0), countAPVMUX(0), countPIA(0), countAOH(0), countDOH(0)
 {
@@ -115,7 +115,7 @@ XMLFec::~XMLFec () {
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLFec::parseDatabaseResponse ( std::string partitionName ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
@@ -185,7 +185,7 @@ void XMLFec::parseDatabaseResponse ( std::string partitionName )
  *    - the dataBaseAccess has not been intialized
  */
 void XMLFec::parseDatabaseResponse ( std::string partitionName, std::string fecHardId ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromFecHardId";
 
 #ifdef DATABASEDEBUG
@@ -248,7 +248,7 @@ void XMLFec::parseDatabaseResponse ( std::string partitionName, std::string fecH
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLFec::parseDatabaseResponse (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int maskVersionMajor, unsigned int maskVersionMinor ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionNameVersion";
 
@@ -319,7 +319,7 @@ void XMLFec::parseDatabaseResponse (std::string partitionName, unsigned int vers
  *    - the dataBaseAccess has not been intialized
  */
 void XMLFec::parseDatabaseResponse ( std::string partitionName, std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromIpNumberXdaqInstanceClassName";
 
 #ifdef DATABASEDEBUG
diff --git a/FecSoftwareV3_0/generic/src/common/XMLFecCcu.cc b/FecSoftwareV3_0/generic/src/common/XMLFecCcu.cc
index 20d3bb8..1c8397f 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLFecCcu.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLFecCcu.cc
@@ -42,7 +42,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLFec::XMLFec()</I>
  * @see <I>XMLFecCcu::init()</I>
  */
-XMLFecCcu::XMLFecCcu () throw (FecExceptionHandler) :
+XMLFecCcu::XMLFecCcu () noexcept(false) :
   XMLCommonFec () 
 {
   countCCU_ = 0 ;
@@ -59,7 +59,7 @@ XMLFecCcu::XMLFecCcu () throw (FecExceptionHandler) :
  * @exception FecExceptionHandler
  * @see <I>XMLFecCcu::init()</I>
  */
-XMLFecCcu::XMLFecCcu ( DbFecAccess *dbAccess ) throw (FecExceptionHandler)  : XMLCommonFec((DbCommonAccess *)dbAccess) {
+XMLFecCcu::XMLFecCcu ( DbFecAccess *dbAccess ) noexcept(false)  : XMLCommonFec((DbCommonAccess *)dbAccess) {
   countCCU_ = 0 ;
   countRing_ = 0 ;
   parameterCCUNames_  = CCUDescription::getParameterNames() ;
@@ -75,7 +75,7 @@ XMLFecCcu::XMLFecCcu ( DbFecAccess *dbAccess ) throw (FecExceptionHandler)  : XM
  * @see <I>XMLFec::XMLFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLFecCcu::init()</I>
  */
-XMLFecCcu::XMLFecCcu (const XMLByte *xmlBuffer, bool toBeDeleted) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer, toBeDeleted ) {
+XMLFecCcu::XMLFecCcu (const XMLByte *xmlBuffer, bool toBeDeleted) noexcept(false) : XMLCommonFec( xmlBuffer, toBeDeleted ) {
   
   countCCU_ = 0 ;
   countRing_ = 0 ;
@@ -91,7 +91,7 @@ XMLFecCcu::XMLFecCcu (const XMLByte *xmlBuffer, bool toBeDeleted) throw (FecExce
  * @see <I>XMLFec::XMLFec(std::string xmlFileName)</I>
  * @see <I>XMLFecCcu::init()</I>
  */
-XMLFecCcu::XMLFecCcu ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLFecCcu::XMLFecCcu ( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
   countCCU_ = 0 ;
   countRing_ = 0 ;
   parameterCCUNames_  = CCUDescription::getParameterNames() ;
@@ -212,7 +212,7 @@ unsigned int XMLFecCcu::parseAttributes ( XERCES_CPP_NAMESPACE::DOMNode *n ) {
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLFecCcu::parseXMLBuffer()
  */
-ccuVector XMLFecCcu::getCcusFromBuffer () throw (FecExceptionHandler) {
+ccuVector XMLFecCcu::getCcusFromBuffer () noexcept(false) {
 
   parseXMLBuffer();
   return cVector_;
@@ -229,7 +229,7 @@ ccuVector XMLFecCcu::getCcusFromBuffer () throw (FecExceptionHandler) {
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-ccuVector XMLFecCcu::getCcusFromDb (std::string partitionName) throw (FecExceptionHandler) {
+ccuVector XMLFecCcu::getCcusFromDb (std::string partitionName) noexcept(false) {
 
   parseDatabaseResponse(partitionName, "", 0);
   parseXMLBuffer();
@@ -248,7 +248,7 @@ ccuVector XMLFecCcu::getCcusFromDb (std::string partitionName) throw (FecExcepti
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-ccuVector XMLFecCcu::getCcusFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) throw (FecExceptionHandler) {
+ccuVector XMLFecCcu::getCcusFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) noexcept(false) {
 
   parseDatabaseResponse(partitionName, fecHardId, ringSlot);
   parseXMLBuffer();
@@ -300,7 +300,7 @@ int XMLFecCcu::storeCcusIntoRings() {
 
 /** Returns a pointer on the <I>ringDescription_</I> private attribute
  */
-TkRingDescription *XMLFecCcu::getRing () throw (FecExceptionHandler) {
+TkRingDescription *XMLFecCcu::getRing () noexcept(false) {
 
   TkRingDescription *ring = NULL ;
 
@@ -317,7 +317,7 @@ TkRingDescription *XMLFecCcu::getRing () throw (FecExceptionHandler) {
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-tkringVector XMLFecCcu::getRingFromDb (std::string partitionName) throw (FecExceptionHandler) {
+tkringVector XMLFecCcu::getRingFromDb (std::string partitionName) noexcept(false) {
 
   getVectorRingFromDb (partitionName,"",0) ;
   return rVector_ ;
@@ -330,7 +330,7 @@ tkringVector XMLFecCcu::getRingFromDb (std::string partitionName) throw (FecExce
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-TkRingDescription *XMLFecCcu::getRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) throw (FecExceptionHandler) {
+TkRingDescription *XMLFecCcu::getRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) noexcept(false) {
 
   TkRingDescription* resultRing = NULL;
 
@@ -357,7 +357,7 @@ TkRingDescription *XMLFecCcu::getRingFromDb (std::string partitionName, std::str
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
- TkRingDescription *XMLFecCcu::getRingFromDb (std::string fecHardId, unsigned int ringSlot) throw (FecExceptionHandler) {
+ TkRingDescription *XMLFecCcu::getRingFromDb (std::string fecHardId, unsigned int ringSlot) noexcept(false) {
 
   TkRingDescription* resultRing = NULL;  
 
@@ -407,7 +407,7 @@ TkRingDescription *XMLFecCcu::getRingFromDb (std::string partitionName, std::str
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-void XMLFecCcu::getVectorRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) throw (FecExceptionHandler) {
+void XMLFecCcu::getVectorRingFromDb (std::string partitionName, std::string fecHardId, unsigned int ringSlot) noexcept(false) {
   
   // We clear both cVector and rVector
   clearCcuVector();
@@ -444,7 +444,7 @@ void XMLFecCcu::getVectorRingFromDb (std::string partitionName, std::string fecH
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLFecCcu::parseXMLBuffer()
  */
-TkRingDescription* XMLFecCcu::getRingFromBuffer (std::string fecHardwareId, unsigned int ringSlot) throw (FecExceptionHandler) {
+TkRingDescription* XMLFecCcu::getRingFromBuffer (std::string fecHardwareId, unsigned int ringSlot) noexcept(false) {
 
   TkRingDescription* resultRing = NULL;
 
@@ -495,7 +495,7 @@ TkRingDescription* XMLFecCcu::getRingFromBuffer (std::string fecHardwareId, unsi
  * @see XMLFecCcu::parseXMLBuffer()
  */
 
-tkringVector XMLFecCcu::getRingFromBuffer ( ) throw (FecExceptionHandler) {
+tkringVector XMLFecCcu::getRingFromBuffer ( ) noexcept(false) {
 
   // We clear both cVector and rVector
   clearCcuVector();
@@ -522,7 +522,7 @@ tkringVector XMLFecCcu::getRingFromBuffer ( ) throw (FecExceptionHandler) {
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
 /*
-void XMLFecCcu::setCcusToFile ( ccuVector *cVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLFecCcu::setCcusToFile ( ccuVector *cVector, std::string outputFileName) noexcept(false) {
 
   if (cVector->size()!=0) {
     MemBufOutputSource memBufOS (cVector,false);
@@ -542,7 +542,7 @@ void XMLFecCcu::setCcusToFile ( ccuVector *cVector, std::string outputFileName)
  *     - the MemBufOutputSource created from the parameter <I>rVector</I> is not initialized 
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLFecCcu::setRingToFile ( TkRingDescription ringD, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLFecCcu::setRingToFile ( TkRingDescription ringD, std::string outputFileName) noexcept(false) {
 
   MemBufOutputSource memBufOS (ringD, false, true);
   XMLCommonFec::writeXMLFile(memBufOS.getOutputBuffer()->str(), outputFileName);
@@ -554,7 +554,7 @@ void XMLFecCcu::setRingToFile ( TkRingDescription ringD, std::string outputFileN
  * @see XMLFecCcu::setCcusToFile ( ccuVector *cVector, std::string outputFileName)
  */
 /*
-void XMLFecCcu::setCcusToFile ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLFecCcu::setCcusToFile ( std::string outputFileName ) noexcept(false) {
 
   setCcusToFile( cVector_, outputFileName);
 }
@@ -565,7 +565,7 @@ void XMLFecCcu::setCcusToFile ( std::string outputFileName ) throw (FecException
  * @exception FecExceptionHandler
  * @see XMLFecCcu::setRingToFile ( tkringVector *rVector, std::string outputFileName)
  */
-void XMLFecCcu::setRingToFile ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLFecCcu::setRingToFile ( std::string outputFileName ) noexcept(false) {
 
   TkRingDescription *ringD = getRing() ;
 
@@ -586,7 +586,7 @@ void XMLFecCcu::setRingToFile ( std::string outputFileName ) throw (FecException
 //  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
 //  */
 /*
-void XMLFecCcu::setCcusToDb(std::string partitionName, ccuVector *cVector)  throw (FecExceptionHandler) {
+void XMLFecCcu::setCcusToDb(std::string partitionName, ccuVector *cVector)  noexcept(false) {
 
   this->setCcuVector (cVector);  
   this->dbConfigure (partitionName, false);
@@ -602,7 +602,7 @@ void XMLFecCcu::setCcusToDb(std::string partitionName, ccuVector *cVector)  thro
 //  *     - a SQLException is thrown during the PL/SQL statement creation or execution
 //  * @see DbAccess::setXMLClob(std::string xmlBuffer);
 //  */
-void XMLFecCcu::setRingToDb (std::string partitionName, TkRingDescription ringD )  throw (FecExceptionHandler) {
+void XMLFecCcu::setRingToDb (std::string partitionName, TkRingDescription ringD )  noexcept(false) {
 
   this->dbConfigure (partitionName, ringD, false);
 }
@@ -614,7 +614,7 @@ void XMLFecCcu::setRingToDb (std::string partitionName, TkRingDescription ringD
 //  * @exception FecExceptionHandler
 //  * @see XMLFecCcu::setCcus (ccuVector *cVector, unsigned int versionMajorId, unsigned int versionMinorId)
 //  */
-// void XMLFecCcu::setCcus(std::string partitionName) throw (FecExceptionHandler) {
+// void XMLFecCcu::setCcus(std::string partitionName) noexcept(false) {
 //   this->dbConfigure (partitionName, false);
 // }
 
@@ -627,7 +627,7 @@ void XMLFecCcu::setRingToDb (std::string partitionName, TkRingDescription ringD
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  */
-void XMLFecCcu::dbConfigure(std::string partitionName, boolean newPartition ) throw (FecExceptionHandler) {
+void XMLFecCcu::dbConfigure(std::string partitionName, boolean newPartition ) noexcept(false) {
 
   TkRingDescription *ringD = getRing() ;
   dbConfigure(partitionName,*ringD,newPartition) ;
@@ -643,7 +643,7 @@ void XMLFecCcu::dbConfigure(std::string partitionName, boolean newPartition ) th
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  */
-void XMLFecCcu::dbConfigure(std::string partitionName, TkRingDescription ringD, boolean newPartition ) throw (FecExceptionHandler) {
+void XMLFecCcu::dbConfigure(std::string partitionName, TkRingDescription ringD, boolean newPartition ) noexcept(false) {
 
   MemBufOutputSource memBufOSRing (ringD, true, false);
   MemBufOutputSource memBufOSCcu  (*(ringD.getCcuVector()), true );
@@ -675,7 +675,7 @@ void XMLFecCcu::dbConfigure(std::string partitionName, TkRingDescription ringD,
  *    - the dataBaseAccess has not been intialized
  */
 void XMLFecCcu::parseDatabaseResponse ( std::string partitionName, std::string fecHardId, unsigned int ringSlot ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromFecHardId";
 
   if (dataBaseAccess_ != NULL) {
@@ -740,7 +740,7 @@ void XMLFecCcu::parseDatabaseResponse ( std::string partitionName, std::string f
  *    - the dataBaseAccess has not been intialized
  */
 void XMLFecCcu::parseDatabaseResponse ( std::string fecHardId, unsigned int ringSlot ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromFecHardId";
 
   if (dataBaseAccess_ != NULL) {
diff --git a/FecSoftwareV3_0/generic/src/common/XMLFecDcu.cc b/FecSoftwareV3_0/generic/src/common/XMLFecDcu.cc
index e65bf79..7e9ab0d 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLFecDcu.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLFecDcu.cc
@@ -21,14 +21,14 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @exception FecExceptionHandler
  * @see <I>XMLFecDevice:XMLFecDevice()</I>
  */
-XMLFecDcu::XMLFecDcu () throw (FecExceptionHandler) : XMLFecDevice () { }
+XMLFecDcu::XMLFecDcu () noexcept(false) : XMLFecDevice () { }
 
 #ifdef DATABASE
 
 /**Creates a XMLFecDcu with access to the database<BR>
  * Call the <I>XMLFecDevice::XMLFecDevice( DbFecAccess * )</I><BR>
  */
-XMLFecDcu::XMLFecDcu ( DbFecAccess *dbAccess )  throw (FecExceptionHandler) : XMLFecDevice(dbAccess) { }
+XMLFecDcu::XMLFecDcu ( DbFecAccess *dbAccess )  noexcept(false) : XMLFecDevice(dbAccess) { }
 
 #endif
 
@@ -38,7 +38,7 @@ XMLFecDcu::XMLFecDcu ( DbFecAccess *dbAccess )  throw (FecExceptionHandler) : XM
  * @exception FecExceptionHandler
  * @see <I>XMLFecDevice::XMLFecDevice(const XMLByte* xmlBuffer)</I>
  */
-XMLFecDcu::XMLFecDcu ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLFecDevice( xmlBuffer ){ }
+XMLFecDcu::XMLFecDcu ( const XMLByte* xmlBuffer ) noexcept(false) : XMLFecDevice( xmlBuffer ){ }
 
 /**Creates a XMLFecDcu from a file<BR>
  * Call the <I>XMLFecDevice::XMLFecDevice(std::string xmlFileName)</I> constructor<BR>
@@ -46,7 +46,7 @@ XMLFecDcu::XMLFecDcu ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler) :
  * @exception FecExceptionHandler
  * @see <I>XMLFecDevice::XMLFecDevice(std::string xmlFileName)</I>
  */
-XMLFecDcu::XMLFecDcu ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLFecDevice( xmlFileName ) { }
+XMLFecDcu::XMLFecDcu ( std::string xmlFileName ) noexcept(false) : XMLFecDevice( xmlFileName ) { }
 
 
 /**Delete the <I>handler_</I> attribute<BR>
@@ -67,7 +67,7 @@ XMLFecDcu::~XMLFecDcu (){ }
  * @see <I>XMLFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDcu::getDevices (std::string partitionName, unsigned long timeStampStart, unsigned long timeStampStop) throw (FecExceptionHandler) {
+deviceVector XMLFecDcu::getDevices (std::string partitionName, unsigned long timeStampStart, unsigned long timeStampStop) noexcept(false) {
 
   unsigned long min = timeStampStart > timeStampStop ? timeStampStop : timeStampStart ;
   unsigned long max = timeStampStart > timeStampStop ? timeStampStart : timeStampStop ;
@@ -92,7 +92,7 @@ deviceVector XMLFecDcu::getDevices (std::string partitionName, unsigned long tim
  * @see <I>XMLCommonFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDcu::getDevices (unsigned long dcuHardId, unsigned long timeStampStart, unsigned long timeStampStop) throw (FecExceptionHandler) {
+deviceVector XMLFecDcu::getDevices (unsigned long dcuHardId, unsigned long timeStampStart, unsigned long timeStampStop) noexcept(false) {
 
   unsigned long min = timeStampStart > timeStampStop ? timeStampStop : timeStampStart ;
   unsigned long max = timeStampStart > timeStampStop ? timeStampStart : timeStampStop ;
@@ -116,7 +116,7 @@ deviceVector XMLFecDcu::getDevices (unsigned long dcuHardId, unsigned long timeS
  * @see <I>XMLCommonFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDcu::getDevices (unsigned long timeStampStart, unsigned long timeStampStop) throw (FecExceptionHandler) {
+deviceVector XMLFecDcu::getDevices (unsigned long timeStampStart, unsigned long timeStampStop) noexcept(false) {
 
   unsigned long min = timeStampStart > timeStampStop ? timeStampStop : timeStampStart ;
   unsigned long max = timeStampStart > timeStampStop ? timeStampStart : timeStampStop ;
@@ -151,7 +151,7 @@ unsigned int XMLFecDcu::parseAttributes(XERCES_CPP_NAMESPACE::DOMNode *n) {
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  * The upload is done for a timestamp > 0 in the version 0.0
  */
-void XMLFecDcu::setDcuValues (deviceVector dVector, std::string partitionName)  throw (FecExceptionHandler) {
+void XMLFecDcu::setDcuValues (deviceVector dVector, std::string partitionName)  noexcept(false) {
 
   MemBufOutputSource memBufOS (dVector, true);
   try {
diff --git a/FecSoftwareV3_0/generic/src/common/XMLFecDevice.cc b/FecSoftwareV3_0/generic/src/common/XMLFecDevice.cc
index 4af9d9c..d300256 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLFecDevice.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLFecDevice.cc
@@ -46,7 +46,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLFec::XMLFec()</I>
  * @see <I>XMLFecDevice::init()</I>
  */
-XMLFecDevice::XMLFecDevice () throw (FecExceptionHandler) :
+XMLFecDevice::XMLFecDevice () noexcept(false) :
   XMLFec () {
 
   initParameterNames() ;
@@ -62,7 +62,7 @@ XMLFecDevice::XMLFecDevice () throw (FecExceptionHandler) :
  * @see <I>XMLFec::XMLFec(DbAccess *dbAccess, std::string partitionName)</I>
  * @see <I>XMLFecDevice::init()</I>
  */
-XMLFecDevice::XMLFecDevice ( DbFecAccess *dbAccess )  throw (FecExceptionHandler) : 
+XMLFecDevice::XMLFecDevice ( DbFecAccess *dbAccess )  noexcept(false) : 
   XMLFec( (DbAccess *)dbAccess ) {
 
   initParameterNames() ;
@@ -77,7 +77,7 @@ XMLFecDevice::XMLFecDevice ( DbFecAccess *dbAccess )  throw (FecExceptionHandler
  * @see <I>XMLFec::XMLFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLFecDevice::init()</I>
  */
-XMLFecDevice::XMLFecDevice (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLFec( xmlBuffer ){
+XMLFecDevice::XMLFecDevice (const XMLByte* xmlBuffer ) noexcept(false) : XMLFec( xmlBuffer ){
 
   initParameterNames() ;
 }
@@ -90,7 +90,7 @@ XMLFecDevice::XMLFecDevice (const XMLByte* xmlBuffer ) throw (FecExceptionHandle
  * @see <I>XMLFec::XMLFec(std::string xmlFileName)</I>
  * @see <I>XMLFecDevice::init()</I>
  */
-XMLFecDevice::XMLFecDevice ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLFec( xmlFileName ) {
+XMLFecDevice::XMLFecDevice ( std::string xmlFileName ) noexcept(false) : XMLFec( xmlFileName ) {
 
   initParameterNames() ;
 }
@@ -165,7 +165,7 @@ deviceVector XMLFecDevice::getDeviceVector () {
  * Copy all elements from <I>devices</I> parameter to <I>dVector_</I> attribute
  * @exception FecExceptionHandler : a FecExceptionHandler is raised, if <I>dVector_</I> is NULL
  */
-void XMLFecDevice::setDeviceVector (deviceVector devices) throw (FecExceptionHandler) {
+void XMLFecDevice::setDeviceVector (deviceVector devices) noexcept(false) {
   // empty and delete previous deviceVector
   // delete all elements
   clearVector() ;
@@ -184,7 +184,7 @@ void XMLFecDevice::setDeviceVector (deviceVector devices) throw (FecExceptionHan
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLFecDevice::parseXMLBuffer()
  */
-deviceVector XMLFecDevice::getDevices () throw (FecExceptionHandler) {
+deviceVector XMLFecDevice::getDevices () noexcept(false) {
 
   parseXMLBuffer();
 
@@ -203,7 +203,7 @@ deviceVector XMLFecDevice::getDevices () throw (FecExceptionHandler) {
  * @see <I>XMLFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDevice::getDevices (std::string partitionName) throw (FecExceptionHandler) {
+deviceVector XMLFecDevice::getDevices (std::string partitionName) noexcept(false) {
 
   //unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
   parseDatabaseResponse(partitionName);
@@ -231,7 +231,7 @@ deviceVector XMLFecDevice::getDevices (std::string partitionName) throw (FecExce
  * @see <I>XMLFec::parseDatabaseResponse(std::string partitionName, unsigned int versionMajor, unsigned int versionMinor)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDevice::getDevices (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor) throw (FecExceptionHandler) {
+deviceVector XMLFecDevice::getDevices (std::string partitionName, unsigned int versionMajor, unsigned int versionMinor, unsigned int pMaskVersionMajor, unsigned int pMaskVersionMinor) noexcept(false) {
 
   parseDatabaseResponse(partitionName, versionMajor, versionMinor, pMaskVersionMajor, pMaskVersionMinor);
   parseXMLBuffer();
@@ -250,7 +250,7 @@ deviceVector XMLFecDevice::getDevices (std::string partitionName, unsigned int v
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fecHardId) throw (FecExceptionHandler) {
+deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fecHardId) noexcept(false) {
 
   //unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
   parseDatabaseResponse(partitionName, fecHardId);
@@ -278,7 +278,7 @@ deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fe
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId, unsigned int versionMajor, unsigned int versionMinor)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor) throw (FecExceptionHandler) {
+deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fecHardId, unsigned int versionMajor, unsigned int versionMinor) noexcept(false) {
 
   parseDatabaseResponse(partitionName, fecHardId, versionMajor, versionMinor);
   parseXMLBuffer();
@@ -295,7 +295,7 @@ deviceVector XMLFecDevice::getDevices (std::string partitionName, std::string fe
  *     - the MemBufOutputSource created from the parameter <I>dVector</I> is not initialized 
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLFecDevice::setDevices ( deviceVector dVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices ( deviceVector dVector, std::string outputFileName) noexcept(false) {
 
   if (dVector.size()) {
     MemBufOutputSource memBufOS(dVector);
@@ -310,14 +310,14 @@ void XMLFecDevice::setDevices ( deviceVector dVector, std::string outputFileName
  * @exception FecExceptionHandler
  * @see XMLFecDevice::setDevices ( deviceVector *dVector, std::string outputFileName)
  */
-void XMLFecDevice::setDevices ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices ( std::string outputFileName ) noexcept(false) {
   setDevices( dVector_, outputFileName);
 }
 
 /**Displays the contents of the attribute <I>dVector_</I>.
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if <I>dVector</I> is not initialized
  */
-void XMLFecDevice::display() throw (FecExceptionHandler) {
+void XMLFecDevice::display() noexcept(false) {
   if (dVector_.size()) {
     for (deviceVector::iterator it = dVector_.begin() ; it != dVector_.end() ; it ++) {
       deviceDescription *deviced = *it;
@@ -340,7 +340,7 @@ void XMLFecDevice::display() throw (FecExceptionHandler) {
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId)  throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId)  noexcept(false) {
 
   MemBufOutputSource memBufOS (dVector, true);
   std::string *xmlBuffer = NULL ;
@@ -374,7 +374,7 @@ void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName,
  * @exception FecExceptionHandler
  * @see XMLFecDevice::setDevices (deviceVector *dVector, unsigned int versionMajorId, unsigned int versionMinorId)
  */
-void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
   setDevices(dVector_, partitionName, versionMajorId, versionMinorId);
 }
 
@@ -393,7 +393,7 @@ void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionMaj
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName, unsigned int versionUpdate)  throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName, unsigned int versionUpdate)  noexcept(false) {
 
   //unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
   MemBufOutputSource memBufOS (dVector, true);
@@ -442,7 +442,7 @@ void XMLFecDevice::setDevices (deviceVector dVector, std::string partitionName,
  * @exception FecExceptionHandler
  * @see XMLFecDevice::setDevices (deviceVector *dVector, std::string partitionName, unsigned int versionUpdate)
  */
-void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionUpdate) throw (FecExceptionHandler) {
+void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionUpdate) noexcept(false) {
   setDevices(dVector_, partitionName, versionUpdate);
 }
 
@@ -455,7 +455,7 @@ void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionUpd
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
 */
-// unsigned int XMLFecDevice::dbConfigure(std::string partitionName, boolean newPartition ) throw (FecExceptionHandler) {
+// unsigned int XMLFecDevice::dbConfigure(std::string partitionName, boolean newPartition ) noexcept(false) {
 //   unsigned int returnedVersionMajorId = 0;
 //   MemBufOutputSource memBufOS (dVector_);
 
@@ -492,7 +492,7 @@ void XMLFecDevice::setDevices(std::string partitionName, unsigned int versionUpd
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
 */
-unsigned int XMLFecDevice::dbConfigure(std::string partitionName, boolean newPartition ) throw (FecExceptionHandler) {
+unsigned int XMLFecDevice::dbConfigure(std::string partitionName, boolean newPartition ) noexcept(false) {
   unsigned int returnedVersionMajorId = 0;
   MemBufOutputSource memBufOS (dVector_, true);
  
diff --git a/FecSoftwareV3_0/generic/src/common/XMLFecPiaReset.cc b/FecSoftwareV3_0/generic/src/common/XMLFecPiaReset.cc
index 038921d..fb031ff 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLFecPiaReset.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLFecPiaReset.cc
@@ -42,7 +42,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLFec::XMLFec()</I>
  * @see <I>XMLFecPiaReset::init()</I>
  */
-XMLFecPiaReset::XMLFecPiaReset () throw (FecExceptionHandler) : XMLFec() {
+XMLFecPiaReset::XMLFecPiaReset () noexcept(false) : XMLFec() {
 }
 
 #ifdef DATABASE
@@ -54,7 +54,7 @@ XMLFecPiaReset::XMLFecPiaReset () throw (FecExceptionHandler) : XMLFec() {
  * @see <I>XMLFec::XMLFec(DbAccess *dbAccess, std::string partitionName)</I>
  * @see <I>XMLFecPiaReset::init()</I>
  */
-XMLFecPiaReset::XMLFecPiaReset ( DbPiaResetAccess *dbAccess ) throw (FecExceptionHandler) : XMLFec( dbAccess ) {
+XMLFecPiaReset::XMLFecPiaReset ( DbPiaResetAccess *dbAccess ) noexcept(false) : XMLFec( dbAccess ) {
 }
 #endif
 
@@ -66,7 +66,7 @@ XMLFecPiaReset::XMLFecPiaReset ( DbPiaResetAccess *dbAccess ) throw (FecExceptio
  * @see <I>XMLFec::XMLFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLFecPiaReset::init()</I>
  */
-XMLFecPiaReset::XMLFecPiaReset (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLFec( xmlBuffer ){
+XMLFecPiaReset::XMLFecPiaReset (const XMLByte* xmlBuffer ) noexcept(false) : XMLFec( xmlBuffer ){
 
 }
 
@@ -78,7 +78,7 @@ XMLFecPiaReset::XMLFecPiaReset (const XMLByte* xmlBuffer ) throw (FecExceptionHa
  * @see <I>XMLFec::XMLFec(std::string xmlFileName)</I>
  * @see <I>XMLFecPiaReset::init()</I>
  */
-XMLFecPiaReset::XMLFecPiaReset ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLFec( xmlFileName ) {
+XMLFecPiaReset::XMLFecPiaReset ( std::string xmlFileName ) noexcept(false) : XMLFec( xmlFileName ) {
 }
 
 /**Delete the <I>handler_</I> attribute<BR>
@@ -113,7 +113,7 @@ piaResetVector XMLFecPiaReset::getPiaResetVector () {
  * Copy all elements from <I>devices</I> parameter to <I>pVector_</I> attribute
  * @exception FecExceptionHandler : a FecExceptionHandler is raised, if <I>pVector_</I> is NULL
  */
-void XMLFecPiaReset::setPiaResetVector (piaResetVector piaResets) throw (FecExceptionHandler) {
+void XMLFecPiaReset::setPiaResetVector (piaResetVector piaResets) noexcept(false) {
   // empty and delete previous piaResetVector
   // delete all elements
   clearVector() ;
@@ -128,7 +128,7 @@ void XMLFecPiaReset::setPiaResetVector (piaResetVector piaResets) throw (FecExce
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLFecPiaReset::parseXMLBuffer()
  */
-piaResetVector XMLFecPiaReset::getPiaResets () throw (FecExceptionHandler) {
+piaResetVector XMLFecPiaReset::getPiaResets () noexcept(false) {
 
   parseXMLBuffer();
 
@@ -147,7 +147,7 @@ piaResetVector XMLFecPiaReset::getPiaResets () throw (FecExceptionHandler) {
  * @see <I>XMLFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName) throw (FecExceptionHandler) {
+piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName) noexcept(false) {
 
   //unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
   parseDatabaseResponse(partitionName);
@@ -173,7 +173,7 @@ piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName) throw (F
  * @see <I>XMLFec::parseDatabaseResponse(unsigned int fecHardId)</I>
  * @see <I>XMLFec::parseXMLBuffer()</I>
  */
-piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName, std::string fecHardId) throw (FecExceptionHandler) {
+piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName, std::string fecHardId) noexcept(false) {
 
   //unsigned long startMillis = XERCES_CPP_NAMESPACE::XMLPlatformUtils::getCurrentMillis();
   parseDatabaseResponse(partitionName, fecHardId);
@@ -197,7 +197,7 @@ piaResetVector XMLFecPiaReset::getPiaResets (std::string partitionName, std::str
  *     - the MemBufOutputSource created from the parameter <I>pVector</I> is not initialized 
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLFecPiaReset::setFilePiaResets ( piaResetVector pVector, std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLFecPiaReset::setFilePiaResets ( piaResetVector pVector, std::string outputFileName ) noexcept(false) {
 
   if (pVector.size()) {
     MemBufOutputSource memBufOS(pVector);
@@ -212,7 +212,7 @@ void XMLFecPiaReset::setFilePiaResets ( piaResetVector pVector, std::string outp
  * @exception FecExceptionHandler
  * @see XMLFecPiaReset::setFilePiaResets ( piaResetVector pVector, std::string outputFileName)
  */
-void XMLFecPiaReset::setFilePiaResets ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLFecPiaReset::setFilePiaResets ( std::string outputFileName ) noexcept(false) {
   setFilePiaResets( pVector_, outputFileName );
 }
 
@@ -236,7 +236,7 @@ void XMLFecPiaReset::display() {
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * \see DbAccess::setXMLClob(std::string xmlBuffer, std::string partitionName);
  */
-void XMLFecPiaReset::setDbPiaResets (piaResetVector pVector, std::string partitionName)  throw (FecExceptionHandler) {
+void XMLFecPiaReset::setDbPiaResets (piaResetVector pVector, std::string partitionName)  noexcept(false) {
 
   MemBufOutputSource memBufOS(pVector, true);
 
@@ -264,7 +264,7 @@ void XMLFecPiaReset::setDbPiaResets (piaResetVector pVector, std::string partiti
  * @exception FecExceptionHandler
  * @see XMLFecPiaReset::setDbPiaResets ((piaResetVector , std::string partitionName)
  */
-void XMLFecPiaReset::setDbPiaResets(std::string partitionName) throw (FecExceptionHandler) {
+void XMLFecPiaReset::setDbPiaResets(std::string partitionName) noexcept(false) {
 
   setDbPiaResets(pVector_, partitionName);
 }
diff --git a/FecSoftwareV3_0/generic/src/common/XMLTkDcuConversion.cc b/FecSoftwareV3_0/generic/src/common/XMLTkDcuConversion.cc
index 65fa334..35f3ee4 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLTkDcuConversion.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLTkDcuConversion.cc
@@ -32,7 +32,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLCommonFec::XMLCommonFec()</I>
  * @see <I>XMLTkDcuConversion::init()</I>
  */
-XMLTkDcuConversion::XMLTkDcuConversion () throw (FecExceptionHandler) :
+XMLTkDcuConversion::XMLTkDcuConversion () noexcept(false) :
   XMLCommonFec () 
 {
   countDCUConversion_ = 0 ;
@@ -48,7 +48,7 @@ XMLTkDcuConversion::XMLTkDcuConversion () throw (FecExceptionHandler) :
  * @see <I>XMLCommonFec::XMLCommonFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLTkDcuConversion::init()</I>
  */
-XMLTkDcuConversion::XMLTkDcuConversion (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ){
+XMLTkDcuConversion::XMLTkDcuConversion (const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ){
   countDCUConversion_ = 0 ;
   parameterNames_ = TkDcuConversionFactors::getParameterNames() ;
 }
@@ -62,7 +62,7 @@ XMLTkDcuConversion::XMLTkDcuConversion (const XMLByte* xmlBuffer ) throw (FecExc
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuConversion::init()</I>
  */
-XMLTkDcuConversion::XMLTkDcuConversion ( DbTkDcuConversionAccess *dbAccess ) throw (FecExceptionHandler) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
+XMLTkDcuConversion::XMLTkDcuConversion ( DbTkDcuConversionAccess *dbAccess ) noexcept(false) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
   countDCUConversion_ = 0 ;
   parameterNames_ = TkDcuConversionFactors::getParameterNames() ;
 }
@@ -76,7 +76,7 @@ XMLTkDcuConversion::XMLTkDcuConversion ( DbTkDcuConversionAccess *dbAccess ) thr
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuConversion::init()</I>
  */
-XMLTkDcuConversion::XMLTkDcuConversion ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLTkDcuConversion::XMLTkDcuConversion ( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
   countDCUConversion_ = 0 ;
   parameterNames_ = TkDcuConversionFactors::getParameterNames() ;
 }
@@ -156,7 +156,7 @@ dcuConversionVector XMLTkDcuConversion::getDcuConversionVector () {
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLTkDcuConversion::parseXMLBuffer()
  */
-dcuConversionVector XMLTkDcuConversion::getDcuConversions () throw (FecExceptionHandler) {
+dcuConversionVector XMLTkDcuConversion::getDcuConversions () noexcept(false) {
 
   parseXMLBuffer();
   return dVector_;
@@ -173,7 +173,7 @@ dcuConversionVector XMLTkDcuConversion::getDcuConversions () throw (FecException
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLTkDcuConversion::parseDatabaseResponse(std::string partitionName) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
 #ifdef DATABASEDEBUG
@@ -232,7 +232,7 @@ void XMLTkDcuConversion::parseDatabaseResponse(std::string partitionName)
  *    - the dataBaseAccess or the dcuHardId name have not been intialized
  */
 void XMLTkDcuConversion::parseDatabaseResponse(tscType32 dcuHardId) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromDcuHardIdNumber";
 #ifdef DATABASEDEBUG
  std::cout << "void XMLTkDcuConversion::parseDatabaseResponse ( dcuHardId ) " <<std::endl ;
@@ -290,7 +290,7 @@ void XMLTkDcuConversion::parseDatabaseResponse(tscType32 dcuHardId)
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-dcuConversionVector XMLTkDcuConversion::getDcuConversions (tscType32 dcuHardId) throw (FecExceptionHandler) {
+dcuConversionVector XMLTkDcuConversion::getDcuConversions (tscType32 dcuHardId) noexcept(false) {
     parseDatabaseResponse(dcuHardId);
     parseXMLBuffer();
     return dVector_;
@@ -305,7 +305,7 @@ dcuConversionVector XMLTkDcuConversion::getDcuConversions (tscType32 dcuHardId)
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-dcuConversionVector XMLTkDcuConversion::getDcuConversions (std::string partitionName) throw (FecExceptionHandler) {
+dcuConversionVector XMLTkDcuConversion::getDcuConversions (std::string partitionName) noexcept(false) {
   parseDatabaseResponse(partitionName);
   parseXMLBuffer();
   return dVector_;
@@ -321,7 +321,7 @@ dcuConversionVector XMLTkDcuConversion::getDcuConversions (std::string partition
  *     - the MemBufOutputSource created from the parameter <I>dVector</I> is not initialized 
  * @see XMLCommonFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLTkDcuConversion::setDcuConversions ( dcuConversionVector dVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLTkDcuConversion::setDcuConversions ( dcuConversionVector dVector, std::string outputFileName) noexcept(false) {
 
   if (dVector.size()) {
     MemBufOutputSource memBufOS (dVector );
@@ -336,7 +336,7 @@ void XMLTkDcuConversion::setDcuConversions ( dcuConversionVector dVector, std::s
  * @exception FecExceptionHandler
  * @see XMLTkDcuConversion::setDevices ( dcuConversionVector dVector, std::string outputFileName)
  */
-void XMLTkDcuConversion::setDcuConversions ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLTkDcuConversion::setDcuConversions ( std::string outputFileName ) noexcept(false) {
   setDcuConversions( dVector_, outputFileName);
 }
 
@@ -346,7 +346,7 @@ void XMLTkDcuConversion::setDcuConversions ( std::string outputFileName ) throw
  * Copy all elements from <I>dcuConversions</I> parameter to <I>pVector_</I> attribute
  * @exception FecExceptionHandler : a FecExceptionHandler is raised, if <I>pVector_</I> is NULL
  */
-void XMLTkDcuConversion::setDcuConversionVector (dcuConversionVector dcuConversions) throw (FecExceptionHandler) {
+void XMLTkDcuConversion::setDcuConversionVector (dcuConversionVector dcuConversions) noexcept(false) {
   // empty and delete previous dVector_
   // delete all elements
   if (dVector_.size()) {
@@ -371,7 +371,7 @@ void XMLTkDcuConversion::setDcuConversionVector (dcuConversionVector dcuConversi
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLTkDcuConversion::setDcuConversions (dcuConversionVector dVector)  throw (FecExceptionHandler) {
+void XMLTkDcuConversion::setDcuConversions (dcuConversionVector dVector)  noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector, true);
   try {
@@ -395,7 +395,7 @@ void XMLTkDcuConversion::setDcuConversions (dcuConversionVector dVector)  throw
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLTkDcuConversion::setDcuConversions ()  throw (FecExceptionHandler) {
+void XMLTkDcuConversion::setDcuConversions ()  noexcept(false) {
   setDcuConversions(dVector_);
 }
 
@@ -409,7 +409,7 @@ void XMLTkDcuConversion::setDcuConversions ()  throw (FecExceptionHandler) {
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
 */
-void XMLTkDcuConversion::dbConfigure() throw (FecExceptionHandler) {
+void XMLTkDcuConversion::dbConfigure() noexcept(false) {
 
   MemBufOutputSource memBufOS (dVector_, true);
 
diff --git a/FecSoftwareV3_0/generic/src/common/XMLTkDcuInfo.cc b/FecSoftwareV3_0/generic/src/common/XMLTkDcuInfo.cc
index c987b39..0e8a904 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLTkDcuInfo.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLTkDcuInfo.cc
@@ -34,7 +34,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLCommonFec::XMLCommonFec()</I>
  * @see <I>XMLTkDcuInfo::init()</I>
  */
-XMLTkDcuInfo::XMLTkDcuInfo () throw (FecExceptionHandler) :
+XMLTkDcuInfo::XMLTkDcuInfo () noexcept(false) :
   XMLCommonFec ()  {
   countDCUInfo_ = countState_ = countRun_ = countVersion_ = 0 ;
   initParameterNames() ;
@@ -49,7 +49,7 @@ XMLTkDcuInfo::XMLTkDcuInfo () throw (FecExceptionHandler) :
  * @see <I>XMLCommonFec::XMLCommonFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLTkDcuInfo::init()</I>
  */
-XMLTkDcuInfo::XMLTkDcuInfo (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ){
+XMLTkDcuInfo::XMLTkDcuInfo (const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ){
 
   countDCUInfo_ = countState_ = countRun_ = countVersion_ = 0 ;
   initParameterNames() ;
@@ -64,7 +64,7 @@ XMLTkDcuInfo::XMLTkDcuInfo (const XMLByte* xmlBuffer ) throw (FecExceptionHandle
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuInfo::init()</I>
  */
-XMLTkDcuInfo::XMLTkDcuInfo ( DbTkDcuInfoAccess *dbAccess )throw (FecExceptionHandler) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
+XMLTkDcuInfo::XMLTkDcuInfo ( DbTkDcuInfoAccess *dbAccess )noexcept(false) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
 
   countDCUInfo_ = countState_ = countRun_ = countVersion_ = 0 ;
   initParameterNames() ;
@@ -79,7 +79,7 @@ XMLTkDcuInfo::XMLTkDcuInfo ( DbTkDcuInfoAccess *dbAccess )throw (FecExceptionHan
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuInfo::init()</I>
  */
-XMLTkDcuInfo::XMLTkDcuInfo ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLTkDcuInfo::XMLTkDcuInfo ( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
 
   countDCUInfo_ = countState_ = countRun_ = countVersion_ = 0 ;
   initParameterNames() ;
@@ -224,7 +224,7 @@ unsigned int XMLTkDcuInfo::parseAttributes ( XERCES_CPP_NAMESPACE::DOMNode *n )
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLTkDcuInfo::parseXMLBuffer()
  */
-tkDcuInfoVector XMLTkDcuInfo::getDcuInfos () throw (FecExceptionHandler) {
+tkDcuInfoVector XMLTkDcuInfo::getDcuInfos () noexcept(false) {
 
   parseXMLBuffer();
 
@@ -244,7 +244,7 @@ tkDcuInfoVector XMLTkDcuInfo::getDcuInfos () throw (FecExceptionHandler) {
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLTkDcuInfo::parseDatabaseResponse(std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
@@ -305,7 +305,7 @@ void XMLTkDcuInfo::parseDatabaseResponse(std::string partitionName, unsigned int
  *    - the dataBaseAccess have not been intialized
  */
 void XMLTkDcuInfo::parseDatabaseResponse() 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
 #ifdef DATABASEDEBUG
@@ -366,7 +366,7 @@ void XMLTkDcuInfo::parseDatabaseResponse()
  *    - the dataBaseAccess have not been intialized
  */
 void XMLTkDcuInfo::parseDatabaseResponse(unsigned int majorVersionId, unsigned int minorVersionId) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
 #ifdef DATABASEDEBUG
@@ -423,7 +423,7 @@ void XMLTkDcuInfo::parseDatabaseResponse(unsigned int majorVersionId, unsigned i
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseStateDatabaseResponse() throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseStateDatabaseResponse() noexcept(false){
   std::string xmlBufferId = "theXMLBufferForState";
   
 #ifdef DATABASEDEBUG
@@ -480,7 +480,7 @@ void XMLTkDcuInfo::parseStateDatabaseResponse() throw (FecExceptionHandler){
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseFecVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseFecVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForFecVersion";
   
 #ifdef DATABASEDEBUG
@@ -537,7 +537,7 @@ void XMLTkDcuInfo::parseFecVersionsDatabaseResponse(std::string partitionName) t
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseFedVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseFedVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForFedVersion";
   
 #ifdef DATABASEDEBUG
@@ -594,7 +594,7 @@ void XMLTkDcuInfo::parseFedVersionsDatabaseResponse(std::string partitionName) t
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseDcuInfoVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseDcuInfoVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForDcuInfoVersion";
   
 #ifdef DATABASEDEBUG
@@ -651,7 +651,7 @@ void XMLTkDcuInfo::parseDcuInfoVersionsDatabaseResponse(std::string partitionNam
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseConnectionVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseConnectionVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForConnectionVersion";
   
 #ifdef DATABASEDEBUG
@@ -708,7 +708,7 @@ void XMLTkDcuInfo::parseConnectionVersionsDatabaseResponse(std::string partition
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseDcuPsuMapVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseDcuPsuMapVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForDcuPsuMapVersion";
   
 #ifdef DATABASEDEBUG
@@ -765,7 +765,7 @@ void XMLTkDcuInfo::parseDcuPsuMapVersionsDatabaseResponse(std::string partitionN
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseMaskVersionsDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseMaskVersionsDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForMaskVersion";
   
 #ifdef DATABASEDEBUG
@@ -823,7 +823,7 @@ void XMLTkDcuInfo::parseMaskVersionsDatabaseResponse(std::string partitionName)
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForRun";
   
 #ifdef DATABASEDEBUG
@@ -880,7 +880,7 @@ void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName) throw (Fe
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseRunDatabaseResponse() throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseRunDatabaseResponse() noexcept(false){
   std::string xmlBufferId = "theXMLBufferForRun";
   
 #ifdef DATABASEDEBUG
@@ -938,7 +938,7 @@ void XMLTkDcuInfo::parseRunDatabaseResponse() throw (FecExceptionHandler){
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName, int runNumber) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName, int runNumber) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForRun";
   
 #ifdef DATABASEDEBUG
@@ -995,7 +995,7 @@ void XMLTkDcuInfo::parseRunDatabaseResponse(std::string partitionName, int runNu
  *    - the sql request throws a oracle::occi::SQLException
  *    - the dataBaseAccess have not been intialized
  */
-void XMLTkDcuInfo::parseLastRunO2ODatabaseResponse(std::string partitionName) throw (FecExceptionHandler){
+void XMLTkDcuInfo::parseLastRunO2ODatabaseResponse(std::string partitionName) noexcept(false){
   std::string xmlBufferId = "theXMLBufferForRun";
   
 #ifdef DATABASEDEBUG
@@ -1055,7 +1055,7 @@ void XMLTkDcuInfo::parseLastRunO2ODatabaseResponse(std::string partitionName) th
  * @see <I>XMLCommonFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuInfoVector XMLTkDcuInfo::getDcuInfos (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+tkDcuInfoVector XMLTkDcuInfo::getDcuInfos (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
 
   parseDatabaseResponse(partitionName, majorVersionId, minorVersionId);
   parseXMLBuffer();
@@ -1070,7 +1070,7 @@ tkDcuInfoVector XMLTkDcuInfo::getDcuInfos (std::string partitionName, unsigned i
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos (unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos (unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
   parseDatabaseResponse(majorVersionId, minorVersionId);
   parseXMLBuffer();
   return dVector_;
@@ -1084,7 +1084,7 @@ tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos (unsigned int majorVersionId, unsig
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos () throw (FecExceptionHandler) {
+tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos () noexcept(false) {
   parseDatabaseResponse();
   parseXMLBuffer();
   return dVector_;
@@ -1098,7 +1098,7 @@ tkDcuInfoVector XMLTkDcuInfo::getAllDcuInfos () throw (FecExceptionHandler) {
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkStateVector XMLTkDcuInfo::getAllCurrentStates () throw (FecExceptionHandler){
+tkStateVector XMLTkDcuInfo::getAllCurrentStates () noexcept(false){
   parseStateDatabaseResponse();
   parseXMLBuffer();
 
@@ -1113,7 +1113,7 @@ tkStateVector XMLTkDcuInfo::getAllCurrentStates () throw (FecExceptionHandler){
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllFecVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllFecVersions (std::string partitionName) noexcept(false){
   parseFecVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1128,7 +1128,7 @@ tkVersionVector XMLTkDcuInfo::getAllFecVersions (std::string partitionName) thro
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllDcuInfoVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllDcuInfoVersions (std::string partitionName) noexcept(false){
   parseDcuInfoVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1143,7 +1143,7 @@ tkVersionVector XMLTkDcuInfo::getAllDcuInfoVersions (std::string partitionName)
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllConnectionVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllConnectionVersions (std::string partitionName) noexcept(false){
   parseConnectionVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1158,7 +1158,7 @@ tkVersionVector XMLTkDcuInfo::getAllConnectionVersions (std::string partitionNam
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllDcuPsuMapVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllDcuPsuMapVersions (std::string partitionName) noexcept(false){
   parseDcuPsuMapVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1173,7 +1173,7 @@ tkVersionVector XMLTkDcuInfo::getAllDcuPsuMapVersions (std::string partitionName
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllMaskVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllMaskVersions (std::string partitionName) noexcept(false){
   parseMaskVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1189,7 +1189,7 @@ tkVersionVector XMLTkDcuInfo::getAllMaskVersions (std::string partitionName) thr
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkVersionVector XMLTkDcuInfo::getAllFedVersions (std::string partitionName) throw (FecExceptionHandler){
+tkVersionVector XMLTkDcuInfo::getAllFedVersions (std::string partitionName) noexcept(false){
   parseFedVersionsDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1204,7 +1204,7 @@ tkVersionVector XMLTkDcuInfo::getAllFedVersions (std::string partitionName) thro
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-TkRun *XMLTkDcuInfo::getLastRun (std::string partitionName) throw (FecExceptionHandler){
+TkRun *XMLTkDcuInfo::getLastRun (std::string partitionName) noexcept(false){
   parseRunDatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1228,7 +1228,7 @@ TkRun *XMLTkDcuInfo::getLastRun (std::string partitionName) throw (FecExceptionH
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-TkRun *XMLTkDcuInfo::getRun (std::string partitionName, unsigned int runNumber) throw (FecExceptionHandler){
+TkRun *XMLTkDcuInfo::getRun (std::string partitionName, unsigned int runNumber) noexcept(false){
   parseRunDatabaseResponse(partitionName, runNumber);
   parseXMLBuffer();
 
@@ -1252,7 +1252,7 @@ TkRun *XMLTkDcuInfo::getRun (std::string partitionName, unsigned int runNumber)
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkRunVector XMLTkDcuInfo::getAllRuns () throw (FecExceptionHandler){
+tkRunVector XMLTkDcuInfo::getAllRuns () noexcept(false){
   parseRunDatabaseResponse();
   parseXMLBuffer();
 
@@ -1267,7 +1267,7 @@ tkRunVector XMLTkDcuInfo::getAllRuns () throw (FecExceptionHandler){
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-TkRun *XMLTkDcuInfo::getLastO2ORun (std::string partitionName) throw (FecExceptionHandler){
+TkRun *XMLTkDcuInfo::getLastO2ORun (std::string partitionName) noexcept(false){
   parseLastRunO2ODatabaseResponse(partitionName);
   parseXMLBuffer();
 
@@ -1293,7 +1293,7 @@ TkRun *XMLTkDcuInfo::getLastO2ORun (std::string partitionName) throw (FecExcepti
  *     - the MemBufOutputSource created from the parameter <I>dVector</I> is not initialized 
  * @see XMLFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLTkDcuInfo::setDcuInfos ( tkDcuInfoVector dVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLTkDcuInfo::setDcuInfos ( tkDcuInfoVector dVector, std::string outputFileName) noexcept(false) {
 
   if (dVector.size()) {
     MemBufOutputSource memBufOS(dVector );
@@ -1309,7 +1309,7 @@ void XMLTkDcuInfo::setDcuInfos ( tkDcuInfoVector dVector, std::string outputFile
  * @exception FecExceptionHandler
  * @see XMLTkDcuInfo::setDevices ( tkDcuInfoVector dVector, std::string outputFileName)
  */
-void XMLTkDcuInfo::setDcuInfos ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLTkDcuInfo::setDcuInfos ( std::string outputFileName ) noexcept(false) {
   setDcuInfos( dVector_, outputFileName);
 }
 
@@ -1320,7 +1320,7 @@ void XMLTkDcuInfo::setDcuInfos ( std::string outputFileName ) throw (FecExceptio
  * Copy all elements from <I>dcuInfos</I> parameter to <I>pVector_</I> attribute
  * @exception FecExceptionHandler : a FecExceptionHandler is raised, if <I>pVector_</I> is NULL
  */
-void XMLTkDcuInfo::setDcuInfoVector (tkDcuInfoVector dcuInfos) throw (FecExceptionHandler) {
+void XMLTkDcuInfo::setDcuInfoVector (tkDcuInfoVector dcuInfos) noexcept(false) {
   // empty and delete previous dVector_
   // delete all elements
   if (dVector_.size()) {
@@ -1350,7 +1350,7 @@ void XMLTkDcuInfo::setDcuInfoVector (tkDcuInfoVector dcuInfos) throw (FecExcepti
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLTkDcuInfo::setDcuInfos (tkDcuInfoVector dVector)  throw (FecExceptionHandler) {
+void XMLTkDcuInfo::setDcuInfos (tkDcuInfoVector dVector)  noexcept(false) {
   MemBufOutputSource memBufOS(dVector, true);
   try {
     if (dataBaseAccess_){
@@ -1373,7 +1373,7 @@ void XMLTkDcuInfo::setDcuInfos (tkDcuInfoVector dVector)  throw (FecExceptionHan
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLTkDcuInfo::setDcuInfos ()  throw (FecExceptionHandler) {
+void XMLTkDcuInfo::setDcuInfos ()  noexcept(false) {
   setDcuInfos(dVector_);
 }
 
@@ -1388,7 +1388,7 @@ void XMLTkDcuInfo::setDcuInfos ()  throw (FecExceptionHandler) {
  *     - the buffer to be sent <I>memBufOS</I> or <I>dataBaseAccess_</I> is not initialized
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
 */
-void XMLTkDcuInfo::dbConfigure() throw (FecExceptionHandler) {
+void XMLTkDcuInfo::dbConfigure() noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector_, true);
 
diff --git a/FecSoftwareV3_0/generic/src/common/XMLTkDcuPsuMap.cc b/FecSoftwareV3_0/generic/src/common/XMLTkDcuPsuMap.cc
index 261bf32..1ae4eae 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLTkDcuPsuMap.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLTkDcuPsuMap.cc
@@ -34,7 +34,7 @@ using namespace XERCES_CPP_NAMESPACE ;
  * @see <I>XMLCommonFec::XMLCommonFec()</I>
  * @see <I>XMLTkDcuPsuMap::init()</I>
  */
-XMLTkDcuPsuMap::XMLTkDcuPsuMap () throw (FecExceptionHandler) :
+XMLTkDcuPsuMap::XMLTkDcuPsuMap () noexcept(false) :
   XMLCommonFec () 
 {
   countDcuPsuMap_ = 0 ;
@@ -50,7 +50,7 @@ XMLTkDcuPsuMap::XMLTkDcuPsuMap () throw (FecExceptionHandler) :
  * @see <I>XMLCommonFec::XMLCommonFec(const XMLByte* xmlBuffer)</I>
  * @see <I>XMLTkDcuPsuMap::init()</I>
  */
-XMLTkDcuPsuMap::XMLTkDcuPsuMap (const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ){
+XMLTkDcuPsuMap::XMLTkDcuPsuMap (const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ){
 
   countDcuPsuMap_ = 0 ;
   dcuPsuMapParameterNames_ = TkDcuPsuMap::getParameterNames() ;
@@ -65,7 +65,7 @@ XMLTkDcuPsuMap::XMLTkDcuPsuMap (const XMLByte* xmlBuffer ) throw (FecExceptionHa
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuPsuMap::init()</I>
  */
-XMLTkDcuPsuMap::XMLTkDcuPsuMap ( DbTkDcuPsuMapAccess *dbAccess )throw (FecExceptionHandler) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
+XMLTkDcuPsuMap::XMLTkDcuPsuMap ( DbTkDcuPsuMapAccess *dbAccess )noexcept(false) : XMLCommonFec( (DbCommonAccess *)dbAccess ) {
 
   countDcuPsuMap_ = 0 ;
   dcuPsuMapParameterNames_ = TkDcuPsuMap::getParameterNames() ;
@@ -80,7 +80,7 @@ XMLTkDcuPsuMap::XMLTkDcuPsuMap ( DbTkDcuPsuMapAccess *dbAccess )throw (FecExcept
  * @see <I>XMLCommonFec::XMLCommonFec(std::string xmlFileName)</I>
  * @see <I>XMLTkDcuPsuMap::init()</I>
  */
-XMLTkDcuPsuMap::XMLTkDcuPsuMap ( std::string xmlFileName ) throw (FecExceptionHandler) : XMLCommonFec( xmlFileName ) {
+XMLTkDcuPsuMap::XMLTkDcuPsuMap ( std::string xmlFileName ) noexcept(false) : XMLCommonFec( xmlFileName ) {
 
   countDcuPsuMap_ = 0 ;
   dcuPsuMapParameterNames_ = TkDcuPsuMap::getParameterNames() ;
@@ -122,7 +122,7 @@ tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMapVector () {
  * Copy all elements from <I>dVector</I> parameter to <I>pVector_</I> attribute
  * @exception FecExceptionHandler : a FecExceptionHandler is raised, if <I>pVector_</I> is NULL
  */
-void XMLTkDcuPsuMap::setDcuPsuMapVector (tkDcuPsuMapVector dVector) throw (FecExceptionHandler) {
+void XMLTkDcuPsuMap::setDcuPsuMapVector (tkDcuPsuMapVector dVector) noexcept(false) {
   // empty and delete previous dVector_
 #ifdef DATABASEDEBUG
   std::cout << "on vide le dVector !!!!!" << std::endl;
@@ -178,7 +178,7 @@ unsigned int XMLTkDcuPsuMap::parseAttributes ( XERCES_CPP_NAMESPACE::DOMNode *n
  * @exception FecExceptionHandler : a FecExceptionHandler is raised if the attribute <I>xmlInputSource_</I> is NULL
  * @see XMLTkDcuPsuMap::parseXMLBuffer()
  */
-tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMaps () throw (FecExceptionHandler) {
+tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMaps () noexcept(false) {
   parseXMLBuffer();
   return dVector_;
 }
@@ -198,7 +198,7 @@ tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMaps () throw (FecExceptionHandler) {
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLTkDcuPsuMap::parsePsuNameDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
@@ -265,7 +265,7 @@ void XMLTkDcuPsuMap::parsePsuNameDatabaseResponse(std::string partitionName, uns
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLTkDcuPsuMap::parseDcuPsuMapDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
@@ -328,7 +328,7 @@ void XMLTkDcuPsuMap::parseDcuPsuMapDatabaseResponse(std::string partitionName, u
  *    - the dataBaseAccess or the partition name have not been intialized
  */
 void XMLTkDcuPsuMap::parsePsuNotConnectedDatabaseResponse(std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferFromPartitionName";
 
@@ -393,7 +393,7 @@ void XMLTkDcuPsuMap::parsePsuNotConnectedDatabaseResponse(std::string partitionN
  * @see <I>XMLCommonFec::parseDatabaseResponse(std::string partitionName)</I>
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNames (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) throw (FecExceptionHandler) {
+tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNames (std::string partitionName, unsigned int versionMajorId, unsigned int versionMinorId) noexcept(false) {
   parsePsuNameDatabaseResponse(partitionName,versionMajorId,versionMinorId);
   parseXMLBuffer();
   return dVector_;
@@ -410,7 +410,7 @@ tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNames (std::string partitionName, unsign
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMap (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMap (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
   parseDcuPsuMapDatabaseResponse(partitionName,majorVersionId, minorVersionId);
   parseXMLBuffer();
   return dVector_;
@@ -427,7 +427,7 @@ tkDcuPsuMapVector XMLTkDcuPsuMap::getDcuPsuMap (std::string partitionName, unsig
  * @exception FecExceptionHandler
  * @see <I>XMLCommonFec::parseXMLBuffer()</I>
  */
-tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNotConnected (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) throw (FecExceptionHandler) {
+tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNotConnected (std::string partitionName, unsigned int majorVersionId, unsigned int minorVersionId) noexcept(false) {
   parsePsuNotConnectedDatabaseResponse(partitionName,majorVersionId, minorVersionId);
   parseXMLBuffer();
   return dVector_;
@@ -443,7 +443,7 @@ tkDcuPsuMapVector XMLTkDcuPsuMap::getPsuNotConnected (std::string partitionName,
  *     - the MemBufOutputSource created from the parameter <I>dVector</I> is not initialized 
  * @see XMLFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  */
-void XMLTkDcuPsuMap::setFileDcuPsuMap ( tkDcuPsuMapVector dVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLTkDcuPsuMap::setFileDcuPsuMap ( tkDcuPsuMapVector dVector, std::string outputFileName) noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector,false);
   XMLCommonFec::writeXMLFile(memBufOS.getOutputBuffer()->str(), outputFileName);
@@ -458,7 +458,7 @@ void XMLTkDcuPsuMap::setFileDcuPsuMap ( tkDcuPsuMapVector dVector, std::string o
  * @see XMLFec::writeXMLFile(std::ostringstream *xmlBuffer,std::string xmlFileName);
  * @warning the formating is the same than for the DCU/PSU map
  */
-void XMLTkDcuPsuMap::setFilePsuName ( tkDcuPsuMapVector dVector, std::string outputFileName) throw (FecExceptionHandler) {
+void XMLTkDcuPsuMap::setFilePsuName ( tkDcuPsuMapVector dVector, std::string outputFileName) noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector,false);
   XMLCommonFec::writeXMLFile(memBufOS.getOutputBuffer()->str(), outputFileName);
@@ -474,7 +474,7 @@ void XMLTkDcuPsuMap::setFilePsuName ( tkDcuPsuMapVector dVector, std::string out
  *     - a SQLException is thrown during the PL/SQL statement creation or execution
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  */
-void XMLTkDcuPsuMap::setDbDcuPsuMaps (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId)  throw (FecExceptionHandler) {
+void XMLTkDcuPsuMap::setDbDcuPsuMaps (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId)  noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector, true);
   try {
@@ -504,7 +504,7 @@ void XMLTkDcuPsuMap::setDbDcuPsuMaps (tkDcuPsuMapVector dVector, std::string par
  * @see DbAccess::setXMLClob(std::string xmlBuffer, unsigned int versionMajor, unsigned int versionMinor);
  * @warning same call than for the setDbDcuPsuMap, same XML formatting
  */
-void XMLTkDcuPsuMap::setDbPsuNames (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId)  throw (FecExceptionHandler) {
+void XMLTkDcuPsuMap::setDbPsuNames (tkDcuPsuMapVector dVector, std::string partitionName, unsigned int *versionMajorId, unsigned int *versionMinorId)  noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector, true);
   try {
diff --git a/FecSoftwareV3_0/generic/src/common/XMLTkIdVsHostname.cc b/FecSoftwareV3_0/generic/src/common/XMLTkIdVsHostname.cc
index f5510a3..e03c314 100755
--- a/FecSoftwareV3_0/generic/src/common/XMLTkIdVsHostname.cc
+++ b/FecSoftwareV3_0/generic/src/common/XMLTkIdVsHostname.cc
@@ -24,7 +24,7 @@ using namespace XERCES_CPP_NAMESPACE ;
 
 /** Default constructor
  */
-XMLTkIdVsHostname::XMLTkIdVsHostname () throw (FecExceptionHandler) :
+XMLTkIdVsHostname::XMLTkIdVsHostname () noexcept(false) :
   XMLCommonFec () {
 
   countTkIdVsHostname_ = 0 ;
@@ -34,7 +34,7 @@ XMLTkIdVsHostname::XMLTkIdVsHostname () throw (FecExceptionHandler) :
 /** Constructor with xml buffer
  * \param xmlBuffer - XML buffer
  */
-XMLTkIdVsHostname::XMLTkIdVsHostname ( const XMLByte* xmlBuffer ) throw (FecExceptionHandler) : XMLCommonFec( xmlBuffer ) {
+XMLTkIdVsHostname::XMLTkIdVsHostname ( const XMLByte* xmlBuffer ) noexcept(false) : XMLCommonFec( xmlBuffer ) {
 
   countTkIdVsHostname_ = 0 ;
   parameterNames_ = TkIdVsHostnameDescription::getParameterNames() ;
@@ -44,7 +44,7 @@ XMLTkIdVsHostname::XMLTkIdVsHostname ( const XMLByte* xmlBuffer ) throw (FecExce
 /** Constructor with database access
  * \param dbAccess - database access
  */
-XMLTkIdVsHostname::XMLTkIdVsHostname ( DbTkIdVsHostnameAccess *dbAccess )throw (FecExceptionHandler): 
+XMLTkIdVsHostname::XMLTkIdVsHostname ( DbTkIdVsHostnameAccess *dbAccess )noexcept(false): 
   XMLCommonFec( (DbCommonAccess *)dbAccess ) {
   
   countTkIdVsHostname_ = 0 ;
@@ -55,7 +55,7 @@ XMLTkIdVsHostname::XMLTkIdVsHostname ( DbTkIdVsHostnameAccess *dbAccess )throw (
 /** Constructor with file access
  * \param xmlFileName - XML file name
  */
-XMLTkIdVsHostname::XMLTkIdVsHostname ( std::string xmlFileName ) throw (FecExceptionHandler):
+XMLTkIdVsHostname::XMLTkIdVsHostname ( std::string xmlFileName ) noexcept(false):
   XMLCommonFec( xmlFileName ) {
 
   countTkIdVsHostname_ = 0 ;
@@ -133,7 +133,7 @@ TkIdVsHostnameVector XMLTkIdVsHostname::getTkIdVsHostnameVectorAttribut ( ) {
 /** Sets the device vector private attribute
  * \param tkIdVsHostname - vector of TkIdVsHostnameDescription
  */
-void XMLTkIdVsHostname::setTkIdVsHostnameVector (TkIdVsHostnameVector tkIdVsHostname) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::setTkIdVsHostnameVector (TkIdVsHostnameVector tkIdVsHostname) noexcept(false) {
 
   clearVector() ;
   for (TkIdVsHostnameVector::iterator it = tkIdVsHostname.begin() ; it != tkIdVsHostname.end() ; it ++) {
@@ -143,7 +143,7 @@ void XMLTkIdVsHostname::setTkIdVsHostnameVector (TkIdVsHostnameVector tkIdVsHost
 
 /** Gets a pointer on the device vector private attribute from database
  */
-TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostnameFromFile (  ) throw (FecExceptionHandler) {
+TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostnameFromFile (  ) noexcept(false) {
 
   parseXMLBuffer();
   return dVector_;
@@ -154,7 +154,7 @@ TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostnameFromFile (  ) throw
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-void XMLTkIdVsHostname::parseDatabaseResponse( unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::parseDatabaseResponse( unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferForAllIdVsHostname";
 #ifdef DATABASEDEBUG
@@ -209,7 +209,7 @@ void XMLTkIdVsHostname::parseDatabaseResponse( unsigned int versionMajor, unsign
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferForAllIdVsHostname";
 
@@ -266,7 +266,7 @@ void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned in
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) {
 
   std::string xmlBufferId = "theXMLBufferForAllIdVsHostname";
 #ifdef DATABASEDEBUG
@@ -320,7 +320,7 @@ void XMLTkIdVsHostname::parseDatabaseResponse( std::string hostname, unsigned in
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostname ( unsigned int versionMajor, unsigned int versionMinor  ) throw (FecExceptionHandler) {
+TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostname ( unsigned int versionMajor, unsigned int versionMinor  ) noexcept(false) {
 
   parseDatabaseResponse(versionMajor,versionMinor) ;
   parseXMLBuffer();
@@ -332,7 +332,7 @@ TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdVsHostname ( unsigned int vers
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) {
+TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdFromHostname ( std::string hostname, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) {
 
   parseDatabaseResponse(hostname,versionMajor,versionMinor) ;
   parseXMLBuffer();
@@ -345,7 +345,7 @@ TkIdVsHostnameVector XMLTkIdVsHostname::getAllTkIdFromHostname ( std::string hos
  * \param versionMajor - version major (default 0)
  * \param versionMinor - version minor (default 0)
  */
-TkIdVsHostnameVector XMLTkIdVsHostname::getTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) throw (FecExceptionHandler) {
+TkIdVsHostnameVector XMLTkIdVsHostname::getTkIdFromHostnameSlot ( std::string hostname, unsigned int slot, unsigned int versionMajor, unsigned int versionMinor ) noexcept(false) {
 
   parseDatabaseResponse(hostname,slot,versionMajor,versionMinor) ;
   parseXMLBuffer();
@@ -358,7 +358,7 @@ TkIdVsHostnameVector XMLTkIdVsHostname::getTkIdFromHostnameSlot ( std::string ho
  * \param dVector - vector of TkIdVsHostnameDescription
  * \param outputFileName - output file name
  */
-void XMLTkIdVsHostname::setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, std::string outputFileName ) noexcept(false) {
   
   if (dVector.size()) {
     MemBufOutputSource memBufOS (dVector, false );
@@ -371,7 +371,7 @@ void XMLTkIdVsHostname::setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector,
 /** Writes the device vector attribute in a ASCII file
  * \param outputFileName - output file name
  */
-void XMLTkIdVsHostname::setTkIdVsHostnameVector ( std::string outputFileName ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::setTkIdVsHostnameVector ( std::string outputFileName ) noexcept(false) {
 
   if (dVector_.size()) {
     MemBufOutputSource memBufOS (dVector_ );
@@ -387,7 +387,7 @@ void XMLTkIdVsHostname::setTkIdVsHostnameVector ( std::string outputFileName ) t
  * \param major - major or minor version (major if all, minor if a part)
  * \warning the vector is set at the level of a hostname
  */
-void XMLTkIdVsHostname::setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, bool major ) throw (FecExceptionHandler) {
+void XMLTkIdVsHostname::setTkIdVsHostnameVector ( TkIdVsHostnameVector dVector, bool major ) noexcept(false) {
 
   MemBufOutputSource memBufOS(dVector, true);
   try {
diff --git a/FecSoftwareV3_0/generic/src/common/apvAccess.cc b/FecSoftwareV3_0/generic/src/common/apvAccess.cc
index 63a4daa..3d50ec1 100755
--- a/FecSoftwareV3_0/generic/src/common/apvAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/apvAccess.cc
@@ -679,7 +679,7 @@ void apvAccess::getBlockWriteValues ( apvDescription apvValues, std::list<access
  */
 unsigned int apvAccess::getApvValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, apvAccess *> &apvSet, deviceVector &apvVector,
 						     std::list<FecExceptionHandler *> &errorList ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, apvDescription * > deviceDescriptionsMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/ccuChannelAccess.cc b/FecSoftwareV3_0/generic/src/common/ccuChannelAccess.cc
index 18e1a33..c46ec6f 100755
--- a/FecSoftwareV3_0/generic/src/common/ccuChannelAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/ccuChannelAccess.cc
@@ -37,7 +37,7 @@ ccuChannelAccess::ccuChannelAccess ( keyType index,
                                      enumDeviceType deviceType,
                                      enumAccessModeType accessMask,
                                      FecRingDevice *fec) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
     
   /** Build the key for the device */
   accessKey_ = index ;
diff --git a/FecSoftwareV3_0/generic/src/common/dcuAccess.cc b/FecSoftwareV3_0/generic/src/common/dcuAccess.cc
index 3d1d1c5..5a2f040 100755
--- a/FecSoftwareV3_0/generic/src/common/dcuAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/dcuAccess.cc
@@ -136,7 +136,7 @@ bool dcuAccess::getChannelEnabled ( tscType8 channel ) {
  * \warning a new object reference is dynamically defined. Do not
  * forget to delete it.
  */
-dcuDescription *dcuAccess::getValues ( ) throw (FecExceptionHandler) {
+dcuDescription *dcuAccess::getValues ( ) noexcept(false) {
 
   // error counter
   errorDigitisationCounter_ = 0 ;
@@ -186,7 +186,7 @@ dcuDescription *dcuAccess::getValues ( ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler
  */
-tscType32 dcuAccess::getDcuHardId ( ) throw (FecExceptionHandler) {
+tscType32 dcuAccess::getDcuHardId ( ) noexcept(false) {
 
   // CHIPADD = 2^16 * CHIPADDH + 2^8 * CHIPADDM + CHIPADDL
   tscType32 chipaddh = accessToFec_->readOffset(accessKey_, CHIPADDH) ;
@@ -216,7 +216,7 @@ tscType32 dcuAccess::getDcuHardId ( ) throw (FecExceptionHandler) {
  * \warning this method try to read several time the same channels (timeout)
  * and if the channel cannot be read, the value 0 is returned
  */
-tscType16 dcuAccess::getDcuChannel ( tscType8 channel, bool setTreg ) throw (FecExceptionHandler) {
+tscType16 dcuAccess::getDcuChannel ( tscType8 channel, bool setTreg ) noexcept(false) {
 
   //#define DEBUGMSGERROR
   volatile tscType16 shreg ;
@@ -327,7 +327,7 @@ void dcuAccess::reset () {
  * \param value - value to be written
  * \exception FecExceptionHandler:
  */
-void dcuAccess::setDcuCREG( tscType8 value ) throw (FecExceptionHandler) {
+void dcuAccess::setDcuCREG( tscType8 value ) noexcept(false) {
 
   accessToFec_->writeOffset(accessKey_, CREG, value);
 }
@@ -336,7 +336,7 @@ void dcuAccess::setDcuCREG( tscType8 value ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler:
  */
-tscType8 dcuAccess::getDcuCREG() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuCREG() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,CREG);
   return readvalue;
@@ -346,7 +346,7 @@ tscType8 dcuAccess::getDcuCREG() throw (FecExceptionHandler) {
  * \param value - value to be written
  * \exception FecExceptionHandler:
  */
-void dcuAccess::setDcuTREG( tscType8 value ) throw (FecExceptionHandler) {
+void dcuAccess::setDcuTREG( tscType8 value ) noexcept(false) {
 
   accessToFec_->writeOffset(accessKey_, TREG, value);
 }
@@ -355,7 +355,7 @@ void dcuAccess::setDcuTREG( tscType8 value ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler:
  */
-tscType8 dcuAccess::getDcuTREG() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuTREG() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,TREG);
   return readvalue;
@@ -366,7 +366,7 @@ tscType8 dcuAccess::getDcuTREG() throw (FecExceptionHandler) {
  * \exception FecExceptionHandler:
  * Thanks to Wim Beaumont
  */
-void dcuAccess::setDcuTestRegister( tscType8 value ) throw (FecExceptionHandler) {
+void dcuAccess::setDcuTestRegister( tscType8 value ) noexcept(false) {
 
   accessToFec_->writeOffset(accessKey_, TREG, value);
   //usleep (WAITTIME4DIGITOK) ;
@@ -377,7 +377,7 @@ void dcuAccess::setDcuTestRegister( tscType8 value ) throw (FecExceptionHandler)
  * \exception FecExceptionHandler:
  * Thanks to Wim Beaumont
  */
-tscType8 dcuAccess::getDcuTestRegister() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuTestRegister() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,TREG);
   //usleep (WAITTIME4DIGITOK) ;
@@ -388,7 +388,7 @@ tscType8 dcuAccess::getDcuTestRegister() throw (FecExceptionHandler) {
  * \param value - value to be written
  * \exception FecExceptionHandler:
  */
-void dcuAccess::setDcuAREG( tscType8 value ) throw (FecExceptionHandler) {
+void dcuAccess::setDcuAREG( tscType8 value ) noexcept(false) {
 
   accessToFec_->writeOffset(accessKey_, AREG, value);
 }
@@ -397,7 +397,7 @@ void dcuAccess::setDcuAREG( tscType8 value ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler:
  */
-tscType8 dcuAccess::getDcuAREG() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuAREG() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,AREG);
   return readvalue;
@@ -407,7 +407,7 @@ tscType8 dcuAccess::getDcuAREG() throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler:
  */
-tscType8 dcuAccess::getDcuSHREG() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuSHREG() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,SHREG);
   return readvalue;
@@ -417,7 +417,7 @@ tscType8 dcuAccess::getDcuSHREG() throw (FecExceptionHandler) {
  * \param value - value to be written
  * \exception FecExceptionHandler:
  */
-void dcuAccess::setDcuLREG( tscType8 value ) throw (FecExceptionHandler) {
+void dcuAccess::setDcuLREG( tscType8 value ) noexcept(false) {
 
   accessToFec_->writeOffset(accessKey_, LREG, value);
 }
@@ -426,7 +426,7 @@ void dcuAccess::setDcuLREG( tscType8 value ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler:
  */
-tscType8 dcuAccess::getDcuLREG() throw (FecExceptionHandler) {
+tscType8 dcuAccess::getDcuLREG() noexcept(false) {
 
   tscType8 readvalue=accessToFec_->readOffset(accessKey_,LREG);
   return readvalue;
@@ -435,7 +435,7 @@ tscType8 dcuAccess::getDcuLREG() throw (FecExceptionHandler) {
 /** \return true if as SEU is detected ( bit 6  of Satais & DataReg = 1 )
  * Thanks to Wim Beaumont
  */
-bool dcuAccess::getSeuStatus() throw (FecExceptionHandler) {
+bool dcuAccess::getSeuStatus() noexcept(false) {
 
   tscType16 readvalue=accessToFec_->readOffset(accessKey_,SHREG); 
 
@@ -454,7 +454,7 @@ bool dcuAccess::getSeuStatus() throw (FecExceptionHandler) {
  */
 unsigned int dcuAccess::getDcuValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, dcuAccess *> &dcuSet, deviceVector &dcuVector,
 						     std::list<FecExceptionHandler *> &errorList, bool dcuHardIdOnly ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
 #define DCUDEBUG
   // hash_map with the classification of the devices per ring
diff --git a/FecSoftwareV3_0/generic/src/common/delay25Access.cc b/FecSoftwareV3_0/generic/src/common/delay25Access.cc
index d8382ee..bf11fb1 100755
--- a/FecSoftwareV3_0/generic/src/common/delay25Access.cc
+++ b/FecSoftwareV3_0/generic/src/common/delay25Access.cc
@@ -118,7 +118,7 @@ void delay25Access::setValues ( delay25Description delay25Values ) {
  * \warning a new object reference is dynamically defined. Do not
  * forget to delete it.
  */
-delay25Description *delay25Access::getValues ( ) throw (FecExceptionHandler) {
+delay25Description *delay25Access::getValues ( ) noexcept(false) {
 
   delay25Description *delay25Values = 
     new delay25Description (accessKey_,
@@ -140,7 +140,7 @@ delay25Description *delay25Access::getValues ( ) throw (FecExceptionHandler) {
  * \warning see the source for more explanation
  * \warning setDelayFine
  */
-void delay25Access::setDelay0 ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void delay25Access::setDelay0 ( tscType8 delay_step ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "delay25Access::setDelay0: Write CR0(0x" << std::hex << (int)CR0 << "<7>) = 0x" << std::hex << (int)delay_step << ")" << std::endl ;
@@ -157,7 +157,7 @@ void delay25Access::setDelay0 ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning see the source for more explanation
  * \warning setDelayFine
  */
-void delay25Access::setDelay1 ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void delay25Access::setDelay1 ( tscType8 delay_step ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "delay25Access::setDelay1: Write CR1(0x" << std::hex << (int)CR1 << "<7>) = 0x" << std::hex << (int)delay_step << ")" << std::endl ;
@@ -174,7 +174,7 @@ void delay25Access::setDelay1 ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning setDelayFine
  */
 
-void delay25Access::setDelay2 ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void delay25Access::setDelay2 ( tscType8 delay_step ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "delay25Access::setDelay2: Write CR2(0x" << std::hex << (int)CR2 << "<7>) = 0x" << std::hex << (int)delay_step << ")" << std::endl ;
@@ -191,7 +191,7 @@ void delay25Access::setDelay2 ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning setDelayFine
  */
 
-void delay25Access::setDelay3 ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void delay25Access::setDelay3 ( tscType8 delay_step ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "delay25Access::setDelay3: Write CR3(0x" << std::hex << (int)CR3 << "<7>) = 0x" << std::hex << (int)delay_step << ")" << std::endl ;
@@ -208,7 +208,7 @@ void delay25Access::setDelay3 ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning setDelayFine
  */
 
-void delay25Access::setDelay4 ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void delay25Access::setDelay4 ( tscType8 delay_step ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "delay25Access::setDelay4: Write CR4(0x" << std::hex << (int)CR4 << "<7>) = 0x" << std::hex << (int)delay_step << ")" << std::endl ;
@@ -225,7 +225,7 @@ void delay25Access::setDelay4 ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning setDelayFine
  */
 
-void delay25Access::set40HzFrequencyMode ( ) throw (FecExceptionHandler) {
+void delay25Access::set40HzFrequencyMode ( ) noexcept(false) {
 
   // Convert delay step
   tscType8 mode_val = getFrequencyModeMap ( PixelDelay25FrequencyMode ) ;
@@ -245,7 +245,7 @@ void delay25Access::set40HzFrequencyMode ( ) throw (FecExceptionHandler) {
  * <li>TSCFEC_FECPARAMETERNOTMANAGED
  * </ul>
  */
-tscType8 delay25Access::getDelay0 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getDelay0 ( ) noexcept(false) {
 
   tscType8 i2cdata    = accessToFec_->readOffset ( accessKey_, CR0 ) ; // Read CR0
   tscType8 delay_step = i2cdata & DELAY25_DELAY ; // Read CR0<5:0>
@@ -266,7 +266,7 @@ tscType8 delay25Access::getDelay0 ( ) throw (FecExceptionHandler) {
  * </ul>
  */
 
-tscType8 delay25Access::getDelay1 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getDelay1 ( ) noexcept(false) {
 
   tscType8 i2cdata    = accessToFec_->readOffset ( accessKey_, CR1 ) ; // Read CR1
   tscType8 delay_step = i2cdata & DELAY25_DELAY ; // Read CR1<5:0>
@@ -287,7 +287,7 @@ tscType8 delay25Access::getDelay1 ( ) throw (FecExceptionHandler) {
  * </ul>
  */
 
-tscType8 delay25Access::getDelay2 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getDelay2 ( ) noexcept(false) {
 
   tscType8 i2cdata    = accessToFec_->readOffset ( accessKey_, CR2 ) ; // Read CR2
   tscType8 delay_step = i2cdata & DELAY25_DELAY ; // Read CR2<5:0>
@@ -308,7 +308,7 @@ tscType8 delay25Access::getDelay2 ( ) throw (FecExceptionHandler) {
  * </ul>
  */
 
-tscType8 delay25Access::getDelay3 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getDelay3 ( ) noexcept(false) {
 
   tscType8 i2cdata    = accessToFec_->readOffset ( accessKey_, CR3 ) ; // Read CR3
   tscType8 delay_step = i2cdata & DELAY25_DELAY ; // Read CR3<5:0>
@@ -329,7 +329,7 @@ tscType8 delay25Access::getDelay3 ( ) throw (FecExceptionHandler) {
  * </ul>
  */
 
-tscType8 delay25Access::getDelay4 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getDelay4 ( ) noexcept(false) {
 
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR4 ) ; // Read CR4
   tscType8 delay_step = i2cdata & DELAY25_DELAY ; // Read CR4<5:0>
@@ -347,7 +347,7 @@ tscType8 delay25Access::getDelay4 ( ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler
  */
-tscType8 delay25Access::getFrequencyMode ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getFrequencyMode ( ) noexcept(false) {
 
   tscType8 i2cdata  = accessToFec_->readOffset ( accessKey_, GCR ) ; // Read GCR
   tscType8 mode_val = i2cdata & DELAY25_CLOCKFREQUENCY ; //Read GCR<1:0> 
@@ -375,7 +375,7 @@ tscType8 delay25Access::getFrequencyMode ( ) throw (FecExceptionHandler) {
  * \warning Original code was: bool tsc_delay25_check_status(tsc_descriptor_index  delay25)
  * \warning DELAY25 control: comment: update to match the Official Fec Driver library and new Delay25 
  */
-/*tscType8 delay25Access::delay25Reset ( ) throw (FecExceptionHandler) {
+/*tscType8 delay25Access::delay25Reset ( ) noexcept(false) {
 
 
   tscType8 reset = 0;
@@ -405,7 +405,7 @@ tscType8 delay25Access::getFrequencyModeMapBack ( tscType8 k ) {
  * <li>TSCFEC_FECPARAMETERNOTMANAGED
  * </ul>
  */
-tscType8 delay25Access::getFrequencyModeMap ( tscType8 k ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getFrequencyModeMap ( tscType8 k ) noexcept(false) {
 
   tscType8 mode;
 	
@@ -426,7 +426,7 @@ tscType8 delay25Access::getFrequencyModeMap ( tscType8 k ) throw (FecExceptionHa
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getCR0 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getCR0 ( ) noexcept(false) {
 
   // Read CTR1
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR0 ) ;
@@ -438,7 +438,7 @@ tscType8 delay25Access::getCR0 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getCR1 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getCR1 ( ) noexcept(false) {
 
   // Read CTR1
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR1 ) ;
@@ -450,7 +450,7 @@ tscType8 delay25Access::getCR1 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getCR2 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getCR2 ( ) noexcept(false) {
 
   // Read CTR2
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR2 ) ;
@@ -462,7 +462,7 @@ tscType8 delay25Access::getCR2 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getCR3 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getCR3 ( ) noexcept(false) {
 
   // Read CTR3
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR3 ) ;
@@ -474,7 +474,7 @@ tscType8 delay25Access::getCR3 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getCR4 ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getCR4 ( ) noexcept(false) {
 
   // Read CTR1
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CR4 ) ;
@@ -486,7 +486,7 @@ tscType8 delay25Access::getCR4 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 delay25Access::getGCR ( ) throw (FecExceptionHandler) {
+tscType8 delay25Access::getGCR ( ) noexcept(false) {
 
   // Read CTR1
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, GCR ) ;
@@ -498,7 +498,7 @@ tscType8 delay25Access::getGCR ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setCR0 ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setCR0 ( tscType8 value ) noexcept(false) {
 
   // Write CR0
   accessToFec_->writeOffset ( accessKey_, CR0, value ) ;
@@ -509,7 +509,7 @@ void delay25Access::setCR0 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setCR1 ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setCR1 ( tscType8 value ) noexcept(false) {
 
   // Write CR1
   accessToFec_->writeOffset ( accessKey_, CR1, value ) ;
@@ -520,7 +520,7 @@ void delay25Access::setCR1 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setCR2 ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setCR2 ( tscType8 value ) noexcept(false) {
 
   // Write CR2
   accessToFec_->writeOffset ( accessKey_, CR2, value ) ;
@@ -531,7 +531,7 @@ void delay25Access::setCR2 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setCR3 ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setCR3 ( tscType8 value ) noexcept(false) {
 
   // Write CR3
   accessToFec_->writeOffset ( accessKey_, CR3, value ) ;
@@ -542,7 +542,7 @@ void delay25Access::setCR3 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setCR4 ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setCR4 ( tscType8 value ) noexcept(false) {
 
   // Write CR4
   accessToFec_->writeOffset ( accessKey_, CR4, value ) ;
@@ -553,7 +553,7 @@ void delay25Access::setCR4 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void delay25Access::setGCR ( tscType8 value ) throw (FecExceptionHandler) {
+void delay25Access::setGCR ( tscType8 value ) noexcept(false) {
 
   // Write GCR
   accessToFec_->writeOffset ( accessKey_, GCR, value ) ;
@@ -652,7 +652,7 @@ void delay25Access::getBlockWriteValues ( delay25Description delay25Values, acce
  * \warning if a problem occurs in one channel then 0 is set in the corresponding registers
  */ 
 unsigned int delay25Access::getDelay25ValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, delay25Access *> &delay25Set, deviceVector &delay25Vector, std::list<FecExceptionHandler *> &errorList ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, delay25Description * > deviceDescriptionsMap ;
@@ -817,7 +817,7 @@ unsigned int delay25Access::getDelay25ValuesMultipleFrames ( FecAccess &fecAcces
 }
 
 
-void delay25Access::forceDLLResynchronisation ( ) throw (FecExceptionHandler) {
+void delay25Access::forceDLLResynchronisation ( ) noexcept(false) {
  
   // Read GCR
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, GCR ) ; 
@@ -828,7 +828,7 @@ void delay25Access::forceDLLResynchronisation ( ) throw (FecExceptionHandler) {
   accessToFec_->writeOffset ( accessKey_, GCR, mode_val | DELAY25_GCR_IDLL ) ;
 }
 
-void delay25Access::SetIDLLBitToZero ( ) throw (FecExceptionHandler) {
+void delay25Access::SetIDLLBitToZero ( ) noexcept(false) {
  
   // Read GCR
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, GCR ) ; 
diff --git a/FecSoftwareV3_0/generic/src/common/deltaAccess.cc b/FecSoftwareV3_0/generic/src/common/deltaAccess.cc
index afcef84..fb19cc4 100755
--- a/FecSoftwareV3_0/generic/src/common/deltaAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/deltaAccess.cc
@@ -435,7 +435,7 @@ void deltaAccess::getBlockWriteValues ( class deltaDescription& deltaValues, acc
  */
 unsigned int deltaAccess::getDeltaValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, deltaAccess *> &deltaSet, deviceVector &deltaVector,
 							 std::list<FecExceptionHandler *> &errorList ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, deltaDescription * > deviceDescriptionsMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/laserdriverAccess.cc b/FecSoftwareV3_0/generic/src/common/laserdriverAccess.cc
index 703de6c..79857fb 100755
--- a/FecSoftwareV3_0/generic/src/common/laserdriverAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/laserdriverAccess.cc
@@ -110,7 +110,7 @@ void laserdriverAccess::setDescription ( laserdriverDescription laserdriverValue
  * \param laserdriverValues - all the values for a laserdriver
  * \exception FecExceptionHandler
  */
-void laserdriverAccess::setValues ( laserdriverDescription laserdriverValues ) throw (FecExceptionHandler) {
+void laserdriverAccess::setValues ( laserdriverDescription laserdriverValues ) noexcept(false) {
 
   tscType8 bias[MAXLASERDRIVERCHANNELS] ;
 
@@ -130,7 +130,7 @@ void laserdriverAccess::setValues ( laserdriverDescription laserdriverValues ) t
  * \warning a new object reference is dynamically defined. Do not
  * forget to delete it.
  */
-laserdriverDescription *laserdriverAccess::getValues ( ) throw (FecExceptionHandler) {
+laserdriverDescription *laserdriverAccess::getValues ( ) noexcept(false) {
 
   // Retreive the bias value for all the channels
   tscType8 bias[MAXLASERDRIVERCHANNELS] ;
@@ -149,7 +149,7 @@ laserdriverDescription *laserdriverAccess::getValues ( ) throw (FecExceptionHand
  * \param Value to be set
  * \exception FecExceptionHandler
  */
-void laserdriverAccess::setGain ( tscType8 gain ) throw (FecExceptionHandler) {
+void laserdriverAccess::setGain ( tscType8 gain ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
 
@@ -168,7 +168,7 @@ void laserdriverAccess::setGain ( tscType8 gain ) throw (FecExceptionHandler) {
  * \return return the value read
  * \exception FecExceptionHandler
  */
-tscType8 laserdriverAccess::getGain ( ) throw (FecExceptionHandler) {
+tscType8 laserdriverAccess::getGain ( ) noexcept(false) {
 
   return (accessToFec_->readOffset ( accessKey_, GAINSELECTION ) ) ;
 }
@@ -177,7 +177,7 @@ tscType8 laserdriverAccess::getGain ( ) throw (FecExceptionHandler) {
  * \param Value to be set
  * \exception FecExceptionHandler
  */
-void laserdriverAccess::setBias ( tscType8 *bias ) throw (FecExceptionHandler) {
+void laserdriverAccess::setBias ( tscType8 *bias ) noexcept(false) {
 
   // Write it
   for (tscType8 i = 0 ; i < MAXLASERDRIVERCHANNELS ; i ++) {
@@ -196,7 +196,7 @@ void laserdriverAccess::setBias ( tscType8 *bias ) throw (FecExceptionHandler) {
  * \param bias - pointer to an array of values
  * \exception FecExceptionHandler
  */
-void laserdriverAccess::getBias ( tscType8 *bias ) throw (FecExceptionHandler) {
+void laserdriverAccess::getBias ( tscType8 *bias ) noexcept(false) {
 
   for (tscType8 i = 0 ; i < MAXLASERDRIVERCHANNELS ; i ++) {
 
@@ -206,7 +206,7 @@ void laserdriverAccess::getBias ( tscType8 *bias ) throw (FecExceptionHandler) {
 
 /** \return true if as SEU is detected ( bit 8 of gainReg = 1 )
  */
-bool laserdriverAccess::getSeuStatus() throw (FecExceptionHandler) { 
+bool laserdriverAccess::getSeuStatus() noexcept(false) { 
 
   return ((bool) ( getGain() & LASERDRIVERSEUDETECTED )) ;
 }
@@ -242,7 +242,7 @@ void laserdriverAccess::getBlockWriteValues ( laserdriverDescription laserdriver
  * \warning if a problem occurs in one channel then 0 is set in the corresponding registers
  */
 unsigned int laserdriverAccess::getLaserdriverValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, laserdriverAccess *> &laserdriverSet, deviceVector &laserdriverVector,
-								      std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) {
+								      std::list<FecExceptionHandler *> &errorList ) noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, laserdriverDescription * > deviceDescriptionsMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/laserdriverDescription.cc b/FecSoftwareV3_0/generic/src/common/laserdriverDescription.cc
index 67f2a69..98eded2 100755
--- a/FecSoftwareV3_0/generic/src/common/laserdriverDescription.cc
+++ b/FecSoftwareV3_0/generic/src/common/laserdriverDescription.cc
@@ -285,7 +285,7 @@ tscType8 laserdriverDescription::getGain ( ) {
  * \return the value
  * \exception FecExceptionHandler in case of bad channel number
  */
-tscType8 laserdriverDescription::getGain ( tscType8 channel ) throw (FecExceptionHandler) {
+tscType8 laserdriverDescription::getGain ( tscType8 channel ) noexcept(false) {
 
   tscType8 gain = 0 ;
 
@@ -308,7 +308,7 @@ tscType8 laserdriverDescription::getGain ( tscType8 channel ) throw (FecExceptio
  * \param channel - channel value
  * \param gain - gain value
  */
-void laserdriverDescription::setGain ( tscType8 channel, tscType8 gain) throw (FecExceptionHandler) {
+void laserdriverDescription::setGain ( tscType8 channel, tscType8 gain) noexcept(false) {
 
   switch (channel) {
   case 0: gain0_ = gain ; break ;
@@ -376,7 +376,7 @@ tscType8 laserdriverDescription::getBias2 ( ) { return (bias2_) ; }
  * \return the value
  * \exception FecExceptionHandler in case of bad channel number
  */
-tscType8 laserdriverDescription::getBias ( tscType8 channel ) throw (FecExceptionHandler) {
+tscType8 laserdriverDescription::getBias ( tscType8 channel ) noexcept(false) {
 
   tscType8 bias = 0 ;
 
@@ -399,7 +399,7 @@ tscType8 laserdriverDescription::getBias ( tscType8 channel ) throw (FecExceptio
  * \param channel - channel value
  * \param bias - bias value
  */
-void laserdriverDescription::setBias ( tscType8 channel, tscType8 bias) throw (FecExceptionHandler) {
+void laserdriverDescription::setBias ( tscType8 channel, tscType8 bias) noexcept(false) {
 
   switch (channel) {
   case 0: bias0_ = bias ; break ;
diff --git a/FecSoftwareV3_0/generic/src/common/muxAccess.cc b/FecSoftwareV3_0/generic/src/common/muxAccess.cc
index 1322e43..b12847f 100755
--- a/FecSoftwareV3_0/generic/src/common/muxAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/muxAccess.cc
@@ -155,7 +155,7 @@ void muxAccess::getBlockWriteValues ( muxDescription muxValues, std::list<access
  */
 unsigned int muxAccess::getMuxValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, muxAccess *> &muxSet, deviceVector &muxVector,
 						     std::list<FecExceptionHandler *> &errorList ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, muxDescription * > deviceDescriptionsMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/philipsAccess.cc b/FecSoftwareV3_0/generic/src/common/philipsAccess.cc
index ee68c31..3b133c6 100755
--- a/FecSoftwareV3_0/generic/src/common/philipsAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/philipsAccess.cc
@@ -153,7 +153,7 @@ void philipsAccess::getBlockWriteValues ( philipsDescription philipsValues, std:
  * \warning if a problem occurs in one channel then 0 is set in the corresponding registers
  */
 unsigned int philipsAccess::getPhilipsValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, philipsAccess *> &philipsSet, deviceVector &philipsVector,
-							     std::list<FecExceptionHandler *> &errorList ) throw (FecExceptionHandler) {
+							     std::list<FecExceptionHandler *> &errorList ) noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, philipsDescription * > deviceDescriptionsMap ;
diff --git a/FecSoftwareV3_0/generic/src/common/pllAccess.cc b/FecSoftwareV3_0/generic/src/common/pllAccess.cc
index 4ba5566..f74b7d0 100755
--- a/FecSoftwareV3_0/generic/src/common/pllAccess.cc
+++ b/FecSoftwareV3_0/generic/src/common/pllAccess.cc
@@ -128,7 +128,7 @@ void pllAccess::setValues ( pllDescription pllValues ) {
  * \warning a new object reference is dynamically defined. Do not
  * forget to delete it.
  */
-pllDescription *pllAccess::getValues ( ) throw (FecExceptionHandler) {
+pllDescription *pllAccess::getValues ( ) noexcept(false) {
 
   pllDescription *pllValues = 
     new pllDescription (accessKey_,
@@ -157,7 +157,7 @@ tscType8 pllAccess::getPllDac ( ) { return pllDac_ ; }
  * \warning see the source for more explanation
  * \warning setDelayFine
  */
-void pllAccess::setClockPhase ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void pllAccess::setClockPhase ( tscType8 delay_step ) noexcept(false) {
 
   // Convert delay step
   tscType8 delay_val = getClockPhaseMap ( delay_step ) ;
@@ -183,7 +183,7 @@ void pllAccess::setClockPhase ( tscType8 delay_step ) throw (FecExceptionHandler
  * \warning see the source for more explanation
  * \warning setDelayCoarse
  */
-void pllAccess::setTriggerDelay ( tscType8 delay_step ) throw (FecExceptionHandler) {
+void pllAccess::setTriggerDelay ( tscType8 delay_step ) noexcept(false) {
 
   // Convert delay step
   tscType8 delay_val = getTriggerDelayMap ( delay_step ) ;
@@ -222,7 +222,7 @@ void pllAccess::setTriggerDelay ( tscType8 delay_step ) throw (FecExceptionHandl
  * <li>TSCFEC_FECPARAMETERNOTMANAGED
  * </ul>
  */
-tscType8 pllAccess::getClockPhase ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getClockPhase ( ) noexcept(false) {
 
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_2 ) ; // Read CTR2
   tscType8 delay_val = i2cdata & PLL_CLOCKPHASE_READ ; // Read CRT2<4:0>
@@ -260,7 +260,7 @@ tscType8 pllAccess::getClockPhase ( ) throw (FecExceptionHandler) {
  * \return the value read
  * \exception FecExceptionHandler
  */
-tscType8 pllAccess::getTriggerDelay ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getTriggerDelay ( ) noexcept(false) {
 
   // Read CTR2
   tscType8 cntrl2Orig = accessToFec_->readOffset ( accessKey_, CNTRL_2 ) ;
@@ -302,7 +302,7 @@ tscType8 pllAccess::getTriggerDelay ( ) throw (FecExceptionHandler) {
  * \param coldReset - issue a cold reset if it is true else issue a PLL reset (default false)
  * \see pllReset and pllInit
  */
-void pllAccess::setPllCheckGoingBit ( bool noCheck, bool coldReset ) throw (FecExceptionHandler) {
+void pllAccess::setPllCheckGoingBit ( bool noCheck, bool coldReset ) noexcept(false) {
 
   bool resetPll = true ;
   if (! noCheck) 
@@ -323,7 +323,7 @@ void pllAccess::setPllCheckGoingBit ( bool noCheck, bool coldReset ) throw (FecE
  * \warning Original code was: bool tsc_pll_check_status(tsc_descriptor_index  pll)
  * \warning PLL control: comment: update to match the Official Fec Driver library and new Pll 
  */
-tscType8 pllAccess::pllReset ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::pllReset ( ) noexcept(false) {
 
 #ifdef DEBUGMSGERROR
   std::cout << "pllAccess::pllReset: Write CNTRL_1(0x" << std::hex << (int)CNTRL_1 << "<3>) = RST_ON (0x" << std::hex << (int)PLL_RESET_ON << ")" << std::endl ;
@@ -399,7 +399,7 @@ tscType8 pllAccess::pllReset ( ) throw (FecExceptionHandler) {
  *       => Low gain (If high gain was to be used than the code would be 0xC0 instead of 0x80) 
  * Implementation of V6 is done here
  */
-tscType8 pllAccess::pllInit ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::pllInit ( ) noexcept(false) {
 
 #ifdef PLLCOLDINITVERSION3
   std::cout << "Version 3 of the PLL reset mono frame" << std::endl ;
@@ -514,7 +514,7 @@ tscType8 pllAccess::getClockPhaseMapBack ( tscType8 k ) {
  * </ul>
  * \warning Original code was: unsigned short tsc_pll_fine_delay_map(tscType8 k)
  */
-tscType8 pllAccess::getClockPhaseMap ( tscType8 k ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getClockPhaseMap ( tscType8 k ) noexcept(false) {
   
   tscType8 dly[] = {0x00,0x01,0x02,0x03,0x04,0x05,
 		    0x06,0x07,0x08,0x09,0x0a,0x0b,            
@@ -540,7 +540,7 @@ tscType8 pllAccess::getClockPhaseMap ( tscType8 k ) throw (FecExceptionHandler)
  * </ul>
  * \warning Original code was: unsigned short tsc_pll_coarse_delay_map(tscType8 k)
  */
-tscType8 pllAccess::getTriggerDelayMap ( tscType8 k ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getTriggerDelayMap ( tscType8 k ) noexcept(false) {
 	
   tscType8 dly[]={0x00,0x01,0x02,0x03,0x04,0x05,
 		  0x06,0x07,0x08,0x09,0x0a,0x0b,            
@@ -564,7 +564,7 @@ tscType8 pllAccess::getTriggerDelayMap ( tscType8 k ) throw (FecExceptionHandler
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 pllAccess::getCNTRL1 ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getCNTRL1 ( ) noexcept(false) {
 
   // Read CTR1
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_1 ) ;
@@ -576,7 +576,7 @@ tscType8 pllAccess::getCNTRL1 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 pllAccess::getCNTRL2 ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getCNTRL2 ( ) noexcept(false) {
 
   // Read CTR2
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_2 ) ;
@@ -588,7 +588,7 @@ tscType8 pllAccess::getCNTRL2 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-tscType8 pllAccess::getCNTRL3 ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getCNTRL3 ( ) noexcept(false) {
 
   // Read CTR3
   volatile tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_3 ) ;
@@ -601,7 +601,7 @@ tscType8 pllAccess::getCNTRL3 ( ) throw (FecExceptionHandler) {
  * Thanks to Wim Beaumont
  * \warning the register should be set before getting this register (PLL_CTRL2_RSEL should be set in the CTRL2)
  */
-tscType8 pllAccess::getCNTRL4 ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getCNTRL4 ( ) noexcept(false) {
 
   // Force the RSEL in CTRL2 to 0
   tscType8 ctrl2 = getCNTRL2() ;
@@ -622,7 +622,7 @@ tscType8 pllAccess::getCNTRL4 ( ) throw (FecExceptionHandler) {
  * Thanks to Wim Beaumont
  * \warning the register should be set before getting this register (PLL_CTRL2_RSEL should be set in the CTRL2)
  */
-tscType8 pllAccess::getCNTRL5 ( ) throw (FecExceptionHandler) {
+tscType8 pllAccess::getCNTRL5 ( ) noexcept(false) {
 
   // Force the RSEL in CTRL2 to 0
   tscType8 ctrl2 = getCNTRL2() ;
@@ -642,7 +642,7 @@ tscType8 pllAccess::getCNTRL5 ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void pllAccess::setCNTRL1 ( tscType8 value ) throw (FecExceptionHandler) {
+void pllAccess::setCNTRL1 ( tscType8 value ) noexcept(false) {
 
   // Write CTR1
   accessToFec_->writeOffset ( accessKey_, CNTRL_1, value ) ;
@@ -653,7 +653,7 @@ void pllAccess::setCNTRL1 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void pllAccess::setCNTRL2 ( tscType8 value ) throw (FecExceptionHandler) {
+void pllAccess::setCNTRL2 ( tscType8 value ) noexcept(false) {
 
   // Write CTR2
   accessToFec_->writeOffset ( accessKey_, CNTRL_2, value ) ;
@@ -664,7 +664,7 @@ void pllAccess::setCNTRL2 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-void pllAccess::setCNTRL3 ( tscType8 value ) throw (FecExceptionHandler) {
+void pllAccess::setCNTRL3 ( tscType8 value ) noexcept(false) {
 
   // Write CTR3
   accessToFec_->writeOffset ( accessKey_, CNTRL_3, value ) ;
@@ -677,7 +677,7 @@ void pllAccess::setCNTRL3 ( tscType8 value ) throw (FecExceptionHandler) {
  * \warning the register should be set before getting this register (PLL_CTRL2_RSEL should be set in the CTRL2)
  * \warning this method change the value of the CTRL2 but put the original back
  */
-void pllAccess::setCNTRL4 ( tscType8 value ) throw (FecExceptionHandler) {
+void pllAccess::setCNTRL4 ( tscType8 value ) noexcept(false) {
 
   // Force the RSEL in CTRL2
   tscType8 ctrl2 = getCNTRL2() ;
@@ -697,7 +697,7 @@ void pllAccess::setCNTRL4 ( tscType8 value ) throw (FecExceptionHandler) {
  * \warning the register should be set before getting this register (PLL_CTRL2_RSEL should be set in the CTRL2)
  * \warning this method change the value of the CTRL2 but put the original back
  */
-void pllAccess::setCNTRL5 ( tscType8 value ) throw (FecExceptionHandler) {
+void pllAccess::setCNTRL5 ( tscType8 value ) noexcept(false) {
 
   // Force the RSEL in CTRL2
   tscType8 ctrl2 = getCNTRL2() ;
@@ -716,7 +716,7 @@ void pllAccess::setCNTRL5 ( tscType8 value ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-bool  pllAccess::getGoingStatus ( ) throw (FecExceptionHandler) {
+bool  pllAccess::getGoingStatus ( ) noexcept(false) {
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_1 ) ;
   return ( (i2cdata & GOING_BIT)  != 0);
 }
@@ -726,7 +726,7 @@ bool  pllAccess::getGoingStatus ( ) throw (FecExceptionHandler) {
  * \exception FecExceptionHandler
  * Thanks to Wim Beaumont
  */
-bool  pllAccess::getSeuStatus ( ) throw (FecExceptionHandler) {
+bool  pllAccess::getSeuStatus ( ) noexcept(false) {
   tscType8 i2cdata = accessToFec_->readOffset ( accessKey_, CNTRL_1 ) ;
   return ( (i2cdata & SEU_BIT)  != 0);
 }
@@ -745,7 +745,7 @@ bool  pllAccess::getSeuStatus ( ) throw (FecExceptionHandler) {
 unsigned int pllAccess::setPllCheckGoingBitMultipleFrames ( FecAccess &fecAccess, std::list<FecExceptionHandler *> &errorList,
 							    Sgi::hash_map<keyType, pllAccess *> &pllSet, bool *errorGoingBit, 
 							    std::list<keyType> &pllErrorBefore, std::list<keyType> &pllErrorAfter, 
-							    bool noCheck, bool coldReset ) throw (FecExceptionHandler) {
+							    bool noCheck, bool coldReset ) noexcept(false) {
 
   // no error for the time being
   *errorGoingBit = false ;
@@ -1040,7 +1040,7 @@ void pllAccess::displayPllRegisters ( ) {
  * \param pllValues - all the values for an laserdriver
  * \param vAccess - block of frames
  */
-void pllAccess::getBlockWriteValues ( pllDescription pllValues, accessDeviceTypeList &vAccess ) throw (FecExceptionHandler) {
+void pllAccess::getBlockWriteValues ( pllDescription pllValues, accessDeviceTypeList &vAccess ) noexcept(false) {
 
   tscType8 delay_fine_val   = getClockPhaseMap   ( pllValues.getClockPhase() ) ;
   tscType8 delay_coarse_val = getTriggerDelayMap ( pllValues.getTriggerDelay() ) ;
@@ -1076,7 +1076,7 @@ void pllAccess::getBlockWriteValues ( pllDescription pllValues, accessDeviceType
  */
 unsigned int pllAccess::getPllValuesMultipleFrames ( FecAccess &fecAccess, Sgi::hash_map<keyType, pllAccess *> &pllSet, deviceVector &pllVector,
 						      std::list<FecExceptionHandler *> &errorList ) 
-  throw (FecExceptionHandler) {
+  noexcept(false) {
 
   // hash_map with the classification of the devices per ring
   Sgi::hash_map< keyType, pllDescription * > deviceDescriptionsMap ;
diff --git a/TrackerOnline/2005/TrackerCommon/ICUtils/Makevars b/TrackerOnline/2005/TrackerCommon/ICUtils/Makevars
index ecf265d..0506ce3 100755
--- a/TrackerOnline/2005/TrackerCommon/ICUtils/Makevars
+++ b/TrackerOnline/2005/TrackerCommon/ICUtils/Makevars
@@ -23,9 +23,9 @@ AR  = ar
 
 CPPFLAGS = -I$(INC) -DNDEBUG
 
-CFLAGS = -ansi -pedantic -Wall -W -O2 $(CPPFLAGS)
+CFLAGS = -Wall -W -O2 $(CPPFLAGS)
 CXFLAGS = $(CFLAGS)
-CCFLAGS = -fPIC -ansi -pedantic -Wall -W -O2 $(CPPFLAGS)
+CCFLAGS = -fPIC -Wall -W -O2 $(CPPFLAGS)
 CXXFLAGS = $(CCFLAGS)
 LDFLAGS = -L$(HOME)/lib
 ARFLAGS = rcvs
diff --git a/TrackerOnline/2005/TrackerCommon/ICUtils/include/ICException.hh b/TrackerOnline/2005/TrackerCommon/ICUtils/include/ICException.hh
index 08cf84f..9656fb5 100755
--- a/TrackerOnline/2005/TrackerCommon/ICUtils/include/ICException.hh
+++ b/TrackerOnline/2005/TrackerCommon/ICUtils/include/ICException.hh
@@ -103,8 +103,8 @@ public:
    * of the exception. The user is only allowed to read
    * the text returned by this function. 
    */
-  virtual const char* what() const throw();
-  virtual ~ICException() throw() {}
+  virtual const char* what() const noexcept;
+  virtual ~ICException() noexcept {}
   ICException & setLocation(const char * file, long line, const char * func = "") {
     _file = file; _line = line; _func = func; return *this;
   }
diff --git a/TrackerOnline/2005/TrackerCommon/ICUtils/src/ICException.cc b/TrackerOnline/2005/TrackerCommon/ICUtils/src/ICException.cc
index f2a5c49..d19d52b 100755
--- a/TrackerOnline/2005/TrackerCommon/ICUtils/src/ICException.cc
+++ b/TrackerOnline/2005/TrackerCommon/ICUtils/src/ICException.cc
@@ -21,7 +21,7 @@ ICException::ICException(const string & name, const ICAssert & ass) :
   _more(ass.getDesc()), _name(name), _error("Assertion Failed")
 { }
 
-const char* ICException::what() const throw() {
+const char* ICException::what() const noexcept {
   try {
     if (_text.empty()) {
       std::ostringstream str;
diff --git a/TrackerOnline/2005/TrackerCommon/Interface/include/ConnectionDeviceFactory.h b/TrackerOnline/2005/TrackerCommon/Interface/include/ConnectionDeviceFactory.h
index 1e806f7..24c9227 100755
--- a/TrackerOnline/2005/TrackerCommon/Interface/include/ConnectionDeviceFactory.h
+++ b/TrackerOnline/2005/TrackerCommon/Interface/include/ConnectionDeviceFactory.h
@@ -69,7 +69,7 @@ class FedFecConnectionDeviceFactory {
 #ifdef DATABASE
   /** Upload a DOMInputSource to the database
    */
-  void getDatabaseDOMInputSource ( DOMInputSource &domInputSource ) throw (exception) {
+  void getDatabaseDOMInputSource ( DOMInputSource &domInputSource ) noexcept(false) {
 
     if (dbFedFecAccess_ != NULL) {
 
@@ -79,7 +79,7 @@ class FedFecConnectionDeviceFactory {
 
   /** Retreive a DOMInputSource from the database
    */
-  DOMInputSource* getDatabaseDOMInputSource( std::string partitionName ) throw (exception) {    
+  DOMInputSource* getDatabaseDOMInputSource( std::string partitionName ) noexcept(false) {    
 
     if (dbFedFecAccess_ != NULL) {
 
@@ -176,7 +176,7 @@ class FedFecConnectionDeviceFactory {
   /** \brief Buid a CONNECTION factory for database
    */
   FedFecConnectionDeviceFactory ( string login, string password, string path)
-    throw ( oracle::occi::SQLException ) {
+    noexcept(false) {
 
     dbFecFedAccess_ = NULL ;
     
@@ -186,7 +186,7 @@ class FedFecConnectionDeviceFactory {
   /** \brief Build a FEC factory for CONNECTION database
    */
   FedFecConnectionDeviceFactory ( DbFedFecAccess *dbFedFecAccess)
-    throw ( oracle::occi::SQLException ) {
+    noexcept(false) {
     
     dbFecAccess_ = NULL ;
     
@@ -199,7 +199,7 @@ class FedFecConnectionDeviceFactory {
    * \param path to the database
    */
   void setFecFedConnectionDatabaseAccess ( string login, string password, string path )
-    throw ( oracle::occi::SQLException ) {
+    noexcept(false) {
 
     // For FEC/FED database
     if (dbFedFecAccess_ != NULL)
@@ -221,7 +221,7 @@ class FedFecConnectionDeviceFactory {
    * \param database access
    */
   void setFecFedConnectionDatabaseAccess ( DbFedFecAccess *dbFedFecAccess)
-    throw ( FecExceptionHandler ) {
+    noexcept(false) {
    
     dbFedFecAccess_ = dbFecAccess ;
     deleteDbFedFecAccess_ = false ;
diff --git a/TrackerOnline/2005/TrackerCommon/Interface/include/FedFecConnectionDeviceFactory.h b/TrackerOnline/2005/TrackerCommon/Interface/include/FedFecConnectionDeviceFactory.h
index 4089056..2fcf848 100755
--- a/TrackerOnline/2005/TrackerCommon/Interface/include/FedFecConnectionDeviceFactory.h
+++ b/TrackerOnline/2005/TrackerCommon/Interface/include/FedFecConnectionDeviceFactory.h
@@ -124,7 +124,7 @@ class FedFecConnectionDeviceFactory  : public DeviceFactoryInterface {
    * This method will create for each connection (retreive from the Tracker parser) the corresponding string that will be uploaded finally to the database
    * The DTD must not be specified at this point
    */
-  void setDatabaseDOMInputSource ( std::string partitionName, bool majorVersion = true ) throw (oracle::occi::SQLException) {
+  void setDatabaseDOMInputSource ( std::string partitionName, bool majorVersion = true ) noexcept(false) {
 
 
     // database connection
@@ -184,7 +184,7 @@ class FedFecConnectionDeviceFactory  : public DeviceFactoryInterface {
 #ifdef DATABASEDEBUG
 	cerr << "No connection is available" << endl ;
 #endif
-	//throw (exception) ;
+	//noexcept(false) ;
       }
     }
     else {
@@ -192,7 +192,7 @@ class FedFecConnectionDeviceFactory  : public DeviceFactoryInterface {
 #ifdef DATABASEDEBUG
       cerr << "No database access created" << endl ;
 #endif
-      //throw (exception) ;
+      //noexcept(false) ;
     }
   }
 
@@ -202,7 +202,7 @@ class FedFecConnectionDeviceFactory  : public DeviceFactoryInterface {
    * \warning this method initialize xerces
    */
   xercesc::DOMInputSource *getDatabaseDOMInputSource( std::string partitionName, unsigned int versionMajorId = 0, unsigned int versionMinorId = 0 )
-    throw (exception) {    
+    noexcept(false) {    
 
     xercesc::DOMInputSource* domInputSource = NULL ;
     //    XERCES_CPP_NAMESPACE::MemBufInputSource* xmlInputSource = NULL;
@@ -325,7 +325,7 @@ class FedFecConnectionDeviceFactory  : public DeviceFactoryInterface {
 #ifdef DATABASE
   /**
    */
-  void setFedFecConnectionDatabaseAccess ( string login, string password, string path ) throw ( oracle::occi::SQLException ) {
+  void setFedFecConnectionDatabaseAccess ( string login, string password, string path ) noexcept(false) {
 
     // For database
     if (dbAccess_ != NULL)
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9UDevice.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9UDevice.hh
index fad0519..39fdf7b 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9UDevice.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9UDevice.hh
@@ -84,7 +84,7 @@ namespace Fed9U {
      *
      * Removes any existing events from the buffer but does not return the number purged. This is a fast and hard core purge method!
      */
-    u32 purgeEvents() throw (Fed9UVmeDeviceException);
+    u32 purgeEvents() noexcept(false);
     
     // <NAC date="30/04/2009"> readout of complete spy events packed with header and trailer
     // <NAC date="15/02/2010"> added 1/N mode
@@ -101,7 +101,7 @@ namespace Fed9U {
                                                  const uint32_t runNumber = 0,
                                                  const bool allowMixedEvent = false,
                                                  u32* pEventCountBeforeRead = NULL, u32* pL1ACountBeforeRead = NULL,
-                                                 const bool oneOverNMode = false) throw (Fed9UDeviceException);
+                                                 const bool oneOverNMode = false) noexcept(false);
     // </NAC>
     // </NAC>
     // </NAC>
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9ULib.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9ULib.hh
index 67fc637..624cc2e 100644
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9ULib.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/include/Fed9ULib.hh
@@ -115,7 +115,7 @@ namespace Fed9U {
      *        software method.
      * \sa    getFed9UDescription.
      */
-    explicit Fed9UVmeDevice(const Fed9UDescription& description, u32 adaptorSlot = 0) throw (Fed9UVmeDeviceException);
+    explicit Fed9UVmeDevice(const Fed9UDescription& description, u32 adaptorSlot = 0) noexcept(false);
 
     /**
      * \brief  Tidies up the FED memory. Deletes the Fed9UDescription object.
@@ -148,11 +148,11 @@ namespace Fed9U {
      * \brief  sets the periodic counter for spy arming every N events.
      * \param  spyArmPeriod to set the value of N to arm on every Nth trigger
      */
-    Fed9UVmeDevice& setSpyArmPeriod(const u32  spyArmPeriod) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setSpyArmPeriod(const u32  spyArmPeriod) noexcept(false);
 
-    u32 getSpyArmPeriod() throw (Fed9UVmeDeviceException);
+    u32 getSpyArmPeriod() noexcept(false);
  
-    Fed9UVmeDevice& setSpyArmCommand(u8 spyArmCommand_)  throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setSpyArmCommand(u8 spyArmCommand_)  noexcept(false);
 
     // <NAC date=01/03/2007>
     /**
@@ -160,7 +160,7 @@ namespace Fed9U {
      * \param  selectedDelayChip The address pointing to the delay chip to pass the 
      * \param  command to or broadcast to all delay chips on one FeUnit or whole FED. 
      */
-    void armSpy(const Fed9UAddress& selectedDelayChip) throw (Fed9UVmeDeviceException);
+    void armSpy(const Fed9UAddress& selectedDelayChip) noexcept(false);
     /**
      * \brief  Reads back Spy Channel data
      * \param  selectedDelayChip The address pointing to the delay chip to pass the 
@@ -168,35 +168,35 @@ namespace Fed9U {
      * \param  destBuffer Pointer to buffer into which data is copied. 
      *         Must have 1504 bytes space.
      */
-    void fireSpy(const Fed9UAddress& selectedDelayChip, void* destBuffer) throw (Fed9UVmeDeviceException);
+    void fireSpy(const Fed9UAddress& selectedDelayChip, void* destBuffer) noexcept(false);
  
     // <NAC date="25/06/2009"> Added second spy L1A/QDR register commands
     /**
      * \brief  Reads back Latched QDR count at the time of the last TTC B channel spy arm command (warning: this is L1A count in some firmware versions)
      */
-    u32 getSpyTotalEventCount() throw (Fed9UVmeDeviceException);
+    u32 getSpyTotalEventCount() noexcept(false);
 
    /**
      * \brief  Reads back Latched L1A count at the time of the last TTC B channel spy arm command (warning: this is L1A count in some firmware versions)
      */
-    u32 getSpyL1ACount() throw (Fed9UVmeDeviceException);
+    u32 getSpyL1ACount() noexcept(false);
     // </NAC>
 
-    u32 getTotalEventCount32() throw (Fed9UVmeDeviceException);
+    u32 getTotalEventCount32() noexcept(false);
 
-    u32 getTotalL1ACount32() throw (Fed9UVmeDeviceException);
+    u32 getTotalL1ACount32() noexcept(false);
 
-    u32 getTotalEventOutCount() throw (Fed9UVmeDeviceException);
+    u32 getTotalEventOutCount() noexcept(false);
 
-    u32 getFeFrameLengthCount() throw (Fed9UVmeDeviceException);
+    u32 getFeFrameLengthCount() noexcept(false);
 
-    u32 getDummyEventCount() throw (Fed9UVmeDeviceException);
+    u32 getDummyEventCount() noexcept(false);
 
-    u32 getPayloadDownCount() throw (Fed9UVmeDeviceException);
+    u32 getPayloadDownCount() noexcept(false);
 
-    u32 getPayloadLength() throw (Fed9UVmeDeviceException);
+    u32 getPayloadLength() noexcept(false);
 
-    u64 getDebugRegTwo()  throw (Fed9UVmeDeviceException);
+    u64 getDebugRegTwo()  noexcept(false);
 
 
 
@@ -205,62 +205,62 @@ namespace Fed9U {
      *         description supplied to the constructor of this class.
      * \return A self reference.
      */
-    Fed9UVmeDevice& verifyHardwareId() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& verifyHardwareId() noexcept(false);
     
     /**
      * \brief  Verify versions checks that the versions of hardware and firmware within the
      *         FED matches that in the description supplied to the constructor of this class
      * \return A self reference.
      */
-    Fed9UVmeDevice& verifyVersions() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& verifyVersions() noexcept(false);
 
     /**
      * \brief  Verifies that the firmware versions on the FED match that in the global firmware file.
      *         It will upload the global firmware version if necessary.
      */
-    void verifySystemACEFirmwareVersions() throw (Fed9UVmeDeviceException);
+    void verifySystemACEFirmwareVersions() noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setOptoRxInputOffset
      * \throw   Fed9UVmeDeviceException Thrown in the case of an out of bounds error for the
      *          input parameters.
      */
-    Fed9UVmeDevice& setOptoRxInputOffset(const Fed9UAddress& feFpga, u16 inputOffset) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setOptoRxInputOffset(const Fed9UAddress& feFpga, u16 inputOffset) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getOptoRxInputOffset
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getOptoRxInputOffset(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    u16 getOptoRxInputOffset(const Fed9UAddress& feFpga) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setOptoRxOutputOffset
      * \throw   Fed9UVmeDeviceException Thrown in the case of an out of bounds error for the
      *          input parameters.
      */
-    Fed9UVmeDevice& setOptoRxOutputOffset(const Fed9UAddress& feFpga, u16 outputOffset) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setOptoRxOutputOffset(const Fed9UAddress& feFpga, u16 outputOffset) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getOptoRxOutputOffset
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getOptoRxOutputOffset(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    u16 getOptoRxOutputOffset(const Fed9UAddress& feFpga) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setOptoRxCapacitor
      * \throw   Fed9UVmeDeviceException Thrown in the case of an out of bounds error for the
      *          input parameters.
      */
-    Fed9UVmeDevice& setOptoRxCapacitor(const Fed9UAddress& feFpga, u16 capacitor) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setOptoRxCapacitor(const Fed9UAddress& feFpga, u16 capacitor) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getOptoRxCapacitor
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getOptoRxCapacitor(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    u16 getOptoRxCapacitor(const Fed9UAddress& feFpga) const noexcept(false);
 
     /**
      * \brief  Used to set the pedestal values on a given FED APV.
@@ -276,7 +276,7 @@ namespace Fed9U {
      * strip settings are also to be set then setPedsAndDisabledStrips should be used.
      * The pedestal values are subtracted from the strip data during zero suppression mode.
      */
-    Fed9UVmeDevice& setPedestals(const Fed9UAddress& fedApv, const std::vector<u16>& pedestals) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setPedestals(const Fed9UAddress& fedApv, const std::vector<u16>& pedestals) noexcept(false);
 
     /**
      * \brief  Returns a vector containing the pedestal value of each of the 128 strips on an APV.
@@ -290,7 +290,7 @@ namespace Fed9U {
      * getPedsAndDisabledStrips. Pedestals are subtracted from the strip reading during zero
      * suppression mode.
      */
-    std::vector<u16> getPedestals(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getPedestals(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \brief  Used to set the disable values on a given FED APV.
@@ -307,7 +307,7 @@ namespace Fed9U {
      * removes them from the common mode median calculation and also provides a flag to highlight an
      * invalid strip. It <b> does not </b> remove the strip data from the event.
      */
-    Fed9UVmeDevice& setDisabledStrips(const Fed9UAddress& fedApv, const std::vector<bool>& disabledStrips) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDisabledStrips(const Fed9UAddress& fedApv, const std::vector<bool>& disabledStrips) noexcept(false);
 
     /**
      * \brief  Returns a vector containing the disbale setting of each of the 128 strips on an APV.
@@ -320,7 +320,7 @@ namespace Fed9U {
      * Both the pedestals and disabled strip settings can be returned simulataneously using
      * getPedsAndDisabledStrips. Used to flag strips that have bad data during a run.
      */
-    std::vector<bool> getDisabledStrips(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    std::vector<bool> getDisabledStrips(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \brief  Returns the number of valid strips used in the Common Mode Median calculation.
@@ -331,7 +331,7 @@ namespace Fed9U {
      *
      * This number is determined by the number of disabled strips and cannot be set on its own.
      */
-    u16 getNumberOfValidStrips(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    u16 getNumberOfValidStrips(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \brief  Sets the 128 pedestals for an APV and which strips should be excluded from the common mode calculation.
@@ -347,7 +347,7 @@ namespace Fed9U {
      * The CM median calculated by the requires the number of valid strips in order to calculate the median. The number
      * of valid strips is set automatically depending on the number of strips set disabled by this method.
      */
-    Fed9UVmeDevice& setPedsAndDisabledStrips(const Fed9UAddress& fedApv, const std::vector<u16>& pedestals, const std::vector<bool>& disabledStrips) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setPedsAndDisabledStrips(const Fed9UAddress& fedApv, const std::vector<u16>& pedestals, const std::vector<bool>& disabledStrips) noexcept(false);
 
     /** 
      * \brief  Gets the 128 pedestals and valid strip settings for an APV.
@@ -359,7 +359,7 @@ namespace Fed9U {
      * \throw  Fed9UVmeDeviceException Catches all errors from internal method calls and
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    const Fed9UVmeDevice& getPedsAndDisabledStrips(const Fed9UAddress& fedApv, std::vector<u16>& pedestals, std::vector<bool>& disabledStrips, u16& numberValidStrips) const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& getPedsAndDisabledStrips(const Fed9UAddress& fedApv, std::vector<u16>& pedestals, std::vector<bool>& disabledStrips, u16& numberValidStrips) const noexcept(false);
 
     /**
      * \brief  Sets the 128 high cluster thresholds for an APV.
@@ -372,7 +372,7 @@ namespace Fed9U {
      * Two types of cluster threshold can be set. The high thresholds are used to identify single strip clusters
      * in the cluster finding algorithm.
      */
-    Fed9UVmeDevice& setHighClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& highThresholds) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setHighClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& highThresholds) noexcept(false);
 
     /**
      * \brief  Returns the 128 high cluster thresholds for an APV.
@@ -384,7 +384,7 @@ namespace Fed9U {
      * Two types of cluster threshold can be set. The high thresholds are used to identify single strip clusters
      * in the cluster finding algorithm.
      */
-    std::vector<u16> getHighClusterThresholds(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getHighClusterThresholds(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \brief  Sets the 128 low cluster thresholds for an APV.
@@ -398,7 +398,7 @@ namespace Fed9U {
      * Two types of cluster threshold can be set. The low thresholds are used to identify multiple strip clusters
      * in the cluster finding algorithm.
      */
-    Fed9UVmeDevice& setLowClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& lowThresholds) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setLowClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& lowThresholds) noexcept(false);
 
     /**
      * \brief  Returns the 128 low cluster thresholds for an APV.
@@ -410,7 +410,7 @@ namespace Fed9U {
      * Two types of cluster threshold can be set. The low thresholds are used to identify multiple strip clusters
      * in the cluster finding algorithm.
      */
-    std::vector<u16> getLowClusterThresholds(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getLowClusterThresholds(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \brief  Sets the 128 cluster thresholds for an APV.
@@ -427,7 +427,7 @@ namespace Fed9U {
      * is to be used on single strip hits and low on multiple strip hits. The maximum threshold value is 254
      * for both high and low thresholds. If the threshold is set to 255 it is excluded from the cluster finding.
      */
-    Fed9UVmeDevice& setClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& highThresholds, const std::vector<u16>& lowThresholds) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setClusterThresholds(const Fed9UAddress& fedApv, const std::vector<u16>& highThresholds, const std::vector<u16>& lowThresholds) noexcept(false);
 
     /**
      * \brief  Returns the 128 low cluster thresholds for an APV.
@@ -444,7 +444,7 @@ namespace Fed9U {
      * The high threshold is to be used on single strip hits and low on multiple
      * strip hits.
      */
-    const Fed9UVmeDevice& getClusterThresholds(const Fed9UAddress& fedApv, std::vector<u16>& highThresholds, std::vector<u16>& lowThresholds) const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& getClusterThresholds(const Fed9UAddress& fedApv, std::vector<u16>& highThresholds, std::vector<u16>& lowThresholds) const noexcept(false);
 
     /**
      * \brief  Performs a soft reset on the FPGA.
@@ -454,7 +454,7 @@ namespace Fed9U {
      *
      * Performs a one clock cycle reset on a specified FE FPGA.
      */
-    Fed9UVmeDevice& feFpgaSoftReset(const Fed9UAddress& fpga) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& feFpgaSoftReset(const Fed9UAddress& fpga) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setAdcControls
@@ -471,28 +471,28 @@ namespace Fed9U {
      * li ADC 4 = Ch 8 & 11
      * li ADC 5 = Ch 9 & 10
      */
-    Fed9UVmeDevice& setAdcControls(const Fed9UAddress& fedChannel, const Fed9UAdcControls& adcControlSettings) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAdcControls(const Fed9UAddress& fedChannel, const Fed9UAdcControls& adcControlSettings) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getAdcControls
      * \throw  Fed9UVmeDeviceException Catches all errors from internal method calls and
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UAdcControls getAdcControls(const Fed9UAddress& fedChannel) const throw (Fed9UVmeDeviceException);
+    Fed9UAdcControls getAdcControls(const Fed9UAddress& fedChannel) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setFineDelay
      * \throw   Fed9UVmeDeviceException Performs a range check on the fine delay setting and will throw
      *          the error if it is out of bounds.
      */
-    Fed9UVmeDevice& setFineDelay(const Fed9UAddress& fedChannel, u16 fineDelay) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFineDelay(const Fed9UAddress& fedChannel, u16 fineDelay) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setCoarseDelay
      * \throw   Fed9UVmeDeviceException Performs a range check on the fine delay setting and will throw
      *          the error if it is out of bounds.
      */
-    Fed9UVmeDevice& setCoarseDelay(const Fed9UAddress& fedChannel, u16 coarseDelay) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setCoarseDelay(const Fed9UAddress& fedChannel, u16 coarseDelay) noexcept(false);
 
     /**
      * \brief  Sets the nano second delay value required for a specific FED channel.
@@ -505,126 +505,126 @@ namespace Fed9U {
      * The delay in nano seconds is converted to fine and coarse delay values. As a result only whole values of
      * nano seconds are available.
      */
-    Fed9UVmeDevice& setDelay(const Fed9UAddress& fedChannel, float nanoDelay) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDelay(const Fed9UAddress& fedChannel, float nanoDelay) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setDelay
      * \throw   Fed9UVmeDeviceException Performs a range check on the fine delay setting and will throw
      *          the error if it is out of bounds.
      */
-    Fed9UVmeDevice& setDelay(const Fed9UAddress& fedChannel, u16 coarseDelay, u16 fineDelay) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDelay(const Fed9UAddress& fedChannel, u16 coarseDelay, u16 fineDelay) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setApvDisable
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setApvDisable(const Fed9UAddress& fedApv, bool apvDisable) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setApvDisable(const Fed9UAddress& fedApv, bool apvDisable) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getApvDisable
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    bool getApvDisable(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    bool getApvDisable(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setFrameThreshold
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setFrameThreshold(const Fed9UAddress& fedChannel, u16 threshOnChannel) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFrameThreshold(const Fed9UAddress& fedChannel, u16 threshOnChannel) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getFrameThreshold
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getFrameThreshold(const Fed9UAddress& fedChannel) const throw (Fed9UVmeDeviceException);
+    u16 getFrameThreshold(const Fed9UAddress& fedChannel) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getFedStrips
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UStrips & getFedStrips() throw (Fed9UVmeDeviceException);
+    Fed9UStrips & getFedStrips() noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setCmMedianOverride
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setCmMedianOverride(Fed9UAddress feFpga, bool medianOverrideDisable, std::vector<u16> medianValue = std::vector<u16>(24,0)) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setCmMedianOverride(Fed9UAddress feFpga, bool medianOverrideDisable, std::vector<u16> medianValue = std::vector<u16>(24,0)) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getCmMedianOverride
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    std::vector<u16> getCmMedianOverride(Fed9UAddress feFpga, bool& medianOverrideDisable) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getCmMedianOverride(Fed9UAddress feFpga, bool& medianOverrideDisable) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setCmMedianOverrideValue
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setCmMedianOverrideValue(const Fed9UAddress& fedApv, u16 medianValue) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setCmMedianOverrideValue(const Fed9UAddress& fedApv, u16 medianValue) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getCmMedianOverrideValue
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getCmMedianOverrideValue(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    u16 getCmMedianOverrideValue(const Fed9UAddress& fedApv) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setApvDisable
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setCmMedianOverrideDisable(const Fed9UAddress& feFpga, bool disable) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setCmMedianOverrideDisable(const Fed9UAddress& feFpga, bool disable) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getCmMedianOverrideDisable
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    bool getCmMedianOverrideDisable(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    bool getCmMedianOverrideDisable(const Fed9UAddress& feFpga) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setScopeLength
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setScopeLength(u16 numberOfWords) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setScopeLength(u16 numberOfWords) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getScopeLength
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getScopeLength() const throw (Fed9UVmeDeviceException);
+    u16 getScopeLength() const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setComplement
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& setComplement(const Fed9UAddress& fedChannel, bool disableComplement) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setComplement(const Fed9UAddress& fedChannel, bool disableComplement) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getComplement
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    bool getComplement(const Fed9UAddress& fedChannel) const throw (Fed9UVmeDeviceException);
+    bool getComplement(const Fed9UAddress& fedChannel) const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setTrimDacOffset
      * \throw   Fed9UVmeDeviceException Verifies the TrimDAC offset is with bounds, otherwise this exception
      *          is thrown.
      */
-    Fed9UVmeDevice& setTrimDacOffset(const Fed9UAddress& fedChannel, u16 offset) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTrimDacOffset(const Fed9UAddress& fedChannel, u16 offset) noexcept(false);
 
     /**
      * \brief  Sends a reset to the trimDACs.
@@ -632,7 +632,7 @@ namespace Fed9U {
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    Fed9UVmeDevice& sendTrimDacReset(const Fed9UAddress& feFpga) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendTrimDacReset(const Fed9UAddress& feFpga) noexcept(false);
 
     /**
      * \brief  Returns the FE event buffer occupancy on a FED channel.
@@ -641,7 +641,7 @@ namespace Fed9U {
      * \throw   Fed9UVmeDeviceException Catches all errors from internal method calls and
      *          rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u16 getChannelBufferOccupancy(const Fed9UAddress& fedChannel) const throw (Fed9UVmeDeviceException);
+    u16 getChannelBufferOccupancy(const Fed9UAddress& fedChannel) const noexcept(false);
 
     /**
      * \brief  Returns the firmware ID that is in use on all the FE FPGAs.
@@ -650,7 +650,7 @@ namespace Fed9U {
      *         on one of the FE FPGAs compared to the 1st FE FPGA. Catches all exceptions from internal
      *         function calls and rethrows them as this type.
      */
-    u32 getFeFirmwareId() const throw (Fed9UVmeDeviceException);
+    u32 getFeFirmwareId() const noexcept(false);
 
     /**
      * \brief  Returns the firmware ID that is in use on all the delay FPGAs.
@@ -659,7 +659,7 @@ namespace Fed9U {
      *         on one of the delay FPGAs compared to the 1st delay FPGA. Catches all exceptions from internal
      *         function calls and rethrows them as this type.
      */
-    u32 getDelayFirmwareId() const throw (Fed9UVmeDeviceException);
+    u32 getDelayFirmwareId() const noexcept(false);
 
     // <JEC date=30-05-06>
     /**
@@ -669,7 +669,7 @@ namespace Fed9U {
      * \throw  Fed9UVmeDeviceException Catches all errors from internal method calls and
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      */
-    u32 getFeFakeEventTriggerFifoData(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    u32 getFeFakeEventTriggerFifoData(const Fed9UAddress& feFpga) const noexcept(false);
     // </JEC>
 
     //<JEC date=16/03/07>
@@ -681,7 +681,7 @@ namespace Fed9U {
      * \param  address of the FE-FPGA whose register is being accessed.
      * \todo   make it work !!
     */
-    u16 getFEFrameCapturePrescale(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    u16 getFEFrameCapturePrescale(const Fed9UAddress& feFpga) const noexcept(false);
     //</JEC>
 
     // <JEC date=10-04-06>
@@ -695,7 +695,7 @@ namespace Fed9U {
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      * \todo   Update to use the Fed9UAddress class.
      */
-    void dumpFeRegisters(unsigned short selectedFpga, ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
+    void dumpFeRegisters(unsigned short selectedFpga, ostream &os, bool addHtml) noexcept(false);
     // </JEC>
 
     // <JEC date=10-05-06>
@@ -708,7 +708,7 @@ namespace Fed9U {
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      * \todo   Update to use the Fed9UAddress class.
      */
-    void dumpApvData(unsigned short selectedFpga, ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
+    void dumpApvData(unsigned short selectedFpga, ostream &os, bool addHtml) noexcept(false);
     // </JEC>
 
     // <JEC date=10-05-06>
@@ -721,7 +721,7 @@ namespace Fed9U {
      *         rethrown as a Fed9UVmeDeviceException appending relevant method information.
      * \todo   Update to use the Fed9UAddress class.
      */
-    void dumpPedAndThreshData(unsigned short selectedFpga, ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
+    void dumpPedAndThreshData(unsigned short selectedFpga, ostream &os, bool addHtml) noexcept(false);
     // </JEC>
 
   private:
@@ -736,7 +736,7 @@ namespace Fed9U {
      * represents a strip. This method uses the FED logic system so a 1 will enable a strip
      * and a 0 will disable it.
      */
-    Fed9UVmeDevice& createStripData(const Fed9UAddress& fedApv, const bool setThreshold, const std::vector<u16>& pedsOrHighThresh, const std::vector<u16>& valStripOrLowThresh ) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& createStripData(const Fed9UAddress& fedApv, const bool setThreshold, const std::vector<u16>& pedsOrHighThresh, const std::vector<u16>& valStripOrLowThresh ) noexcept(false);
 
     /**
      * Writes the strip data to the FED.
@@ -747,7 +747,7 @@ namespace Fed9U {
      * is true then the cluster threshold data is returned. False and the pedestal and valid
      * channel data is returned.
      */
-    Fed9UVmeDevice& setStripData(const Fed9UAddress& fedApv, const bool setThreshold, const std::vector<u16>& pedsOrHighThresh, const std::vector<u16>& valStripOrLowThresh) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setStripData(const Fed9UAddress& fedApv, const bool setThreshold, const std::vector<u16>& pedsOrHighThresh, const std::vector<u16>& valStripOrLowThresh) noexcept(false);
 
     /**
      * This will return a 128 element vector that contains the pedestals and disable strip
@@ -756,7 +756,7 @@ namespace Fed9U {
      * This should only be called from getStripData as it relies on the pedestal address
      * being set before this method is called.
      */
-    const Fed9UVmeDevice& getPedsAndDisabledStripData(const Fed9UAddress& fedApv, std::vector<u16>& pedestals, std::vector<u16>& validStrips) const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& getPedsAndDisabledStripData(const Fed9UAddress& fedApv, std::vector<u16>& pedestals, std::vector<u16>& validStrips) const noexcept(false);
 
     /**
      * This will return a 128 element std::vector that contains the thresholds on an APV.
@@ -764,7 +764,7 @@ namespace Fed9U {
      * This should only be called from getStripData as it relies on the pedestal address
      * being set before this method is called.
      */
-    const Fed9UVmeDevice& getClusterData(const Fed9UAddress& fedApv, std::vector<u16>& highThresholds, std::vector<u16>& lowThresholds) const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& getClusterData(const Fed9UAddress& fedApv, std::vector<u16>& highThresholds, std::vector<u16>& lowThresholds) const noexcept(false);
 
     /**
      * This will take a vector that contains four APVs of strips (512 elements) with
@@ -776,7 +776,7 @@ namespace Fed9U {
      * output ordering is the same as that coming into the FED. This method was written by
      * Mattew Pearson, RAL, 12/2003 and modified by Gareth Rogers, RAL, 01/2004.
      */
-    Fed9UVmeDevice& disOrderingAlgorithm(const std::vector<u16>& stripOrderedInput, std::vector<u16>& apvOrderedOutput) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& disOrderingAlgorithm(const std::vector<u16>& stripOrderedInput, std::vector<u16>& apvOrderedOutput) noexcept(false);
 
     /**
      * This will take a vector that contains one APV of strips (128 elements) where
@@ -786,7 +786,7 @@ namespace Fed9U {
      *
      * This method was written by Matthew Pearson, RAL, 12/2003.
      */
-    const Fed9UVmeDevice& reOrderingAlgorithm(const std::vector<u16>& apvOrderedInput, std::vector<u16>& stripOrderedOutput) const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& reOrderingAlgorithm(const std::vector<u16>& apvOrderedInput, std::vector<u16>& stripOrderedOutput) const noexcept(false);
 
     /**
      * This sets the number of strips that should be used in the median calculation
@@ -796,7 +796,7 @@ namespace Fed9U {
      * of strips. A 1 represents disabled and a 0 enabled. Each element contains the
      * state of a strip. It must always be the same as the common-mode calculation values.
      */
-    Fed9UVmeDevice& setNumberValidStrips(const Fed9UAddress& fedApv, const std::vector<bool>& disabledStrips) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setNumberValidStrips(const Fed9UAddress& fedApv, const std::vector<bool>& disabledStrips) noexcept(false);
 
     /**
      * This gets the number of strips that should be used in the median calculation.
@@ -804,7 +804,7 @@ namespace Fed9U {
      * The return value is the number strips that are enabled on an APV. It must always
      * be the same as the common-mode calculation values.
      */
-    u16 getNumberValidStrips(const Fed9UAddress& fedApv) const throw (Fed9UVmeDeviceException);
+    u16 getNumberValidStrips(const Fed9UAddress& fedApv) const noexcept(false);
 
     //<JEC date=16/03/07>
     /**
@@ -812,7 +812,7 @@ namespace Fed9U {
      * because it must be used in conjunction with the corresponding BE-FPGA register.
      * All 8 FE-FPGAs are set simultaneously.
      */
-    Fed9UVmeDevice & setFEFrameCapturePrescale(u16 prescale) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setFEFrameCapturePrescale(u16 prescale) noexcept(false);
     //</JEC>
 
     /*******************************************************************************
@@ -828,7 +828,7 @@ namespace Fed9U {
      * that can be found in TypeDefs.hh. The possible settings are TTC, backplane
      * or software triggers.
      */
-    Fed9UVmeDevice& setTriggerSource(Fed9UTrigSource triggerSource) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTriggerSource(Fed9UTrigSource triggerSource) noexcept(false);
 
     /**
      * This returns the trigger source for the BE FPGA.
@@ -837,29 +837,29 @@ namespace Fed9U {
      * that can be found in TypeDefs.hh. The possible settings are TTC, backplane
      * or software triggers.
      */
-    Fed9UTrigSource getTriggerSource() const throw (Fed9UVmeDeviceException);
+    Fed9UTrigSource getTriggerSource() const noexcept(false);
 
     /**
      * This will load all the read and write setting from the Fed9UTtcrxDescription
      * object to the TTCrx.
      */
-    Fed9UVmeDevice& setTtcrx(const Fed9UTtcrxDescription& ttcrxDescription) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTtcrx(const Fed9UTtcrxDescription& ttcrxDescription) noexcept(false);
 
     /**
      * Enable or disable the ttcrx serial b data path explicitly
      */
-    Fed9UVmeDevice& setTtcrxSerialBDataEnable(bool value=true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTtcrxSerialBDataEnable(bool value=true) noexcept(false);
 
     /**
      * Returns all the current read and writable settings on the TTCrx device.
      */
-    Fed9UTtcrxDescription getTtcrx() const throw (Fed9UVmeDeviceException);
+    Fed9UTtcrxDescription getTtcrx() const noexcept(false);
 
     /**
      * Returns all the current settings on the TTCrx device. Both the read only and read
      * and writable settings.
      */
-    Fed9UTtcrxDescriptionInfo getTtcrxInfo() const throw (Fed9UVmeDeviceException);
+    Fed9UTtcrxDescriptionInfo getTtcrxInfo() const noexcept(false);
 
     /**
      * Will reset the TTCrx chip.
@@ -869,20 +869,20 @@ namespace Fed9U {
      * the TTC clock is selected. If internal is true then an internal reset will be
      * sent. If it is false then an external reset will be sent.
      */
-    Fed9UVmeDevice& sendTtcrxReset(bool internal, bool doWait=true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendTtcrxReset(bool internal, bool doWait=true) noexcept(false);
 
     /**
      * This command can be used to alter the settings in the test register.
      *
      * The argument passed is just the decimal representation of the bits in the register.
      */
-    Fed9UVmeDevice& setTestRegister(u32 testSettings) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTestRegister(u32 testSettings) noexcept(false);
 
     /**
      * This command will return the decimal equivalent of the number represented
      * by the bits in this register.
      */
-    u32 getTestRegister() const throw (Fed9UVmeDeviceException);
+    u32 getTestRegister() const noexcept(false);
 
     /**
      * Disables a FE FPGA.
@@ -891,12 +891,12 @@ namespace Fed9U {
      * then a soft reset of the BE FPGA is performed. See BE FPGA soft reset documentation
      * for details of its effect.
      */
-    Fed9UVmeDevice& setFedFeUnitDisable(const Fed9UAddress& feFpga, bool feFpgaDisable) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFedFeUnitDisable(const Fed9UAddress& feFpga, bool feFpgaDisable) noexcept(false);
 
     /**
      * Returns a true if a FE FPGA is disabled and a false if the FE FPGA is enabled.
      */
-    bool getFedFeUnitDisable(const Fed9UAddress& feFpga) const throw (Fed9UVmeDeviceException);
+    bool getFedFeUnitDisable(const Fed9UAddress& feFpga) const noexcept(false);
 
     /**
      * This allows the user to select the output data route.
@@ -904,7 +904,7 @@ namespace Fed9U {
      * The values of the Fed9UReadRoute enum can be found in TypeDefs.hh.
      * The settings for the read route is either the S-LINK or the VME-LINK.
      */
-    Fed9UVmeDevice& setBeFpgaReadRoute(Fed9UReadRoute readRoute) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setBeFpgaReadRoute(Fed9UReadRoute readRoute) noexcept(false);
 
     /**
      * This returns the output data route.
@@ -912,14 +912,14 @@ namespace Fed9U {
      * The values of the Fed9UReadRoute enum can be found in TypeDefs.hh.
      * The settings for the read route is either the S-LINK or the VME-LINK.
      */
-    Fed9UReadRoute getBeFpgaReadRoute() const throw (Fed9UVmeDeviceException);
+    Fed9UReadRoute getBeFpgaReadRoute() const noexcept(false);
 
     /**
      * This will disable the BE FPGA preventing it from seeing both triggers and frames.
      *
      * A true will disable the BE FPGA and a false will enable the BE FPGA.
      */
-    Fed9UVmeDevice& setFedBeFpgaDisable(bool fedDisable) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFedBeFpgaDisable(bool fedDisable) noexcept(false);
 
     /**
      * If a true is returned then the BE FPGA is disabled. If a false is returned then
@@ -927,7 +927,7 @@ namespace Fed9U {
      *
      * If the BE FPGA is disabled then it will ignore both triggers and frames.
      */
-    bool getFedBeFpgaDisable() const throw (Fed9UVmeDeviceException);
+    bool getFedBeFpgaDisable() const noexcept(false);
 
     /**
      * This allows the user to set the FED ID in the DAQ header.
@@ -935,7 +935,7 @@ namespace Fed9U {
      * The FED ID is a number unique to a FED and allows the DAQ to identify
      * which FED the data came from. It has a maximum value of 4095.
      */
-    Fed9UVmeDevice& setFedId(u16 fedId) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFedId(u16 fedId) noexcept(false);
 
     /**
      * This allows the user to get the FED ID that will be sent in the DAQ header.
@@ -944,12 +944,12 @@ namespace Fed9U {
      * which FED the data came from. do not confuse this software ID with the FedHardwarID, which is unique to every FED and written into 
      * the Eprom during industrial testing
      */
-    u16 getFedId() const throw (Fed9UVmeDeviceException);
+    u16 getFedId() const noexcept(false);
 
     /**
      * Generates a software trigger.
      */
-    Fed9UVmeDevice& sendSoftwareTrigger() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendSoftwareTrigger() noexcept(false);
 
     /**
      * This performs a soft reset on the BE FPGA.
@@ -957,43 +957,43 @@ namespace Fed9U {
      * It resets the BE FPGA counters. It does not affect the DCMs and
      * control registers. It does reset the event counters.
      */
-    Fed9UVmeDevice& beFpgaSoftReset() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& beFpgaSoftReset() noexcept(false);
 
     /** 
      * The return value holds data from the extra event register
      */
-    u32 getBeDebugRegister() const throw (Fed9UVmeDeviceException);
+    u32 getBeDebugRegister() const noexcept(false);
 
               
     /** 
      * The return value holds data from the extra event register
      */
-    u32 getBeExtraEventRegister() const throw (Fed9UVmeDeviceException);
+    u32 getBeExtraEventRegister() const noexcept(false);
                  
                  
     /**
      * The return value holds data from various sections
      */
-    u32 getBeStatusRegister() const throw (Fed9UVmeDeviceException);
+    u32 getBeStatusRegister() const noexcept(false);
 
     /**
      * Stores the number of triggers that the FED has received since last reset (BE FPGA or
      * FED reset).
      */
-    u32 getTriggerNumber() const throw (Fed9UVmeDeviceException);
+    u32 getTriggerNumber() const noexcept(false);
 
     /**
      * Returns how many bunch crossings have occurred within the FED since the last reset.
      *
      * This counter is reset by both the FED reset and the BE FPGA soft reset.
      */
-    u32 getBunchCount() const throw (Fed9UVmeDeviceException);
+    u32 getBunchCount() const noexcept(false);
 
     /**
      * This returns the number of frames that are held in the QDR memory at that
      * instant in time.
      */
-    u32 getQdrFrameCount() const throw (Fed9UVmeDeviceException);
+    u32 getQdrFrameCount() const noexcept(false);
 
     /**
      * Returns the status of the TTC chip.
@@ -1001,41 +1001,41 @@ namespace Fed9U {
      * 1 ready
      * 0 not ready
      */
-    bool getTtcrxStatus() const throw (Fed9UVmeDeviceException);
+    bool getTtcrxStatus() const noexcept(false);
 
     /**
      * Returns the current version of the firmware that is being used by the BE FPGA.
      */
-    u32 getBeFirmwareId() const throw (Fed9UVmeDeviceException);
+    u32 getBeFirmwareId() const noexcept(false);
 
     /**
      * Returns the number of 64 bit words currently in the QDR buffer.
      */
-    u32 getQdrBufferLevel() const throw (Fed9UVmeDeviceException);
+    u32 getQdrBufferLevel() const noexcept(false);
 
     /**
      * Returns the total number of frames that have been held in the QDR buffer since
      * last reset (BE FPGA or FED reset).
      */
-    u32 getQdrTotalFrameCount() const throw (Fed9UVmeDeviceException);
+    u32 getQdrTotalFrameCount() const noexcept(false);
 
     //Matthew Pearson April 2005 - new BE commands for FEDv2.
 
     /**Returns the DAQ register 32 bit number. 
        This number is written to the FED data buffer header when in full debug mode.*/
-    u32 getDaqRegister(void) const throw (Fed9UVmeDeviceException);
+    u32 getDaqRegister(void) const noexcept(false);
 
     /**Sets the DAQ register 32 bit number.                                              
        This number is written to the FED data buffer header when in full debug mode.*/
-    Fed9UVmeDevice& setDaqRegister(u32 daqReg) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqRegister(u32 daqReg) noexcept(false);
     
     /**Returns the DAQ register Two 32 bit number.
        This number is written to the FED data buffer header when in full debug mode.*/
-    u32 getDaqRegisterTwo(void) const throw (Fed9UVmeDeviceException);
+    u32 getDaqRegisterTwo(void) const noexcept(false);
     
     /**Sets the DAQ register Two 32 bit number.
        This number is written to the FED data buffer header when in full debug mode.*/
-    Fed9UVmeDevice& setDaqRegisterTwo(u32 daqReg) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqRegisterTwo(u32 daqReg) noexcept(false);
     
     
     /**Returns the status of the requested buffer from the BE status register.
@@ -1043,32 +1043,32 @@ namespace Fed9U {
        Currently the default is to set it to empty.
        It also uses the enum Fed9UFifoType to identify which buffer status is being requested.*/
     // JEC 23-02-06
-    Fed9UFifoStatus getFifoStatus(Fed9UFifoType fifoId) const throw (Fed9UVmeDeviceException);
+    Fed9UFifoStatus getFifoStatus(Fed9UFifoType fifoId) const noexcept(false);
 
     /**Returns the status of the Tracker Header Monitor data from the BE status register.*/
     // JEC 24-02-06
-    bool getTrackerHeaderMonitorStatus(void) const throw (Fed9UVmeDeviceException);
+    bool getTrackerHeaderMonitorStatus(void) const noexcept(false);
 
     /**Returns an error flag if the internal bunch crossing counter and the value from the TTC system do not match
        at orbit reset.*/
     // JEC 27-02-06
-    bool getBunchCrossingAtOrbitReset(void) const throw (Fed9UVmeDeviceException);
+    bool getBunchCrossingAtOrbitReset(void) const noexcept(false);
 
     /**Returns the S-LINK back pressure flag from the BE status register.*/
-    bool getSlinkBackPressure(void) const throw (Fed9UVmeDeviceException);
+    bool getSlinkBackPressure(void) const noexcept(false);
 
     /**Returns the S-LINK link full flag from the BE status register.*/
-    bool getSlinkFull(void) const throw (Fed9UVmeDeviceException);
+    bool getSlinkFull(void) const noexcept(false);
 
     /**Returns the S-LINK link down flag from the BE status register.*/
-    bool getSlinkDown(void) const throw (Fed9UVmeDeviceException);
+    bool getSlinkDown(void) const noexcept(false);
 
     /**Returns the internal freeze flag. This flag indicated if the FED trigger FIFOs have
        overflowed. The FED will be frozen for debugging if positive.*/
-    bool getTriggerFifoOverflow(void) const throw (Fed9UVmeDeviceException);
+    bool getTriggerFifoOverflow(void) const noexcept(false);
 
     /**Returns the over temperature interrupt signal flag.*/
-    bool getTempInterrupt(void) const throw (Fed9UVmeDeviceException);
+    bool getTempInterrupt(void) const noexcept(false);
 
     //<JEC date=09/01/06>
     //Added tracker header type to Fed9UVmeDevice.
@@ -1076,13 +1076,13 @@ namespace Fed9U {
      * \copydoc Fed9UABC::setHeaderFormatType
      * \throw   Fed9UVmeDeviceException Catches and rethrows all errors thrown during this method call as a this exception type.
      */
-    Fed9UVmeDevice& setHeaderFormatType(Fed9UHeaderFormat headerType) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setHeaderFormatType(Fed9UHeaderFormat headerType) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getHeaderFormatType
      * \throw   Fed9UVmeDeviceException Catches and rethrows all errors thrown during this method call as this exception type.
      */
-    Fed9UHeaderFormat getHeaderFormatType(void) const throw (Fed9UVmeDeviceException);
+    Fed9UHeaderFormat getHeaderFormatType(void) const noexcept(false);
     //</JEC>
 
     //<JEC date=23/02/2006>
@@ -1092,13 +1092,13 @@ namespace Fed9U {
      * \throw   Fed9UVmeDeviceException Throws for an out of bounds error and rethrows all events thrown during member function
      *          execution as this type.
      */
-    Fed9UVmeDevice& setBunchCrossingOffset(u16 bxOffset) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setBunchCrossingOffset(u16 bxOffset) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::getBunchCrossingOffset
      * \throw   Fed9UVmeDeviceException Rethrows all errors thrown during member function execution and rethrows as this exception.
      */
-    u16 getBunchCrossingOffset(void) const throw (Fed9UVmeDeviceException);
+    u16 getBunchCrossingOffset(void) const noexcept(false);
     //</JEC>
 
     //<JEC date=08/12/2005>
@@ -1108,13 +1108,13 @@ namespace Fed9U {
      * \throw   Fed9UVmeDeviceException Throws this exception if eventType is out of range. Rethrows all errors thrown during member
      *          function execution and rethrows as this exception.
      */
-    Fed9UVmeDevice& setDaqEventType(u16 eventType) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqEventType(u16 eventType) noexcept(false);
 
     /**
      * \copdoc Fed9UABC::getDaqEventType
      * \throw  Fed9UVmeDeviceException Rethrows all errors thrown during member function execution and rethrows as this exception.
      */
-    u16 getDaqEventType(void) const throw (Fed9UVmeDeviceException);
+    u16 getDaqEventType(void) const noexcept(false);
     //</JEC>
 
     //<JEC date=08/12/2005>
@@ -1124,39 +1124,39 @@ namespace Fed9U {
      * \throw   Fed9UVmeDeviceException Thrown for an out of bounds error and rethrows all errors thrown
      *          during member function execution.
      */
-    Fed9UVmeDevice& setDaqFov(u16 fov) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqFov(u16 fov) noexcept(false);
     /**
      * \copydoc Fed9UABC::setDaqFov
      * \throw   Fed9UVmeDeviceException Rethrows all errors thrown
      *          during member function execution.
      */
-    u16 getDaqFov(void) const throw (Fed9UVmeDeviceException);
+    u16 getDaqFov(void) const noexcept(false);
     //</JEC>
 
     // <JEC date="1/12/2006">
-    Fed9UVmeDevice& setBunchCrossingOrbitTotal(u16 orbitTotal) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setBunchCrossingOrbitTotal(u16 orbitTotal) noexcept(false);
     //</JEC>
 
     /**Returns the bunch crossing number total for each LHC orbit. This is a read
        only register. It should return the same value each orbit. It is a 12-bit number.*/
-    u16 getBunchCrossingOrbitTotal(void) throw (Fed9UVmeDeviceException);
+    u16 getBunchCrossingOrbitTotal(void) noexcept(false);
 
     // JEC 8/3/06
     // under development
-    Fed9UVmeDevice& setFmmTestRegister(u16 testSettings) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFmmTestRegister(u16 testSettings) noexcept(false);
 
     /**Returns the contents of the FMM test register.  It is a 4-bit number which is used to test the signals to the FMM
        manually.  This register is enabled via bit 5 of the main test register, but should not be enabled during normal
        operation.*/
     // JEC 6/3/06
-    u16 getFmmTestRegister(void) throw (Fed9UVmeDeviceException);
+    u16 getFmmTestRegister(void) noexcept(false);
     
     //<JEC date=16/03/07>  NB.  setter is private as it must be used in conjunction with corresponding FE command
     /**
      * Retrieves the prescale applied to all triggers received by the BE-FPGA.  The firmware needs the number of events
      * to skip.  This method converts that into the actual prescale factor.  Skip every Nth event means a prescale factor of N+1.
      */
-    u16 getBEFrameCapturePrescale(void) const throw (Fed9UVmeDeviceException);
+    u16 getBEFrameCapturePrescale(void) const noexcept(false);
     //</JEC>
     
     /**Returns all the tracker header monitor information. The tracker header monitor for
@@ -1167,7 +1167,7 @@ namespace Fed9U {
        NOTE: this method internally checks the tracker header monitor status flag which is
        in the DAQ register before reading the tracker header monitor. An exception is thrown
        if the data is not ready to be read.*/
-    std::vector<u8> getTrackerHeaderMonitor(u16 feFpga) const throw (Fed9UVmeDeviceException);
+    std::vector<u8> getTrackerHeaderMonitor(u16 feFpga) const noexcept(false);
 
     /**
      * \brief  Returns the level 1 event number as defined by the TTC system.
@@ -1176,41 +1176,41 @@ namespace Fed9U {
      *         level 1 accept from the header would be invalid. All exceptions that are thrown during this member function call
      *         are caught and rethrown as this type.
      */
-    u32 getL1AcceptID(void) const throw (Fed9UVmeDeviceException);
+    u32 getL1AcceptID(void) const noexcept(false);
     
     /**Returns the TTS Read bit.*/
-    bool getTTSRead(void) const throw (Fed9UVmeDeviceException);
+    bool getTTSRead(void) const noexcept(false);
 
     /**Returns the TTS Warn Overflow bit.*/
-    bool getTTSWarnOverflow(void) const throw (Fed9UVmeDeviceException);
+    bool getTTSWarnOverflow(void) const noexcept(false);
 
     /**Returns the TTS Busy bit.*/
-    bool getTTSBusy(void) const throw (Fed9UVmeDeviceException);
+    bool getTTSBusy(void) const noexcept(false);
 
     /**Returns the TTS Out of Sync bit.*/
-    bool getTTSOutOfSync(void) const throw (Fed9UVmeDeviceException);
+    bool getTTSOutOfSync(void) const noexcept(false);
 
     /**Reads the Bx counter value at LHC orbit from the long_read_1 register.
        This should be identical to the value read using the getBunchCrossingOrbitTotal() method.*/
-    u16 getBunchCrossingOrbitLongRead1(void) const throw (Fed9UVmeDeviceException);
+    u16 getBunchCrossingOrbitLongRead1(void) const noexcept(false);
 
     /** Returns the complete contents of the second BE status register.*/
     // JEC 20-11-06
-    vector<u32> getSecondBeStatusRegister(void) const throw (Fed9UVmeDeviceException);
+    vector<u32> getSecondBeStatusRegister(void) const noexcept(false);
 
     /**Reads the last TTC broadcast frame (short format) decoded from channel B of the TTCrx.*/
-    std::vector<u16> getTtcBroadcastCommand(void) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getTtcBroadcastCommand(void) const noexcept(false);
 
     /**Read the last TTC individually addressed command (long format) decoded from channel B of the TTCrx.*/
-    std::vector<u16> getTtcIndividuallyAddressedCommand(void) const throw (Fed9UVmeDeviceException);
+    std::vector<u16> getTtcIndividuallyAddressedCommand(void) const noexcept(false);
 
     // JEC 10-04-06
     /** This method dumps the contents of all read/write BE registers.
      *  Only those registers which are set up during initialisation are printed out.
      */
-    void dumpBeRegisters(ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
-    void dumpBeStatusRegisters(ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
-    void dumpTrackerHeaderMonitor(ostream &os, bool addHtml) throw (Fed9UVmeDeviceException);
+    void dumpBeRegisters(ostream &os, bool addHtml) noexcept(false);
+    void dumpBeStatusRegisters(ostream &os, bool addHtml) noexcept(false);
+    void dumpTrackerHeaderMonitor(ostream &os, bool addHtml) noexcept(false);
 
   private:
     // JEC 06-10-06
@@ -1246,7 +1246,7 @@ namespace Fed9U {
      * This sets the value of the prescale applied to all triggers coming into the BE-FPGA.  It is a private member because
      * it must be used in conjunction with the corresponding register for the FE-FPGAs.
     */
-    Fed9UVmeDevice& setBEFrameCapturePrescale(u16 prescale) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setBEFrameCapturePrescale(u16 prescale) noexcept(false);
     //</JEC>
     
     /*******************************************************************************
@@ -1258,7 +1258,7 @@ namespace Fed9U {
     /**
      * Returns the firmware ID on the VME FPGA.
      */
-    u32 getVmeFirmwareId() const throw (Fed9UVmeDeviceException);
+    u32 getVmeFirmwareId() const noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setClock
@@ -1270,7 +1270,7 @@ namespace Fed9U {
      * This is not affect by a FED reset. After the rest there will be a
      * software pause to allow the FED to lock to the new clock.
      */
-    Fed9UVmeDevice& setClock(Fed9UClockSource clockSelect) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setClock(Fed9UClockSource clockSelect) noexcept(false);
 
     /**
      * \copydoc Fed9UABC::setClock
@@ -1281,7 +1281,7 @@ namespace Fed9U {
      * the reset can be removed. As long as the User guaranties there will be no communication
      * with the FED for at least 0.5secs after the clock change there should be no problem.
      */
-    Fed9UVmeDevice& setClock(Fed9UClockSource clockSelect, bool doWait) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setClock(Fed9UClockSource clockSelect, bool doWait) noexcept(false);
 
     /**
      * Returns the clock source.
@@ -1289,7 +1289,7 @@ namespace Fed9U {
      * The clocks avaliable to be selected are the on board, TTC and back plane clock.
      * The Fed9UClockSource enum is defined in TypeDefs.hh.
      */
-    Fed9UClockSource getClock() const throw (Fed9UVmeDeviceException);
+    Fed9UClockSource getClock() const noexcept(false);
 
     /**
      * This method will set the amount of read only memory on the EPROM.
@@ -1302,7 +1302,7 @@ namespace Fed9U {
      * These values are from the Fed9UEpromReadOnlyLevel enum found in the TypeDefs.
      * At present it is not possible to read back this setting.
      */
-    Fed9UVmeDevice& setEpromReadOnlyLevel(Fed9UEpromReadOnlyLevel readOnlyLevel) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setEpromReadOnlyLevel(Fed9UEpromReadOnlyLevel readOnlyLevel) noexcept(false);
 
     /**
      * This method is used to write to the EPROM memory.
@@ -1313,7 +1313,7 @@ namespace Fed9U {
      * and must always be less than the size of the EPROM minus the offset. It is defaulted to 2047. The default
      * value will update the entire EPROM.
      */
-    Fed9UVmeDevice& setEprom(const Fed9UEpromDescription& epromDescription, u32 initialOffset = 0, u32 numberOfBytes = 2047) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setEprom(const Fed9UEpromDescription& epromDescription, u32 initialOffset = 0, u32 numberOfBytes = 2047) noexcept(false);
 
     /**
      * This method will return the contents of a section of the EPROM memory.
@@ -1323,40 +1323,40 @@ namespace Fed9U {
      * to 0 and has a maximum value of 2046. The number of bytes has a maximum value of 2047 and is defaulted to 2047.
      * The updated EPROM is returned by reference.
      */
-    Fed9UEpromDescription getEprom(u32 initialOffset = 0, u32 numberOfBytes = 2047) const throw (Fed9UVmeDeviceException);
+    Fed9UEpromDescription getEprom(u32 initialOffset = 0, u32 numberOfBytes = 2047) const noexcept(false);
 
     /**
      * This method will set the FED serial number.
      * NOTE: This method will be become depreciated during 2005.
      */
-    Fed9UVmeDevice& setFedSerialNumber(u32 serialNumber) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFedSerialNumber(u32 serialNumber) noexcept(false);
 
     /**
      * This method will set the FED hardware id which is also called fed serial number.
      * this method maps to that in the Fed9UABC and the Fed9UDescription
      * NOTE: This method will be become depreciated during 2005.
      */
-    Fed9UVmeDevice& setFedHardwareId(u32 serialNumber) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFedHardwareId(u32 serialNumber) noexcept(false);
 
     /**
      * This method will return the FED serial number.
      * NOTE: This method will be become depreciated during 2005. Use the getFedSerialNumberProtected method instead.
      */
-    u32 getFedSerialNumber() const throw (Fed9UVmeDeviceException);
+    u32 getFedSerialNumber() const noexcept(false);
 
     /**
      * This method will read the FED hardware ID (or serial number) from the write protected EPROM memory.
      * It uses a enum defined in TypeDefs.hh which sets the byte at which the write protected area of the
      * EPROM begins.
      */
-    u32 getFedSerialNumberProtected() const throw (Fed9UVmeDeviceException);
+    u32 getFedSerialNumberProtected() const noexcept(false);
     
     /**
      * This method will return the FED HardwareId which is also called Fed serial number.
      * this method maps to that in the Fed9UABC and the Fed9UDescription
      * NOTE: This method will be become depreciated during 2005. Use the getFedSerialNumberProtected method instead.
      */
-    u32 getFedHardwareId() const throw (Fed9UVmeDeviceException);
+    u32 getFedHardwareId() const noexcept(false);
 
     /**
      * This can be used to place the voltage controller in a stand by mode which does not perform
@@ -1366,12 +1366,12 @@ namespace Fed9U {
      * A true will shut the controller down and a false enable it. This will not reset the chip.
      * All register values will remain unaffected.
      */
-    Fed9UVmeDevice& setVoltageMonitorStandBy(bool standBy) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setVoltageMonitorStandBy(bool standBy) noexcept(false);
 
     /**
      * This provides the ability to reset the status registers to their hardware defaults.
      */
-    Fed9UVmeDevice& resetVoltageMonitorStatusRegister() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& resetVoltageMonitorStatusRegister() noexcept(false);
 
     /**
      * This is used to configure the voltage monitor.
@@ -1379,19 +1379,19 @@ namespace Fed9U {
      * It must be given a Fed9UVoltageController which should contain all the 
      * appropiate settings.
      */
-    Fed9UVmeDevice& setVoltageMonitor(const Fed9UVoltageControl& voltageController) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setVoltageMonitor(const Fed9UVoltageControl& voltageController) noexcept(false);
 
     /**
      * This return a Fed9UVoltageMonitor which contains all the current read and writable
      * settings on the voltage monitor.
      */
-    Fed9UVoltageControl getVoltageMonitor() const throw (Fed9UVmeDeviceException);
+    Fed9UVoltageControl getVoltageMonitor() const noexcept(false);
 
     /**
      * This returns a Fed9UVoltageMonitorInfo which contains all the current settings
      * on the voltage monitor. Both the read writable settings and the read only ones.
      */
-    Fed9UVoltageControlInfo getVoltageMonitorInfo() const throw (Fed9UVmeDeviceException);
+    Fed9UVoltageControlInfo getVoltageMonitorInfo() const noexcept(false);
 
     /**
      * This will reset all the configuration and status registers on the System ACE controller. It will
@@ -1399,7 +1399,7 @@ namespace Fed9U {
      *
      * The firmware will be reloaded from the current configuration address.
      */
-    Fed9UVmeDevice& resetSystemAce() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& resetSystemAce() noexcept(false);
 
     /**
      * \brief  Reload the FPGA firmware from a compact flash card revision.
@@ -1412,7 +1412,7 @@ namespace Fed9U {
      * select the revision from which the CF card will load the firmware. getCfFileHeader can be used to view
      * the firmware version stored in each CF revision.
      */
-    Fed9UVmeDevice& reloadFpgaFirmwareFromCompactFlash(u32 configAddr) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& reloadFpgaFirmwareFromCompactFlash(u32 configAddr) noexcept(false);
     
     /**
      * This is used to set the System ACE data words to 16 bit.
@@ -1423,7 +1423,7 @@ namespace Fed9U {
      * in word mode. Each method that uses the System ACE sets itself into word
      * mode and so there should be no need to call this method.
      */
-    Fed9UVmeDevice& setSysAceWordMode() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setSysAceWordMode() noexcept(false);
     
     /**
      * Checks the size of the data used by the Compact Flash (CF).
@@ -1433,13 +1433,13 @@ namespace Fed9U {
      * not. All System ACE methods rely on it begin in word mode. Each method always sets itself into
      * word mode before writting to the System ACE.
      */
-    bool getSysAceWordMode() const throw (Fed9UVmeDeviceException);
+    bool getSysAceWordMode() const noexcept(false);
 
     //\todo - these are test functions and need to be removed once everything is working.
     //Depreciated. Do not use. They will be removed in future versions.
-    Fed9UVmeDevice& setSystemAceRegister(u32 data, u32 regAddr) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setSystemAceRegister(u32 data, u32 regAddr) noexcept(false);
 
-    u32 getSystemAceRegister(u32 regAddr) const throw (Fed9UVmeDeviceException);
+    u32 getSystemAceRegister(u32 regAddr) const noexcept(false);
 
     /**
      * \brief  Returns the firmware versions and the revision they are stored in by reading the header file, which was loaded
@@ -1449,7 +1449,7 @@ namespace Fed9U {
      * \throw  Fed9UVmeDeviceException If the file fails to open or does not contain a valid header then this exception is thrown.
      *         All exceptions thrown during this method call will be caught and rethrown as this type.
      */
-    std::string getCfFileHeader(const std::string& cfFileName) throw (Fed9UVmeDeviceException);
+    std::string getCfFileHeader(const std::string& cfFileName) noexcept(false);
 
     /**
      * \brief  A method to load a new Compact Flash (CF) image on to the FEDs CF card.
@@ -1469,7 +1469,7 @@ namespace Fed9U {
      * Once the upload is complete then firmware will not be reloaded and it must be done by a call to
      * reloadFpgaFirmwareFromCompactFlash. This member function is thread safe.
      */
-    std::string setCfImageFile(const std::string& cfInputImageFilePath, bool testCf = false, bool setGlobalFirmware = false) throw (Fed9UVmeDeviceException);
+    std::string setCfImageFile(const std::string& cfInputImageFilePath, bool testCf = false, bool setGlobalFirmware = false) noexcept(false);
 
     /**
      * \brief  Loads a blank file allocation table to the CF card. Performing a quick format of the card.
@@ -1481,7 +1481,7 @@ namespace Fed9U {
      * This method has no knowledge of the file structure on the CF card and in order perform a quick format loads a preformatted
      * CF image to the CF device that is included as part of the Fed9U installation.
      */
-    Fed9UVmeDevice& setEraseCfImage() throw (Fed9UVmeDeviceException) ;
+    Fed9UVmeDevice& setEraseCfImage() noexcept(false) ;
 
     /**
      * \brief  Reads a portion of the compact flash card and saves it to file. It saves a direct copy of the words on the CF file.
@@ -1501,7 +1501,7 @@ namespace Fed9U {
      * The file name generated by the member function is in a binary format containing the firmware versions stored on each revision.
      * It can be overriden using a human readable name, however the software will no longer consider this a valid .ace file.
      */
-    Fed9UVmeDevice& getCfImageFile(u32 mbToReadFromCf, std::string cfOutputImageFile = "UseBinary", u32 maxRev=8) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& getCfImageFile(u32 mbToReadFromCf, std::string cfOutputImageFile = "UseBinary", u32 maxRev=8) noexcept(false);
 
 
     /**
@@ -1515,7 +1515,7 @@ namespace Fed9U {
      * after this method is called as it will leave the data on the CF card in an undefined state. Always try to reset the
      * system ace and rewrite the image first this is a last resort method!
      */
-    Fed9UVmeDevice& cfDataBufferWriteDump() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& cfDataBufferWriteDump() noexcept(false);
 
     /**
      * \brief  To be used in the event that reading from the compact flash fails and leave the system ace controller in a
@@ -1528,7 +1528,7 @@ namespace Fed9U {
      * CF data request and its false for data buffer mode. It will read the remaining data from the buffer and should unlock
      * the system ace controller.
      */
-    Fed9UVmeDevice& cfDataBufferReadDump() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& cfDataBufferReadDump() noexcept(false);
 
     /**
      * Returns the version number.
@@ -1536,7 +1536,7 @@ namespace Fed9U {
      * The returned string contains the major version, minor version and revision number each separated
      * by an underscore.
      */
-    std::string getSystemAceVersionNumber() throw (Fed9UVmeDeviceException);
+    std::string getSystemAceVersionNumber() noexcept(false);
 
     /**
      * This returns the address that the current firmware is loaded from.
@@ -1544,7 +1544,7 @@ namespace Fed9U {
      * The Compact Flash (CF) card can contain multiple firmware versions. This provides the address of the firmware
      * used on the CF card. It should be used if the current firmware version is to be reloaded. It is a 3 bit number.
      */
-    u16 getCfFirmwareAddress() throw (Fed9UVmeDeviceException);
+    u16 getCfFirmwareAddress() noexcept(false);
 
     /**
      * This returns an 17 element vector which contains all the setting in the status register. A description of
@@ -1571,7 +1571,7 @@ namespace Fed9U {
      * 15 CF Correctable Error - true if a correctable error has occurred. See the error register for more details.
      * 16 CF Error - true if an error has occurred. See the error register for more details.
      */
-    std::vector<bool> getSystemAceStatusRegister() throw (Fed9UVmeDeviceException);
+    std::vector<bool> getSystemAceStatusRegister() noexcept(false);
 
     /**
      * This returns a five element vector that contains all the error bits for the configuration
@@ -1586,7 +1586,7 @@ namespace Fed9U {
      * 3 Instruction Error - true if an invalid instruction was encountered during configuration.
      * 4 Monitor Error - true if the configuration did not start within 500ms of being told to start.
      */
-    std::vector<bool> getSysAceConfigErrorStatus() throw (Fed9UVmeDeviceException);
+    std::vector<bool> getSysAceConfigErrorStatus() noexcept(false);
 
     /**
      * This returns a 10 element vector that contains all the Compact Flash error bits.
@@ -1603,7 +1603,7 @@ namespace Fed9U {
      * 8 Command Abort - true if a CF command was aborted.
      * 9 General Error - true if a general error has occured.
      */
-    std::vector<bool> getCfErrorStatus() throw (Fed9UVmeDeviceException);
+    std::vector<bool> getCfErrorStatus() noexcept(false);
 
     /**
      * This returns an 8 element vector which contains the status of the Compact Flash (CF)
@@ -1620,12 +1620,12 @@ namespace Fed9U {
      * 6 Calculate if FAT12 or not based on the cluster count - true if FAT12 format.
      * 7 Calculate if FAT16 or not based on the cluster count - true if FAT16 format.
      */
-    std::vector<bool> getCfFatStatus() throw (Fed9UVmeDeviceException);
+    std::vector<bool> getCfFatStatus() noexcept(false);
 
     /**
      * Returns the number of events that have been readout over the VME link.
      */
-    u32 vmeEventCounter() const throw (Fed9UVmeDeviceException);
+    u32 vmeEventCounter() const noexcept(false);
 
     /**
      * \brief  Looks in the event buffer for an event.
@@ -1634,7 +1634,7 @@ namespace Fed9U {
      * \throw  Fed9UVmeDeviceException Catches all exceptions thrown from called methods
      *         and rethrows as this exception with method information appended.
      */
-    u32 hasEvent() const throw (Fed9UVmeDeviceException);
+    u32 hasEvent() const noexcept(false);
 
     /**
      * The event in the buffer is read out to the location of memory specified by the
@@ -1648,7 +1648,7 @@ namespace Fed9U {
      * out a single 32 bit word at a time. By setting this value to false a block transfer
      * will be performed, true and single reads will be used instead.
      */
-    Fed9UVmeDevice& getCompleteEvent(u32* destBuffer, u32 freeBufSpace, u32& numU32sAddedToBuffer, u32& eventCounter, bool blockDisable = true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& getCompleteEvent(u32* destBuffer, u32 freeBufSpace, u32& numU32sAddedToBuffer, u32& eventCounter, bool blockDisable = true) noexcept(false);
 
     /**
      * \brief  Reads the full event from memory into a software buffer using a VME block transfer.
@@ -1660,7 +1660,7 @@ namespace Fed9U {
      * \throw  Fed9UVmeDeviceException This error type is thrown in response to a variety of error condition
      *         that may occur while reading the event.
      */
-    Fed9UVmeDevice& getCompleteEventTurboStyle(u32* destBuffer, u32 freeBufSpace, u32&  numU32sAddedToBuffer, u32& eventCounter) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& getCompleteEventTurboStyle(u32* destBuffer, u32 freeBufSpace, u32&  numU32sAddedToBuffer, u32& eventCounter) noexcept(false);
 
     /**
      * Purge the event buffer.
@@ -1668,7 +1668,7 @@ namespace Fed9U {
      * Removes any existing events from the buffer. It returns the number of events that
      * were purged and the number of events that have been readout over the VME link.
      */
-    Fed9UVmeDevice& purgeEvents(u32& numberOfPurgedEvents, u32& eventCounter) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& purgeEvents(u32& numberOfPurgedEvents, u32& eventCounter) noexcept(false);
 
 
   private:
@@ -1682,25 +1682,25 @@ namespace Fed9U {
      * The memory address of the byte to be written is given in the second element of
      * the vector.
      */
-    Fed9UVmeDevice& epromWrite(const std::vector<u32>& epromDataAndOffset) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& epromWrite(const std::vector<u32>& epromDataAndOffset) noexcept(false);
 
     /**
      * This is used to read a byte of memory on the EPROM. It takes only one arguement
      * the address of the byte of memory to be read.
      */
-    u32 epromRead(u32 offset) const throw (Fed9UVmeDeviceException);
+    u32 epromRead(u32 offset) const noexcept(false);
 
     /**
      * Before the Compact Flash (CF) card can be read from the System ACE controller must get a lock.
      * If the method fails to get a lock then a Fed9UVmeDeviceException error will be thrown.
      */
-    Fed9UVmeDevice& getCompactFlashLock() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& getCompactFlashLock() noexcept(false);
 
     /**
      * Once the System ACE has a lock with the Compact Flash (CF) card it must then check to
      * see if the CF device is ready to receive commands.
      */
-    Fed9UVmeDevice& checkCfReadyForCommands() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& checkCfReadyForCommands() noexcept(false);
 
     /**
      * This sets the starting Logical Block Address (LBA), the number of sectors that are to be written
@@ -1711,12 +1711,12 @@ namespace Fed9U {
      * of memory on the CF card that the read/write should start from. It has a maximum value of 128,000
      * on a 64MB CF card.
      */
-    Fed9UVmeDevice& setDataRegionToReadOrWrite(u32 lba, u32 sectorCount, bool read) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDataRegionToReadOrWrite(u32 lba, u32 sectorCount, bool read) noexcept(false);
 
     /**
      * This polls the data buffer to ensure it is ready to be read.
      */
-    Fed9UVmeDevice& checkDataBufferReady() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& checkDataBufferReady() noexcept(false);
 
     /**
      * \brief  Scans the available revisions on the CF cards to look for alternate firmware version
@@ -1731,7 +1731,7 @@ namespace Fed9U {
      * This method will detect the firmware versions stored in each revision by sequentially loading each revision stored on the
      * compact flash card and reading back the firmwares from the FED registers. This will disrupt anything else the FED is doing.
      */
-    std::vector<std::string> setCfFileHeader(u32 maxRev=8)  throw (Fed9UVmeDeviceException);
+    std::vector<std::string> setCfFileHeader(u32 maxRev=8)  noexcept(false);
 
     /**
      * \brief  Utility method to check the CF image .ace file for consistancy and to remove the file header.
@@ -1749,7 +1749,7 @@ namespace Fed9U {
      * Arguements are passed by reference and are modified, hence the references must be mutual exclusion must be provided by the User
      * if they are two common data structures.
      */
-    Fed9UVmeDevice& removeCfFileHeaderAndMarkers(std::ifstream& cfInputFile, std::ios::pos_type& endDataMarker, std::string& firmwareInfo/*, std::ios::pos_type& startDataMarker=std::ios::off_type(-1)*/) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& removeCfFileHeaderAndMarkers(std::ifstream& cfInputFile, std::ios::pos_type& endDataMarker, std::string& firmwareInfo/*, std::ios::pos_type& startDataMarker=std::ios::off_type(-1)*/) noexcept(false);
 
     /**
      * \brief  Will return true if the Compact Flash (CF) card reloaded correctly after a reboot from the CF, otherwise false.
@@ -1759,7 +1759,7 @@ namespace Fed9U {
      * This polls the system ACE registers to check for a valid reload in the status register. It will time out if the firmware
      * is found not to reload correctly.
      */
-    bool pollCfForFirmwareReload() const throw (Fed9UVmeDeviceException);
+    bool pollCfForFirmwareReload() const noexcept(false);
 
     /*******************************************************************************
      *                      These are the high level commands                      *
@@ -1892,7 +1892,7 @@ namespace Fed9U {
      * to clear an event without having to rerun the init() method. Warning this will
      * reset the APV disable settings.
      */
-    Fed9UVmeDevice& sendFedCompleteLogicReset() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendFedCompleteLogicReset() noexcept(false);
 
     /**
      * This will reset the whole FED.
@@ -1900,32 +1900,32 @@ namespace Fed9U {
      * The TTCrx chip, the temperature monitors, pedestals, disabled strips, high and
      * low cluster thresholds and the clock source are unaffected by a FED Reset.
      */
-    Fed9UVmeDevice& sendFedReset(bool doWait=true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendFedReset(bool doWait=true) noexcept(false);
 
     /**
      * This will reset VME VLink and counters only.
      *
      */
-    Fed9UVmeDevice& sendVLinkReset() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendVLinkReset() noexcept(false);
 
     /**
      * This will reset VME Bus using the Bus controller resetBus Method.
      *
      */
-    Fed9UVmeDevice& sendVmeBusReset() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendVmeBusReset() noexcept(false);
  
     /**
      * This will reset VME Bus using the Bus controller resetBus Method.
      *
      */
-    Fed9UVmeDevice& sendVmeBusResetInhibit(bool value) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& sendVmeBusResetInhibit(bool value) noexcept(false);
 
  
 
    /**
      * \copydoc Fed9UABC::setDaqMode
      */
-    Fed9UVmeDevice& setDaqMode(Fed9UDaqMode newFedDaqMode) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqMode(Fed9UDaqMode newFedDaqMode) noexcept(false);
 
     /**
      * Sets the DAQ super mode for the FED.
@@ -1938,7 +1938,7 @@ namespace Fed9U {
     /**
      * \copydoc Fed9UDaqSuperMode
      */
-    Fed9UVmeDevice& setDaqSuperMode(Fed9UDaqSuperMode newFedDaqMode) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setDaqSuperMode(Fed9UDaqSuperMode newFedDaqMode) noexcept(false);
 
     
    /**
@@ -1947,7 +1947,7 @@ namespace Fed9U {
      * In order to identify FEDs in the crate we read from this register
      * It should hold the value 0x00000FED
      */
-    bool getIsFed()  const throw (Fed9UVmeDeviceException);
+    bool getIsFed()  const noexcept(false);
 
 
     /**
@@ -1958,7 +1958,7 @@ namespace Fed9U {
      * process raw data mode, zero suppressed data mode, virgin raw dat
      * mode and scope mode.
      */
-    Fed9UDaqMode getDaqMode()  const throw (Fed9UVmeDeviceException);
+    Fed9UDaqMode getDaqMode()  const noexcept(false);
 
 
     /**
@@ -1968,18 +1968,18 @@ namespace Fed9U {
      * is declared in TypeDefs.hh. There are thre DAQ Super modes avaliable
      * fake, zero lite and normal
      */
-    Fed9UDaqSuperMode getDaqSuperMode()  const throw (Fed9UVmeDeviceException);
+    Fed9UDaqSuperMode getDaqSuperMode()  const noexcept(false);
   
     /**
      * \copydoc Fed9UABC::setTempControl
      */
-    Fed9UVmeDevice& setTempControl(const Fed9UAddress& fpga, const Fed9UTempControl& temperatureSettings) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setTempControl(const Fed9UAddress& fpga, const Fed9UTempControl& temperatureSettings) noexcept(false);
 
     /**
      * Returns a Fed9UTempControl object which contain all the read/write settings on the LM82
      * temperature monitor, but not the read only settings.
      */
-    Fed9UTempControl getTempControl(const Fed9UAddress& fpga)  const throw (Fed9UVmeDeviceException);
+    Fed9UTempControl getTempControl(const Fed9UAddress& fpga)  const noexcept(false);
 
     /**
      * This reads back all the settings on the LM82 temperature monitor. It returns a
@@ -1989,7 +1989,7 @@ namespace Fed9U {
      * it also contains the read only register. The status register u32 can be masked with the enum
      * Fed9UTemperatureStatus, found in TypeDefs.hh, to check the individual status bits.
      */
-    Fed9UTempControlInfo getTempControlInfo(const Fed9UAddress& fpga)  const throw (Fed9UVmeDeviceException);
+    Fed9UTempControlInfo getTempControlInfo(const Fed9UAddress& fpga)  const noexcept(false);
 
     /**
      * The returned vector contains the status of the BE FPGA registers that contain
@@ -2002,7 +2002,7 @@ namespace Fed9U {
      * 2 Number of unread words in QDR
      * 3 Total frame count written to QDR
      */
-    std::vector<u32> getBeEventCounterStatus()  const throw (Fed9UVmeDeviceException);
+    std::vector<u32> getBeEventCounterStatus()  const noexcept(false);
 
     /**
      * In the event that theLocalFedSettings gets totally out of sync with the FED
@@ -2010,7 +2010,7 @@ namespace Fed9U {
      * stored on the FED and pass it to the theLocalFedSettings.  The only
      * information it does not get is what is stored in the EPROM.
      */
-    Fed9UVmeDevice& updateLocalDescriptionFromFed() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& updateLocalDescriptionFromFed() noexcept(false);
 
     /**
      * This method will prepare the FED to run in a DAQ mode specified in theLocalFedSettings
@@ -2021,7 +2021,7 @@ namespace Fed9U {
      * can be taken. The strip settings (pedestals, disabled strips and cluster thresholds) and
      * the APV disable flag settings and the BE FPGA disable flag are not setup.
      */
-    Fed9UVmeDevice& init(bool setClockAndReset=true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& init(bool setClockAndReset=true) noexcept(false);
 
     /** 
      * This method prepares the FED for running in the fastest possible way.
@@ -2031,40 +2031,40 @@ namespace Fed9U {
      * vmeFpgaSoftReset
      * stop() (note that stop also disables all the ADCs in order to reduce power consumption when fed is not running
      */
-    Fed9UVmeDevice& fastInit() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& fastInit() noexcept(false);
 
     /**
      * This method will initialise all the strips on a FED so that they are ready to take data.
      *
      * Initialises the pedestals, disabled strips, low and high cluster thresholds from theLocalFedSettings.
      */
-    Fed9UVmeDevice& initStrips() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& initStrips() noexcept(false);
     
     /**
      * This method will initialise the Fake Event RAMs on a FED so that they are ready to output fake events.
      *
      * Added all parameters after first 2 for use in FedPatternCheck.cc.  Can be left out to run the function as it did previously (AAB 8/15/2015)
      */
-    Fed9UVmeDevice& initFakeEvent( bool useEventFile, bool blockUpload = false, std::string * inFEDString = NULL, std::string * inFEDString2 = NULL ,std::string * inFEDString4 = NULL, int uniqueChannels = 1, bool isZS = false ) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& initFakeEvent( bool useEventFile, bool blockUpload = false, std::string * inFEDString = NULL, std::string * inFEDString2 = NULL ,std::string * inFEDString4 = NULL, int uniqueChannels = 1, bool isZS = false ) noexcept(false);
 
     /**
      * This will initialise the temperature monitors, TTCrx device and the voltage monitor.
      */
-    Fed9UVmeDevice& initAuxiliaryChips() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& initAuxiliaryChips() noexcept(false);
 
     /**
      * This enables the FED so that it can start taking data.
      *
      * Sets the APV disable flag settings and the BE FPGA disable flag settings.
      */
-    Fed9UVmeDevice& start() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& start() noexcept(false);
 
     /**
      * Stops the FED after it has performed a run
      *
      * This is done by disabling all the APVs and the BE FPGA.
      */
-    Fed9UVmeDevice& stop() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& stop() noexcept(false);
 
     /**
      * Scans through all the FED delay settings.
@@ -2072,7 +2072,7 @@ namespace Fed9U {
      * It can either scan through a nano second range or fine and coarse skew setting range
      * for a given channel.
      */
-    Fed9UVmeDevice& scanDelayValues(const Fed9UAddress& fedChannel, bool nanoDelay=true, bool scanCoarse=false) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& scanDelayValues(const Fed9UAddress& fedChannel, bool nanoDelay=true, bool scanCoarse=false) noexcept(false);
 
     /**
      * \brief  If there is an event in the buffer then an error is thrown.
@@ -2080,56 +2080,56 @@ namespace Fed9U {
      * \throw  Fed9UDeviceException Thrown if an event is found in the buffer.
      * \todo   Check if this is actually a good idea!
      */
-    const Fed9UVmeDevice& checkEvent()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& checkEvent()  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the BE FPGA.
      */
-    const Fed9UVmeDevice& backEndCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& backEndCheck()  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the FE FPGA.
      */
-    const Fed9UVmeDevice& frontEndCheck(bool CMMedianOverridOnly=false)  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& frontEndCheck(bool CMMedianOverridOnly=false)  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the VME FPGA.
      */
-    const Fed9UVmeDevice& vmeCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& vmeCheck()  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the higher level commands.
      */
-    const Fed9UVmeDevice& higherLevelCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& higherLevelCheck()  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the TTCrx device.
      */
-    const Fed9UVmeDevice& ttcrxCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& ttcrxCheck()  const noexcept(false);
 
     /**
      * This method checks each byte of the EPROM memory to ensure that it is the same
      * as that stored in the Fed9UDescription.
      */
-    const Fed9UVmeDevice& epromCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& epromCheck()  const noexcept(false);
 
     /**
      * This method can be used to compare the values of the Fed9UDescrition to those
      * on the FED for the whole FED.
      */
-    const Fed9UVmeDevice& fedCheck()  const throw (Fed9UVmeDeviceException);
+    const Fed9UVmeDevice& fedCheck()  const noexcept(false);
 
     // JEC 10-04-06
     /** This method can be used to dump out all read/write FE & BE register information.
      *  Output is in the form of an ostream object, so can be used either to dump to
      *	the screen or to a file.
      */
-    void dumpFedInformation(int dumpChoice, unsigned short Fpga, ostream &os) throw (Fed9UVmeDeviceException);
+    void dumpFedInformation(int dumpChoice, unsigned short Fpga, ostream &os) noexcept(false);
 
     /**
      * Returns a copy of the Fed9UDescription object.
@@ -2146,7 +2146,7 @@ namespace Fed9U {
      * initAuxiliaryChips and setEprom. It is not possible to change FEDs or crates.
      * The base address and crate number should remain the same.
      */
-    Fed9UVmeDevice& setFed9UVMEDeviceDescription(const Fed9UDescription& newFed9UDescription, bool initFed) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFed9UVMEDeviceDescription(const Fed9UDescription& newFed9UDescription, bool initFed) noexcept(false);
     // <NAC date="23/04/2007"> 
     /**
      * Loads a new Fed9UDecription and sets FED registers. 
@@ -2156,7 +2156,7 @@ namespace Fed9U {
      * parameters into the FED. It is not possible to change FEDs or crates.
      * The base address and crate number should remain the same.
      */
-    Fed9UVmeDevice& loadDescription(const Fed9UDescription& newDescription) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& loadDescription(const Fed9UDescription& newDescription) noexcept(false);
     // </NAC>
 
     /**
@@ -2179,7 +2179,7 @@ namespace Fed9U {
      * is the actual prescale factor and is internally converted to the "skip N events" value of N that is
      * required by the firmware.
      */
-    Fed9UVmeDevice& setFrameCapturePrescale(u32 prescale) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setFrameCapturePrescale(u32 prescale) noexcept(false);
     //</JEC>
 
   private:
@@ -2191,7 +2191,7 @@ namespace Fed9U {
      * A reference value for FE DAQ mode is passed and all other FE DAQ modes are compared to this value.
      * The BE FPGA is then compared to the FE FPGA mode to ensure they are consistant.
      */
-    Fed9UDaqMode daqConsistancyCheck(const std::vector<u32>& feDaqMode, const u32 beDaqMode) const throw (Fed9UVmeDeviceException);
+    Fed9UDaqMode daqConsistancyCheck(const std::vector<u32>& feDaqMode, const u32 beDaqMode) const noexcept(false);
 
     /**
      * This method is used to ensure that either the FE FPGA DAQ mode is the same on all the FE FPGAs
@@ -2200,7 +2200,7 @@ namespace Fed9U {
      * A reference value for FE DAQ mode is passed and all other FE DAQ modes are compared to this value.
      * The BE FPGA is then compared to the FE FPGA mode to ensure they are consistant.
      */
-    Fed9UDaqSuperMode daqSuperModeConsistancyCheck(const std::vector<u32>& feDaqMode ) const throw (Fed9UVmeDeviceException);
+    Fed9UDaqSuperMode daqSuperModeConsistancyCheck(const std::vector<u32>& feDaqMode ) const noexcept(false);
 
     /**
      * Writes the LM82 temperature monitoring chip setting for a specific register.
@@ -2213,7 +2213,7 @@ namespace Fed9U {
      * 0x0d - Writes the FPGA temperature high point.
      * 0x5a - Writes the critical temperature set point.
      */
-    Fed9UVmeDevice& tempControlWrite(u16 fpga_, const std::vector<u32>& tempDataAndRegAddr) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& tempControlWrite(u16 fpga_, const std::vector<u32>& tempDataAndRegAddr) noexcept(false);
 
     /**
      * Reads the LM82 temperature monitoring chip setting for a specific register.
@@ -2228,44 +2228,44 @@ namespace Fed9U {
      * 0x42 - Reads the critical temperature set point.
      * 0xfe - Reads the LM82 manufacturers ID.
      */
-    u32 tempControlRead(u16 fpga_, const std::vector<u32>& regAddress) const throw (Fed9UVmeDeviceException);
+    u32 tempControlRead(u16 fpga_, const std::vector<u32>& regAddress) const noexcept(false);
 
     /**
      * This is used to write to the configuration register on the temperature monitor chip.
      */
-    Fed9UVmeDevice& tempControlConfig(const u16 fpga_, const u32 configSettings) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& tempControlConfig(const u16 fpga_, const u32 configSettings) noexcept(false);
 
     /**
      * Loads the complete set of FE FPGA disbale settings to the FED from the localFedSettings.
      */
-    Fed9UVmeDevice& setAllFedFeUnitDisable() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllFedFeUnitDisable() noexcept(false);
 
     /**
      * Loads all the temperature monitor data.
      */
-    Fed9UVmeDevice& setAllTempControlData() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllTempControlData() noexcept(false);
 
     /**
      * Loads all the frame finding thresholds.
      */
-    Fed9UVmeDevice& setAllFrameThresholds() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllFrameThresholds() noexcept(false);
 
     /**
      * Loads all the OptoRx controls.
      */
-    Fed9UVmeDevice& setAllOptoRxControls() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllOptoRxControls() noexcept(false);
 
   public:
 
     /**
      * Loads all the median over-ride values from theLocalFedSettings to the FED.
      */
-    Fed9UVmeDevice& setAllCmMedianOverrideValues() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllCmMedianOverrideValues() noexcept(false);
 
     /**
      * Loads the complete set of delay FPGA skews.
      */
-    Fed9UVmeDevice& setAllDelays() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllDelays() noexcept(false);
 
 
     /**
@@ -2273,7 +2273,7 @@ namespace Fed9U {
      *
      * It has a maximum value of 25.
      */
-    Fed9UVmeDevice & setGlobalFineSkew(u16 GlobalSkew) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setGlobalFineSkew(u16 GlobalSkew) noexcept(false);
 
     /**
      * Returns the global shift that is applied to all the channels in the FED.
@@ -2286,26 +2286,26 @@ namespace Fed9U {
      * 
      */
 #ifdef EVENT_STREAMLINE
-    Fed9UVmeDevice & setFakeEventFrame(Fed9UAddress & fedChannel, Fed9UEventStreamLine * fakeEvent, bool blockMode = true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setFakeEventFrame(Fed9UAddress & fedChannel, Fed9UEventStreamLine * fakeEvent, bool blockMode = true) noexcept(false);
 #else
-    Fed9UVmeDevice & setFakeEventFrame(Fed9UAddress & fedChannel, Fed9UEvent * fakeEvent, bool blockMode = true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setFakeEventFrame(Fed9UAddress & fedChannel, Fed9UEvent * fakeEvent, bool blockMode = true) noexcept(false);
 #endif
    
     /**
      * returns a vector containing the fake event frame for a specific channel
      */
-    std::vector<u32> getFakeEventFrame(Fed9UAddress & fedChannel) throw (Fed9UVmeDeviceException);
+    std::vector<u32> getFakeEventFrame(Fed9UAddress & fedChannel) noexcept(false);
 
-    u16 getFakeEventAddress(Fed9UAddress & fedChannel) throw (Fed9UVmeDeviceException);
+    u16 getFakeEventAddress(Fed9UAddress & fedChannel) noexcept(false);
     
     /**
      * return all Fake Event frames in the form of a Fed9UEvent object pointer
      * the memory for this object is managed by the user that receives the returned pointer.
      */
 #ifdef EVENT_STREAMLINE
-    Fed9UEventStreamLine * getAllFakeEvents() throw (Fed9UVmeDeviceException);
+    Fed9UEventStreamLine * getAllFakeEvents() noexcept(false);
 #else
-    Fed9UEvent * getAllFakeEvents() throw (Fed9UVmeDeviceException);
+    Fed9UEvent * getAllFakeEvents() noexcept(false);
 #endif
 
     /**
@@ -2315,9 +2315,9 @@ namespace Fed9U {
      * ( Frame Interval and Frame Repeat not yet implemented )
      */
 #ifdef EVENT_STREAMLINE
-    Fed9UVmeDevice & setFakeEventSettings(Fed9UAddress & feUnitChannelPair, Fed9UEventStreamLine * fakeEvent) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setFakeEventSettings(Fed9UAddress & feUnitChannelPair, Fed9UEventStreamLine * fakeEvent) noexcept(false);
 #else
-    Fed9UVmeDevice & setFakeEventSettings(Fed9UAddress & feUnitChannelPair, Fed9UEvent * fakeEvent) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setFakeEventSettings(Fed9UAddress & feUnitChannelPair, Fed9UEvent * fakeEvent) noexcept(false);
 #endif
     /**
      * Loads all Fake Events into the FED for all FeUnits
@@ -2325,12 +2325,12 @@ namespace Fed9U {
      * 
      */
 #ifdef EVENT_STREAMLINE
-    Fed9UVmeDevice & setAllFakeEvents(Fed9UEventStreamLine * fakeEvent, bool blockUpload = false) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setAllFakeEvents(Fed9UEventStreamLine * fakeEvent, bool blockUpload = false) noexcept(false);
 #else
-    Fed9UVmeDevice & setAllFakeEvents(Fed9UEvent * fakeEvent, bool blockUpload = false) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setAllFakeEvents(Fed9UEvent * fakeEvent, bool blockUpload = false) noexcept(false);
 #endif
     
-    Fed9UVmeDevice & setBlockModeUpload(bool value=true) throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice & setBlockModeUpload(bool value=true) noexcept(false);
 
     bool isStarted();
   private:
@@ -2338,35 +2338,35 @@ namespace Fed9U {
     /**
      * Loads the complete set of APV complement flags.
      */
-    Fed9UVmeDevice& setAllComplements() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllComplements() noexcept(false);
 
     /**
      * Loads the complete set of Trim DAC offsets.
      */
-    Fed9UVmeDevice& setAllTrimDacOffsets() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllTrimDacOffsets() noexcept(false);
 
     /**
      * Loads the all the strip data for a FED.
      *
      * It loads the pedestal values, the cluster thresholds and the number of valid channels.
      */
-    Fed9UVmeDevice& setAllStripData() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllStripData() noexcept(false);
 
     /**
      * Loads the complete set of ADC settings from the FED.
      */
-    Fed9UVmeDevice& setAllAdcControls() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllAdcControls() noexcept(false);
 
     /**
      * Loads the complete set of APV disable settings from theLocalFedSettings
      * to the FED.
      */
-    Fed9UVmeDevice& setAllApvDisable() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& setAllApvDisable() noexcept(false);
 
     /**
      * Disable all APVs.
      */
-    Fed9UVmeDevice& disableAllApvs() throw (Fed9UVmeDeviceException);
+    Fed9UVmeDevice& disableAllApvs() noexcept(false);
 
     /**
      * This is used to compare two floating point numbers to see if they are equivalent.
@@ -2553,7 +2553,7 @@ namespace Fed9U {
      *
      * Removes any existing events from the buffer but does not return the number purged. This is a fast and hard core purge method!
      */
-    u32 purgeEvents() throw (Fed9UVmeDeviceException);
+    u32 purgeEvents() noexcept(false);
     
     // <NAC date="30/04/2009"> readout of complete spy events packed with header and trailer
     // <NAC date="15/02/2010"> added 1/N mode
@@ -2570,7 +2570,7 @@ namespace Fed9U {
                                                  const uint32_t runNumber = 0,
                                                  const bool allowMixedEvent = false,
                                                  u32* pEventCountBeforeRead = NULL, u32* pL1ACountBeforeRead = NULL,
-                                                 const bool oneOverNMode = false) throw (Fed9UDeviceException);
+                                                 const bool oneOverNMode = false) noexcept(false);
     // </NAC>
     // </NAC>
     // </NAC>
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/src/Fed9UDevice.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/src/Fed9UDevice.cc
index 92a93e8..243d3c4 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/src/Fed9UDevice.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDevice/src/Fed9UDevice.cc
@@ -865,7 +865,7 @@ namespace Fed9U {
     return static_cast<u16>(mean);
   }
   
-  u32 Fed9UDevice::purgeEvents() throw (Fed9UVmeDeviceException) {
+  u32 Fed9UDevice::purgeEvents() noexcept(false) {
      cout << "Entering Fed9UDevice::PurgeEvents() in FED ID : " << getFedId() << endl;
      try {
       std::ostringstream mess;
@@ -942,7 +942,7 @@ namespace Fed9U {
   boost::shared_array<u8> Fed9UDevice::readCompleteSpyEvent(const std::vector<bool>& delayChipsEnabled, const u32 lvl1ID, const uint32_t runNumber, 
                                                             const bool allowMixedEvent,
                                                             u32* pEventCountBeforeRead, u32* pL1ACountBeforeRead,
-                                                            const bool oneOverNMode) throw (Fed9UDeviceException)
+                                                            const bool oneOverNMode) noexcept(false)
   // </NAC>
   // </NAC>
   {
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDescriptionToXmlToDb.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDescriptionToXmlToDb.hh
index c656e27..22836fb 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDescriptionToXmlToDb.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDescriptionToXmlToDb.hh
@@ -35,10 +35,10 @@ namespace Fed9U {
   public:
     /**Constructor takes a reference to the Fed9UDescription to be uploaded, also the DbFedAccess which is the accessor to the database, the IP of the supervisor making the upload. */
     Fed9UDescriptionToXmlToDb(Fed9UDescription &Fed9UDescriptionToWrite, 
-			      DbFedAccess * dbFedAccess) throw (Fed9UXMLDescriptionException);
+			      DbFedAccess * dbFedAccess) noexcept(false);
 
     Fed9UDescriptionToXmlToDb(std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite, 
-			      DbFedAccess * dbFedAccess ) throw (Fed9UXMLDescriptionException);
+			      DbFedAccess * dbFedAccess ) noexcept(false);
 
     /**Method which writes the XML to the db. */
     void upload(u16,u16, std::string partition="null");
@@ -52,14 +52,14 @@ namespace Fed9U {
    
   private:
     /**Method which constructs the DOM document.*/
-    virtual void constuctDOMDocument(void) throw(Fed9U::Fed9UXMLDescriptionException);
+    virtual void constuctDOMDocument(void) noexcept(false);
 
     /**Method which streams out the fast style description to a stream pointer
      * this is only required for the database upload so is implemented in this derived class
      */
-    void streamOutFastDescription(std::string * buf) throw(Fed9U::Fed9UXMLDescriptionException);
+    void streamOutFastDescription(std::string * buf) noexcept(false);
 
-    virtual void addDOMElements(xercesc::DOMElement *rootElement) throw (Fed9UXMLDescriptionException);
+    virtual void addDOMElements(xercesc::DOMElement *rootElement) noexcept(false);
 
     DbFedAccess*  dbFedAccess_;
       
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactory.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactory.hh
index b782b09..eb4f6be 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactory.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactory.hh
@@ -89,22 +89,22 @@ namespace Fed9U {
     
     /** \brief Build a FED factory
      */
-    Fed9UDeviceFactory ( ) throw ();
+    Fed9UDeviceFactory ( ) noexcept;
 
     /* depricated
      * this method should be removed when all code that uses it has been updated.
      */
-    Fed9UDeviceFactory ( std::string filename ) throw ();
+    Fed9UDeviceFactory ( std::string filename ) noexcept;
 
 #ifdef DATABASE
     /* This method is used by the DeviceFactory (FD/2006-12-19)
      */
-    Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false ) throw ();
+    Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false ) noexcept;
     
     /** \brief Build a FED factory for FED database
      */
     Fed9UDeviceFactory ( DbFedAccess *dbFedAccess )
-      throw () ;
+      noexcept ;
 #endif
     
     /** \brief Disconnect the database (if it is set)
@@ -121,72 +121,72 @@ namespace Fed9U {
     
     /** \brief set instance
      */
-    //    void setInstance( u16 instance ) throw (  )  ;
+    //    void setInstance( u16 instance ) noexcept(false)  ;
     
     /** \brief Add a new file name in the descriptions
      */
-    void addFileName ( std::string fileName ) throw ( Fed9UDeviceFactoryException ) ;
+    void addFileName ( std::string fileName ) noexcept(false) ;
 
     /** \brief Add a new file name after deleting all current files in hash map
      */
-    void setInputFileName ( std::string fileName ) throw ( Fed9UDeviceFactoryException ) ;
+    void setInputFileName ( std::string fileName ) noexcept(false) ;
 
     /** \brief delete all current descriptions in hash map and description list
      */
-    void clearDescriptions ( ) throw ( Fed9UDeviceFactoryException ) ;
+    void clearDescriptions ( ) noexcept(false) ;
     
 #ifdef DATABASE
     /** \brief Set a database access
      */
     void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
 
     void setDatabaseAccess ( ) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
     
     /** \brief Set the database access
      */
     void setDatabaseAccess ( DbFedAccess *dbFedAccess) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
     
-    DbFedAccess * getDatabaseAccess ( ) throw ();
+    DbFedAccess * getDatabaseAccess ( ) noexcept;
   
 #endif
     
 
     /** \brief Retreive all Fed descriptions for one partition.
      */
-    std::vector<Fed9UDescription*>* getFed9UDescriptions(std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    std::vector<Fed9UDescription*>* getFed9UDescriptions(std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
 
     /** \brief Retreive information for a given FED / version
      */
-    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
 
     /** \brief Retreive information for a given FED / version
      */
-    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
     
     /** \brief Set the vector of FED descriptions into the output
      */
-    Fed9UDeviceFactory & setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
 
     /** \brief Set the FED description into the output
      */
-    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
 
     /** \brief Set the FED description into the output and for DATABASE we can specify the partition
      */
-    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
     
     
     /** \brief Set a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
      */
     Fed9UDeviceFactory & setUsingStrips(bool usingStrips) 
-    throw () ;
+    noexcept ;
     
     /** \brief Get a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
      */
-    bool getUsingStrips() throw ();
+    bool getUsingStrips() noexcept;
 
     /**
      * \brief  Whether to write the strip data as a binary data chunk with a single XML tag for all strips or to write each bit of individual strip data
@@ -205,7 +205,7 @@ namespace Fed9U {
    /** Method to set the value of debugOutput_. If this is set to true the the buffer will be displayed to standard output for debugging */
     void setDebugOutput(bool value=true);
 
-    bool getUsingDb() throw () { 
+    bool getUsingDb() noexcept { 
 #ifdef DATABASE    
       return useDatabase_; 
 #else
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactoryLib.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactoryLib.hh
index 13e0f86..e10e1f1 100644
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactoryLib.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/include/Fed9UDeviceFactoryLib.hh
@@ -114,10 +114,10 @@ namespace Fed9U {
   public:
     /**Constructor takes a reference to the Fed9UDescription to be uploaded, also the DbFedAccess which is the accessor to the database, the IP of the supervisor making the upload. */
     Fed9UDescriptionToXmlToDb(Fed9UDescription &Fed9UDescriptionToWrite, 
-			      DbFedAccess * dbFedAccess) throw (Fed9UXMLDescriptionException);
+			      DbFedAccess * dbFedAccess) noexcept(false);
 
     Fed9UDescriptionToXmlToDb(std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite, 
-			      DbFedAccess * dbFedAccess ) throw (Fed9UXMLDescriptionException);
+			      DbFedAccess * dbFedAccess ) noexcept(false);
 
     /**Method which writes the XML to the db. */
     void upload(u16,u16, std::string partition="null");
@@ -131,14 +131,14 @@ namespace Fed9U {
    
   private:
     /**Method which constructs the DOM document.*/
-    virtual void constuctDOMDocument(void) throw(Fed9U::Fed9UXMLDescriptionException);
+    virtual void constuctDOMDocument(void) noexcept(false);
 
     /**Method which streams out the fast style description to a stream pointer
      * this is only required for the database upload so is implemented in this derived class
      */
-    void streamOutFastDescription(std::string * buf) throw(Fed9U::Fed9UXMLDescriptionException);
+    void streamOutFastDescription(std::string * buf) noexcept(false);
 
-    virtual void addDOMElements(xercesc::DOMElement *rootElement) throw (Fed9UXMLDescriptionException);
+    virtual void addDOMElements(xercesc::DOMElement *rootElement) noexcept(false);
 
     DbFedAccess*  dbFedAccess_;
       
@@ -278,22 +278,22 @@ namespace Fed9U {
     
     /** \brief Build a FED factory
      */
-    Fed9UDeviceFactory ( ) throw ();
+    Fed9UDeviceFactory ( ) noexcept;
 
     /* depricated
      * this method should be removed when all code that uses it has been updated.
      */
-    Fed9UDeviceFactory ( std::string filename ) throw ();
+    Fed9UDeviceFactory ( std::string filename ) noexcept;
 
 #ifdef DATABASE
     /* This method is used by the DeviceFactory (FD/2006-12-19)
      */
-    Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false ) throw ();
+    Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded = false ) noexcept;
     
     /** \brief Build a FED factory for FED database
      */
     Fed9UDeviceFactory ( DbFedAccess *dbFedAccess )
-      throw () ;
+      noexcept ;
 #endif
     
     /** \brief Disconnect the database (if it is set)
@@ -310,72 +310,72 @@ namespace Fed9U {
     
     /** \brief set instance
      */
-    //    void setInstance( u16 instance ) throw (  )  ;
+    //    void setInstance( u16 instance ) noexcept(false)  ;
     
     /** \brief Add a new file name in the descriptions
      */
-    void addFileName ( std::string fileName ) throw ( Fed9UDeviceFactoryException ) ;
+    void addFileName ( std::string fileName ) noexcept(false) ;
 
     /** \brief Add a new file name after deleting all current files in hash map
      */
-    void setInputFileName ( std::string fileName ) throw ( Fed9UDeviceFactoryException ) ;
+    void setInputFileName ( std::string fileName ) noexcept(false) ;
 
     /** \brief delete all current descriptions in hash map and description list
      */
-    void clearDescriptions ( ) throw ( Fed9UDeviceFactoryException ) ;
+    void clearDescriptions ( ) noexcept(false) ;
     
 #ifdef DATABASE
     /** \brief Set a database access
      */
     void setDatabaseAccess ( std::string login, std::string password, std::string path ) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
 
     void setDatabaseAccess ( ) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
     
     /** \brief Set the database access
      */
     void setDatabaseAccess ( DbFedAccess *dbFedAccess) 
-      throw ( std::exception ) ;
+      noexcept(false) ;
     
-    DbFedAccess * getDatabaseAccess ( ) throw ();
+    DbFedAccess * getDatabaseAccess ( ) noexcept;
   
 #endif
     
 
     /** \brief Retreive all Fed descriptions for one partition.
      */
-    std::vector<Fed9UDescription*>* getFed9UDescriptions(std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    std::vector<Fed9UDescription*>* getFed9UDescriptions(std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
 
     /** \brief Retreive information for a given FED / version
      */
-    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, std::string partition, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
 
     /** \brief Retreive information for a given FED / version
      */
-    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDescription getFed9UDescription(i16 fedId, bool hardwareID, i16 major = -1, i16 minor = -1, int maskMajor = 0, int maskMinor = 0) noexcept(false) ;
     
     /** \brief Set the vector of FED descriptions into the output
      */
-    Fed9UDeviceFactory & setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
 
     /** \brief Set the FED description into the output
      */
-    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
 
     /** \brief Set the FED description into the output and for DATABASE we can specify the partition
      */
-    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) throw (Fed9UDeviceFactoryException) ;
+    Fed9UDeviceFactory & setFed9UDescription(Fed9UDescription & f, std::string partition, u16 *versionMajor = NULL, u16 *versionMinor = NULL , int majVersion = 0) noexcept(false) ;
     
     
     /** \brief Set a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
      */
     Fed9UDeviceFactory & setUsingStrips(bool usingStrips) 
-    throw () ;
+    noexcept ;
     
     /** \brief Get a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
      */
-    bool getUsingStrips() throw ();
+    bool getUsingStrips() noexcept;
 
     /**
      * \brief  Whether to write the strip data as a binary data chunk with a single XML tag for all strips or to write each bit of individual strip data
@@ -394,7 +394,7 @@ namespace Fed9U {
    /** Method to set the value of debugOutput_. If this is set to true the the buffer will be displayed to standard output for debugging */
     void setDebugOutput(bool value=true);
 
-    bool getUsingDb() throw () { 
+    bool getUsingDb() noexcept { 
 #ifdef DATABASE    
       return useDatabase_; 
 #else
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDescriptionToXmlToDb.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDescriptionToXmlToDb.cc
index 2abc213..32ff3e9 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDescriptionToXmlToDb.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDescriptionToXmlToDb.cc
@@ -66,14 +66,14 @@ namespace Fed9U {
 //This constructor takes the file name of the XML file to be written, and a reference to the 
 //Fed9UDescription from which to make the XML file.
   Fed9UDescriptionToXmlToDb::Fed9UDescriptionToXmlToDb(Fed9UDescription &Fed9UDescriptionToWrite, 
-						       DbFedAccess * dbFedAccess) throw (Fed9UXMLDescriptionException) : Fed9UDescriptionToXml(Fed9UDescriptionToWrite),
+						       DbFedAccess * dbFedAccess) noexcept(false) : Fed9UDescriptionToXml(Fed9UDescriptionToWrite),
 										    dbFedAccess_(dbFedAccess) {
     
   }
 
   
   Fed9UDescriptionToXmlToDb::Fed9UDescriptionToXmlToDb(std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite, 
-						       DbFedAccess * dbFedAccess ) throw (Fed9UXMLDescriptionException) : Fed9UDescriptionToXml( Fed9UDescriptionsToWrite ), 
+						       DbFedAccess * dbFedAccess ) noexcept(false) : Fed9UDescriptionToXml( Fed9UDescriptionsToWrite ), 
 															  dbFedAccess_(dbFedAccess) {
 															  
     
@@ -172,7 +172,7 @@ namespace Fed9U {
     }
   }
 
-  void Fed9UDescriptionToXmlToDb::streamOutFastDescription(std::string * buf) throw(Fed9U::Fed9UXMLDescriptionException) {
+  void Fed9UDescriptionToXmlToDb::streamOutFastDescription(std::string * buf) noexcept(false) {
     try {
       std::stringstream tempBuf0, tempBuf1,  tempBuf2, tempBuf3, tempBuf4, tempBuf5, tempBuf6, tempBuf7;
       
@@ -508,7 +508,7 @@ namespace Fed9U {
   }
 
   /**Method which constructs the DOM document.*/
-  void Fed9UDescriptionToXmlToDb::constuctDOMDocument(void) throw(Fed9U::Fed9UXMLDescriptionException){
+  void Fed9UDescriptionToXmlToDb::constuctDOMDocument(void) noexcept(false){
        //Get a DOM Core implementation.
     xercesc::DOMImplementation* impl =  xercesc::DOMImplementationRegistry::getDOMImplementation(X("Core"));
 
@@ -561,7 +561,7 @@ namespace Fed9U {
   //***************************************************************************************************
   //Method which adds elements to a DOMDocument using the Fed9UDescription to get the attribute values.
   // this method has been overridden so that we can write the strips in a different way for the database
-  void Fed9UDescriptionToXmlToDb::addDOMElements(xercesc::DOMElement *rootElement) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXmlToDb::addDOMElements(xercesc::DOMElement *rootElement) noexcept(false)
   {
     //    xercesc::DOMElement* rootElement = doc->getDocumentElement();
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDeviceFactory.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDeviceFactory.cc
index afac846..d6737af 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDeviceFactory.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UDeviceFactory/src/Fed9UDeviceFactory.cc
@@ -39,7 +39,7 @@ namespace Fed9U {
    */
 
   Fed9UDeviceFactory::Fed9UDeviceFactory ( ) 
-    throw () : DeviceFactoryInterface () , partition_("null"), debugOutput_(false) {
+    noexcept : DeviceFactoryInterface () , partition_("null"), debugOutput_(false) {
 
     // create the empty vector on the heap, this class owns the vector so we must delete it in the destructor
     // we need this vector whether we are using DB or not
@@ -73,7 +73,7 @@ namespace Fed9U {
 
 #ifdef DATABASE
 
-  Fed9UDeviceFactory::Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded ) throw (): DeviceFactoryInterface ( login, password, path, threaded ) , partition_("null"), debugOutput_(false){
+  Fed9UDeviceFactory::Fed9UDeviceFactory ( std::string login, std::string password, std::string path, bool threaded ) noexcept: DeviceFactoryInterface ( login, password, path, threaded ) , partition_("null"), debugOutput_(false){
     try {
       // initially we set using strips to true, if the user wants to ignore strips he must explicity set it to false
       setUsingStrips ( true );
@@ -101,7 +101,7 @@ namespace Fed9U {
   /* deprecated
    * this method should be removed when all code that uses it has been updated.
    */
-  Fed9UDeviceFactory::Fed9UDeviceFactory ( std::string filename )  throw () : partition_("null") , debugOutput_(false)
+  Fed9UDeviceFactory::Fed9UDeviceFactory ( std::string filename )  noexcept : partition_("null") , debugOutput_(false)
   {
     std::stringstream errorOut;
     errorOut << "This method is deprocated please do not use.!!!" << filename << std::endl;
@@ -111,7 +111,7 @@ namespace Fed9U {
   /** Create an access to the FED database
    * \param dbFedAccess - database access
    */
-  Fed9UDeviceFactory::Fed9UDeviceFactory (DbFedAccess *dbFedAccess ) throw () : DeviceFactoryInterface ( dbFedAccess ), partition_("null"), debugOutput_(false){
+  Fed9UDeviceFactory::Fed9UDeviceFactory (DbFedAccess *dbFedAccess ) noexcept : DeviceFactoryInterface ( dbFedAccess ), partition_("null"), debugOutput_(false){
     try {   
       // initially we set using strips to true, if the user wants to ignore strips he must explicity set it to false
       setUsingStrips ( true );
@@ -167,7 +167,7 @@ namespace Fed9U {
     }
   }
   
-  void Fed9UDeviceFactory::clearDescriptions ( ) throw ( Fed9UDeviceFactoryException ) {
+  void Fed9UDeviceFactory::clearDescriptions ( ) noexcept(false) {
     for (Fed9UHashMapType::iterator p=fed9UDescriptions_.begin();p!=fed9UDescriptions_.end();p++)
 	delete p->second ;
     if (fed9UDescriptionList_ != NULL) {
@@ -184,7 +184,7 @@ namespace Fed9U {
   /** Set a file as the new input, same method than addFileName but the previous devices and pia are deleted
    * \param inputFileName - new input file
    */
-  void Fed9UDeviceFactory::setInputFileName ( std::string inputFileName ) throw ( Fed9UDeviceFactoryException ) {
+  void Fed9UDeviceFactory::setInputFileName ( std::string inputFileName ) noexcept(false) {
     try {
       // Remove all the FED description from the hash_map
       for (Fed9UHashMapType::iterator p=fed9UDescriptions_.begin();p!=fed9UDescriptions_.end();p++)
@@ -201,7 +201,7 @@ namespace Fed9U {
   /** Add a new file name and parse it to retreive the information needed
    * \param fileName - name of the XML file
    */
-  void Fed9UDeviceFactory::addFileName ( std::string fileName ) throw ( Fed9UDeviceFactoryException ) {
+  void Fed9UDeviceFactory::addFileName ( std::string fileName ) noexcept(false) {
     try {
       // Parse the file and create a FED description
       // Then add the description to the hash map
@@ -236,7 +236,7 @@ namespace Fed9U {
    * \warning in the destructor of Fed9UDeviceFactory, the dbFedAccess is deleted
    */
   void Fed9UDeviceFactory::setDatabaseAccess ( std::string login, std::string password, std::string path) 
-    throw ( std::exception )
+    noexcept(false)
   {
     
     // For FED database
@@ -270,12 +270,12 @@ namespace Fed9U {
    * \warning if this method is used, the access to the database must be deleted by the owner/creator of the dbAccess_
    */
   void Fed9UDeviceFactory::setDatabaseAccess ( DbFedAccess *dbFedAccess )
-    throw ( std::exception ) {
+    noexcept(false) {
     DeviceFactoryInterface::setDatabaseAccess ((DbAccess *)dbFedAccess) ; 
   }
 
   void Fed9UDeviceFactory::setDatabaseAccess ()
-    throw( std::exception ) {
+    noexcept(false) {
     std::string login="null", passwd="null", path="null" ;
     DbFedAccess::getDbConfiguration (login, passwd, path) ;
     std::cout << "got the configuration from dbFedAccess in " << login << "/" << passwd << "@" << path << "..." << std::endl;
@@ -287,14 +287,14 @@ namespace Fed9U {
   /**
    * \return FED database access, can be null
    */
-  DbFedAccess * Fed9UDeviceFactory::getDatabaseAccess ( ) throw (){
+  DbFedAccess * Fed9UDeviceFactory::getDatabaseAccess ( ) noexcept{
     return reinterpret_cast<DbFedAccess *>(dbAccess_) ;
   }
 
 #endif
   /** Get all descriptions for one partition. you can specify version if you like
    */
-  std::vector<Fed9UDescription*>* Fed9UDeviceFactory::getFed9UDescriptions(std::string partition, i16 major, i16 minor, int maskMajor, int maskMinor) throw (Fed9UDeviceFactoryException) {
+  std::vector<Fed9UDescription*>* Fed9UDeviceFactory::getFed9UDescriptions(std::string partition, i16 major, i16 minor, int maskMajor, int maskMinor) noexcept(false) {
     // here we must download all descriptions for one partition, this is handled by FedXMLDescriptionFromDb and we retrieve a vector of descriptions.
     if (useDatabase_) {
       if (fed9UDescriptionList_ != NULL) {
@@ -315,7 +315,7 @@ namespace Fed9U {
 
   /** Retreive information for the FED from a specific partition
    */
-  Fed9UDescription Fed9UDeviceFactory::getFed9UDescription ( i16 fedId, bool hardwareId, std::string partition, i16 versionMajor, i16 versionMinor, int maskMajor, int maskMinor ) throw ( Fed9UDeviceFactoryException )  {
+  Fed9UDescription Fed9UDeviceFactory::getFed9UDescription ( i16 fedId, bool hardwareId, std::string partition, i16 versionMajor, i16 versionMinor, int maskMajor, int maskMinor ) noexcept(false)  {
     partition_=partition;
     return getFed9UDescription ( fedId, hardwareId, versionMajor, versionMinor, maskMajor, maskMinor );
     partition_="null";
@@ -324,7 +324,7 @@ namespace Fed9U {
 
   /** Retreive information for the FED
    */
-  Fed9UDescription Fed9UDeviceFactory::getFed9UDescription ( i16 fedId, bool hardwareId, i16 versionMajor, i16 versionMinor, int maskMajor, int maskMinor ) throw ( Fed9UDeviceFactoryException )  {
+  Fed9UDescription Fed9UDeviceFactory::getFed9UDescription ( i16 fedId, bool hardwareId, i16 versionMajor, i16 versionMinor, int maskMajor, int maskMinor ) noexcept(false)  {
     if (debugOutput_)
       std::cout << " about to create description " << std::endl;
     Fed9UDescription fed9UDescription ;
@@ -391,7 +391,7 @@ namespace Fed9U {
      * \param vector<Fed9UDescription*> & - reference to vector of descriptions of the FED to be uploaded
      * \param partition - the partition into which to upload the description
      */
-  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor , u16 *versionMinor , int updateVersion ) throw (Fed9UDeviceFactoryException) {
+  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescriptions(std::vector<Fed9UDescription*>  f, std::string partition, u16 *versionMajor , u16 *versionMinor , int updateVersion ) noexcept(false) {
     partition_ = partition;
 
     
@@ -479,7 +479,7 @@ namespace Fed9U {
    * \param Fed9UDescription - description of the FED to be uploaded
    * \param partition - the partition into which to upload the description
    */
-  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescription(Fed9UDescription & descriptionToUpload, std::string partition, u16 *versionMajor, u16 *versionMinor, int updateVersion ) throw (Fed9UDeviceFactoryException) {
+  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescription(Fed9UDescription & descriptionToUpload, std::string partition, u16 *versionMajor, u16 *versionMinor, int updateVersion ) noexcept(false) {
     partition_ = partition;
     setFed9UDescription(descriptionToUpload, versionMajor, versionMinor, updateVersion );
     partition_ = "null";
@@ -489,7 +489,7 @@ namespace Fed9U {
   /** Upload a FED9UDescription into the database or a file
    * \param Fed9UDescription - description of the FED to be uploaded
    */
-  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescription(Fed9UDescription & descriptionToUpload, u16 *versionMajor, u16 *versionMinor, int updateVersion ) throw (Fed9UDeviceFactoryException)
+  Fed9UDeviceFactory & Fed9UDeviceFactory::setFed9UDescription(Fed9UDescription & descriptionToUpload, u16 *versionMajor, u16 *versionMinor, int updateVersion ) noexcept(false)
        {
 
     ICUTILS_VERIFYX ( versionMajor != NULL && versionMinor != NULL , Fed9UDeviceFactoryException).code(Fed9UDeviceFactoryException::ERROR_NULL_POINTER).error(); 
@@ -571,14 +571,14 @@ namespace Fed9U {
   /**Set a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
    */
   Fed9UDeviceFactory & Fed9UDeviceFactory::setUsingStrips(bool usingStrips) 
-    throw () {
+    noexcept {
     usingStrips_ = usingStrips;
     return * this;
   }
   
   /**Get a flag which informs the fedDeviceFactory if we are to upload and download Strips, if this is set to false then no strips are uploaded or downloaded.
    */
-  bool Fed9UDeviceFactory::getUsingStrips() throw () {
+  bool Fed9UDeviceFactory::getUsingStrips() noexcept {
     return usingStrips_;
   }
 
@@ -600,7 +600,7 @@ namespace Fed9U {
 
   /** \brief set instance
    */
-  //  void Fed9UDeviceFactory::setInstance( u16 instance) throw ( ) {
+  //  void Fed9UDeviceFactory::setInstance( u16 instance) noexcept {
   //  instance_ = instance;
   //}
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorProcRaw.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorProcRaw.hh
index ad46ad6..2c74fc9 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorProcRaw.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorProcRaw.hh
@@ -28,7 +28,7 @@ namespace Fed9U {
      *
      * In processed raw data mode the FED will perform strip reodering and pedestal subtraction.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
 
   private:
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorRaw.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorRaw.hh
index 09913e1..22777b5 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorRaw.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorRaw.hh
@@ -32,7 +32,7 @@ namespace Fed9U {
      *
      * In virgin raw data mode the data is left untouch and is exactly as it comes from the FED.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
     
   private:
   
@@ -44,7 +44,7 @@ namespace Fed9U {
      *
      * \todo - method very inefficient. Improve!
      */
-    void disOrderData(std::vector<unsigned short> &bufferData) const throw (ICException);
+    void disOrderData(std::vector<unsigned short> &bufferData) const noexcept(false);
       
     Fed9UEventInfo mFed9UEventInfo; //!< See the Fed9UEventInfo documentation for more information about this class.
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorScopeMode.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorScopeMode.hh
index a11d657..6e5c259 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorScopeMode.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorScopeMode.hh
@@ -34,7 +34,7 @@ namespace Fed9U {
      *
      * In scope mode the full APV frames are recorded upon receipt of a trigger. A scope lengths worth of 23 bit words of the frame is recorded.
      */
-    void generateBuffer( Fed9UBufferDescription *bufDesc ) throw (ICException);
+    void generateBuffer( Fed9UBufferDescription *bufDesc ) noexcept(false);
     
   private:
     
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorZS.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorZS.hh
index 6a03a61..5f37860 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorZS.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferCreatorZS.hh
@@ -32,7 +32,7 @@ namespace Fed9U {
      *
      * In zero suppression mode full data processing is performed. Strip re-odering, pedestal subtraction, common mode median subtraction and cluster finding.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
 
   private:
 
@@ -48,7 +48,7 @@ namespace Fed9U {
      */
     void findDataLengths(const std::vector<unsigned short> &bufferData, 
 			 std::vector<unsigned short> &feLengths, 
-			 std::vector<unsigned short> &channelLengths) throw (ICException);
+			 std::vector<unsigned short> &channelLengths) noexcept(false);
       
     Fed9UEventInfo mFed9UEventInfo; //!< See the Fed9UEventInfo documentation for more information about this class.
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferData.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferData.hh
index 5baaa0b..1cad2ef 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferData.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferData.hh
@@ -33,7 +33,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9URawData(Fed9UBufferDescription *bufDesc ) throw (ICException);
+    void generateFed9URawData(Fed9UBufferDescription *bufDesc ) noexcept(false);
 
     /**
      * \brief Method which puts channel data in the Fed9U data buffer in a zero suppressed DAQ format.
@@ -42,7 +42,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9UZSData(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateFed9UZSData(Fed9UBufferDescription *bufDesc) noexcept(false);
 
     /**
      * \brief Method which puts channel data in the Fed9U data buffer in a scope mode DAQ format.
@@ -53,7 +53,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9UScopeModeData( Fed9UBufferDescription *bufDesc, unsigned short scope_mode_length ) throw (ICException);
+    void generateFed9UScopeModeData( Fed9UBufferDescription *bufDesc, unsigned short scope_mode_length ) noexcept(false);
 
   private:
     /**
@@ -64,7 +64,7 @@ namespace Fed9U {
      *
      * The ends of the FE data blocks in the FED buffer are padded out with zeros until the start of the next 64-bit words.
      */
-    void paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) throw (ICException);
+    void paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) noexcept(false);
 
     Fed9UEventInfo mFed9UEventInfo; //!< See Fed9UEventInfo for more details on this class.
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferDescription.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferDescription.hh
index 28f3737..6a84938 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferDescription.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferDescription.hh
@@ -153,7 +153,7 @@ namespace Fed9U {
      * \param  bufferData Each element contains the reading from a strip, there must be one element for each strip on a FED. Size:24,576.
      * \return Self reference
      */
-    Fed9UBufferDescription & setFed9UBufferData(const std::vector<unsigned short> &bufferData) throw (ICException);
+    Fed9UBufferDescription & setFed9UBufferData(const std::vector<unsigned short> &bufferData) noexcept(false);
 
     /**
      * \brief  Method to set the channel length vector.
@@ -161,7 +161,7 @@ namespace Fed9U {
      *         on the FED. Size:96.
      * \return Self reference
      */
-    Fed9UBufferDescription & setChannelLengths(const std::vector<unsigned short> &channelLengths) throw (ICException);
+    Fed9UBufferDescription & setChannelLengths(const std::vector<unsigned short> &channelLengths) noexcept(false);
 
     /**
      * \brief  Method to set the FE length vector.
@@ -169,7 +169,7 @@ namespace Fed9U {
      *         FE unit on the FED. Size:8.
      * \return Self reference
      */
-    Fed9UBufferDescription & setFeLengths(const std::vector<unsigned short> &feLengths) throw (ICException);
+    Fed9UBufferDescription & setFeLengths(const std::vector<unsigned short> &feLengths) noexcept(false);
 
     /**
      * \brief  Method to set the packet code.
@@ -185,7 +185,7 @@ namespace Fed9U {
      * \param  cmMedians Common mode median value recorded by each APV. There must be one element for each APV on the FED. Size:192.
      * \return Self reference
      */
-    Fed9UBufferDescription & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICException);
+    Fed9UBufferDescription & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false);
 
    /**
      * \brief  Method to 32-bit swap data into slink format. Should only be performed AFTER buffer generation.
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferGenerator.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferGenerator.hh
index 1d96890..34aecb7 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferGenerator.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferGenerator.hh
@@ -39,7 +39,7 @@ namespace Fed9U {
      * The first element of the vector corresponds to strip 1, channel 96 in the external numbering or strip 0 or channel 0 internal numbering.
      * The strip order should then follow in physical strip ordering and not APV-MUX order.
      */
-    void generateFed9UBuffer(const std::vector<unsigned short> &bufferData) throw (ICUtils::ICException);
+    void generateFed9UBuffer(const std::vector<unsigned short> &bufferData) noexcept(false);
 
     /**
      * \name Buffer getters.
@@ -52,14 +52,14 @@ namespace Fed9U {
      * \param fedBuffer Area to copy memory to.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    void getBuffer(unsigned int *fedBuffer) const throw (ICUtils::ICException);
+    void getBuffer(unsigned int *fedBuffer) const noexcept(false);
 
     /**
      * \brief  Method to return copy of Fed9U buffer.
      * \return vector<unsigned char> A vector containing a copy of all the data in the internal buffer.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    std::vector<unsigned char> getBuffer() throw (ICUtils::ICException);
+    std::vector<unsigned char> getBuffer() noexcept(false);
     //@}
 
     /**
@@ -73,14 +73,14 @@ namespace Fed9U {
      * \return unsigned long Number of 32-bit words in the buffer.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    unsigned long getBufferSize(void) const throw (ICUtils::ICException);
+    unsigned long getBufferSize(void) const noexcept(false);
 
     /**
      * \brief  Method to get the bunch crossing number.
      * \return unsigned long Bunch crossing number for which the event was recorded.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    unsigned long getBunchCrossing(void) const throw (ICUtils::ICException);
+    unsigned long getBunchCrossing(void) const noexcept(false);
 
     //@}
 
@@ -97,7 +97,7 @@ namespace Fed9U {
      * \return Self reference.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    Fed9UBufferGenerator & setBunchCrossing(unsigned long bunchCrossing) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setBunchCrossing(unsigned long bunchCrossing) noexcept(false);
 
     /**
      * \brief  Method to set the tracker header to full debug mode.
@@ -107,7 +107,7 @@ namespace Fed9U {
      * The method provides no way to undo this once it has been done. The default mode for an event buffer is APV error mode
      * and no change should be made if this mode is required.
      */
-    Fed9UBufferGenerator & setHeaderToFullDebug(void) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setHeaderToFullDebug(void) noexcept(false);
 
     /**
      * \brief  Method to set the buffer creator pointer. This allows the user to change mode between generating events.
@@ -124,9 +124,9 @@ namespace Fed9U {
      *         a base of zero. Size:192.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    Fed9UBufferGenerator & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false);
 
-    Fed9UBufferGenerator & setSlink64() throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setSlink64() noexcept(false);
 
     //@}
  
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferHeader.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferHeader.hh
index 4049089..f31b2af 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferHeader.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferHeader.hh
@@ -29,7 +29,7 @@ namespace Fed9U {
      *
      * This is 8 bytes, which contains the bunch crossing number and FED mode.
      */
-    void generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
     /**
      * \brief This constructs the Fed9U Tracker Special DAQ header in the 2nd 64-bit word of the Fed9U buffer.
@@ -38,7 +38,7 @@ namespace Fed9U {
      *
      * This is another 8 bytes which contain FED debug information.
      */
-    void generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
     /**
      * \brief This adds the FE header information to the Fed9U buffer. 
@@ -49,7 +49,7 @@ namespace Fed9U {
      * the 8 FE lengths in bytes for all channel info for that FE (including channel header and packet code).
      * They do not include the length of the FE header itself.
      */
-    void generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
   private:
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferTrailer.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferTrailer.hh
index 3e178de..3758046 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferTrailer.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UBufferTrailer.hh
@@ -25,7 +25,7 @@ namespace Fed9U {
      * \param theBufDesc Pointer to the buffer description that is to be updated.
      * \throw ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    void generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) throw (ICException);
+    void generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
   };
 
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXml.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXml.hh
index 45c81a6..16a9060 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXml.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXml.hh
@@ -55,7 +55,7 @@ namespace Fed9U {
      *
      * This constructor can be used to directly create an XML file.
      */
-    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. Takes a Fed9UDescription object to write to the database.
@@ -67,7 +67,7 @@ namespace Fed9U {
      *
      * As no file name is set during construction this cannot be used to make an XML file directly and is for use with the database.
      */
-    Fed9UDescriptionToXml(Fed9UDescription &Fed9UDescriptionToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(Fed9UDescription &Fed9UDescriptionToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. This takes a vector of Fed9UDescription pointers from which to make the XML file.
@@ -82,7 +82,7 @@ namespace Fed9U {
      * All the Fed9UDescription objects pointed to by the elements of the Fed9UDescription vector will be written to the single file specified
      * by targetXMLFileName. Sufficient information is given to this constructor to produce an XML file.
      */
-    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. This takes a vector of Fed9UDescription pointers to write to the database.
@@ -96,7 +96,7 @@ namespace Fed9U {
      * Insufficient information is passed to the constructor to create an XML file, no file name is given. It is instead used to writing the  
      * to the database. All objects pointed to by the Fed9UDescription vector will be written to the database.
      */
-    Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Destructor.
@@ -113,7 +113,7 @@ namespace Fed9U {
      *
      * This must be called after using the constructor to this class which only takes in a reference to a Fed9UDescription and not an XML file name.
      */
-    void streamOutDescription(std::ostream * os) throw (Fed9UXMLDescriptionException);
+    void streamOutDescription(std::ostream * os) noexcept(false);
 
     /**
      * \brief Method which converts the Fed9UDescription to an XML file.
@@ -122,7 +122,7 @@ namespace Fed9U {
      *
      * This must be called after using the file based constructor to this class.
      */
-    void writeXmlFile(void) throw (Fed9UXMLDescriptionException);
+    void writeXmlFile(void) noexcept(false);
 
     /**
      * \brief  Whether to write the strip data into the  XML or not.
@@ -163,14 +163,14 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    virtual void constuctDOMDocument(void) throw (Fed9UXMLDescriptionException);
+    virtual void constuctDOMDocument(void) noexcept(false);
 
     /**
      * \brief Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void initializeXerces(void) throw (Fed9UXMLDescriptionException);
+    void initializeXerces(void) noexcept(false);
 
     /**
      * \brief Method which adds elements to a DOMDocument using the Fed9UDescription to get the attribute values.
@@ -178,7 +178,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    virtual void addDOMElements(xercesc::DOMElement *rootElement) throw (Fed9UXMLDescriptionException);
+    virtual void addDOMElements(xercesc::DOMElement *rootElement) noexcept(false);
 
     /**
      * \brief Method which extracts the FED parameters from the Fed9UDescription and add them as element attributes.
@@ -186,7 +186,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addFedAttributes(xercesc::DOMElement* childElement) throw (Fed9UXMLDescriptionException);
+    void addFedAttributes(xercesc::DOMElement* childElement) noexcept(false);
 
     /**
      * \brief Method which extracts the FE unit parameters from the Fed9UDescription and adds them as element attributes.
@@ -195,7 +195,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addFeFpgaAttributes(xercesc::DOMElement* childElement, unsigned short feId=0) throw (Fed9UXMLDescriptionException);
+    void addFeFpgaAttributes(xercesc::DOMElement* childElement, unsigned short feId=0) noexcept(false);
 
 
     /**
@@ -205,7 +205,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addChannelPairAttributes(xercesc::DOMElement* childElement, unsigned short channelPairId) throw (Fed9UXMLDescriptionException);
+    void addChannelPairAttributes(xercesc::DOMElement* childElement, unsigned short channelPairId) noexcept(false);
 
     /**
      * \brief Method which extracts the channel parameters from the Fed9UDescription and add them as element attributes.
@@ -214,7 +214,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addChannelAttributes(xercesc::DOMElement* childElement, unsigned short channelId=0) throw (Fed9UXMLDescriptionException);
+    void addChannelAttributes(xercesc::DOMElement* childElement, unsigned short channelId=0) noexcept(false);
 
     /**
      * \brief Method which extracts the APV parameters from the Fed9UDescription and add them as element attributes.
@@ -223,7 +223,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addApvAttributes(xercesc::DOMElement* childElement, unsigned short apvId=0) throw (Fed9UXMLDescriptionException);
+    void addApvAttributes(xercesc::DOMElement* childElement, unsigned short apvId=0) noexcept(false);
 
     /**
      * \brief Method which extracts the strip parameters from the Fed9UDescription and adds them as element attributes.
@@ -232,21 +232,21 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addStripAttributes(xercesc::DOMElement* childElement, unsigned short stripId=0) throw (Fed9UXMLDescriptionException);
+    void addStripAttributes(xercesc::DOMElement* childElement, unsigned short stripId=0) noexcept(false);
   
     /**
      * \brief Method which extracts all the APV strip parameters from the Fed9UDescription and adds them as a single element attribute.
      * \param childElement Pointer to the element, which is a subset of the root element that will be added to the DOM document. Contains strip parameters.
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      */
-    void addStripsAttribute(xercesc::DOMElement* childElement) throw (Fed9UXMLDescriptionException);
+    void addStripsAttribute(xercesc::DOMElement* childElement) noexcept(false);
 
     /**
      * \brief All the strip data on an APV can be encoded as a single chunk of binary data. This is in a non human readable form.
      *        This is used to return it in a human readable form.
      * \param stripsBuf A character point that will be filled with the strip data in a human readable form.
      */
-    void getStripDataBuffer(char * stripsBuf) throw (Fed9UXMLDescriptionException);
+    void getStripDataBuffer(char * stripsBuf) noexcept(false);
 
     xercesc::DOMDocument *doc;                                    //!< DOM document where the XML data is to be stored.
     xercesc::DOMLSSerializer *theDOMWriter;                             //!< DOM writer object to write the data in the XML format.
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXmlToFile.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXmlToFile.hh
index abba177..7230ffb 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXmlToFile.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UDescriptionToXmlToFile.hh
@@ -46,12 +46,12 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throws this error if there are any error during construction and also catches and rethrows any exception
      *        thrown by other functions during the function call.
      */
-    Fed9UDescriptionToXmlToFile(const std::string &targetXMLFileName, std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite ) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXmlToFile(const std::string &targetXMLFileName, std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite ) noexcept(false);
     
     /**
      * \brief Method which construct and writes the XML to the file.
      */
-    void writeXmlFile(void) throw (Fed9UXMLDescriptionException);
+    void writeXmlFile(void) noexcept(false);
     
   private:
     std::string theTargetXMLFileName; //!< File to write the XML data to.
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9USpyApvData.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9USpyApvData.hh
index 7ddc2e3..ea11552 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9USpyApvData.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9USpyApvData.hh
@@ -71,14 +71,14 @@ namespace Fed9U {
      * \throw  Fed9USpyApvDataException index is out of range.
      * \return The value of the sample in ADC counts. 
      */
-    u16 getSample(u16 index) const throw (Fed9USpyApvDataException);
+    u16 getSample(u16 index) const noexcept(false);
     /**
      * \brief  Set a sample from the spy data.
      * \param  index Index of sample in spy data (not apv data frame).
      * \throw  Fed9USpyApvDataException index is out of range.
      * \return The value of the sample in ADC counts.
      */
-    Fed9USpyApvData& setSample(u16 index, i16 value) throw (Fed9USpyApvDataException);
+    Fed9USpyApvData& setSample(u16 index, i16 value) noexcept(false);
     
     //member functions to extract values from the APV header
     /**
@@ -87,14 +87,14 @@ namespace Fed9U {
      * \throw  Fed9USpyApvDataException Tick mark isn't found.
      * \return Number of samples before the start of the tick mark.
      */
-    u8 getTickOffset(i16 threshold) const throw (Fed9USpyApvDataException);
+    u8 getTickOffset(i16 threshold) const noexcept(false);
     /*
      * \brief  Get the pipeline address APV header.
      * \param  threshold The threshold for a high value in the APV header.
      * \throw  Fed9USpyApvDataException Tick mark isn't found.
      * \return Pipeline address from the APV header.
      */
-    u8 getPipelineAddress(i16 threshold) const throw (Fed9USpyApvDataException);
+    u8 getPipelineAddress(i16 threshold) const noexcept(false);
     /**
      * \brief  Get APV header error bit.
      * \param  threshold The threshold for a high value in the APV header.
@@ -102,7 +102,7 @@ namespace Fed9U {
      * \return True if the error bit was high (ie no error) or 
      *         false if it was low (ie there was an error).
      */
-    bool getErrorBit(i16 threshold) const throw (Fed9USpyApvDataException);
+    bool getErrorBit(i16 threshold) const noexcept(false);
     
     
     /**
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UUtils.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UUtils.hh
index 65b2adf..bdf59b8 100644
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UUtils.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UUtils.hh
@@ -6634,22 +6634,22 @@ class Fed9UXMLDescription
 
 public:
   /**Constructor. This takes as arguments the XML file name and the Fed9UDescription to be modified.*/
-  Fed9UXMLDescription(const std::string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) throw (Fed9UXMLDescriptionException);
+  Fed9UXMLDescription(const std::string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) noexcept(false);
 
   /**Constructor. This takes in the Fed9UDescription to be modified. This is the constructor that should be used by derived classes.*/
-  Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription , std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) throw (Fed9UXMLDescriptionException);
+  Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription , std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) noexcept(false);
 
   /**Destructor. This does some clean up.*/
   virtual ~Fed9UXMLDescription();
 
   /**Method which performs the Fed9UDescription override. It modifies the object member reference to the Fed9UDescription. 
      This method should only be used if the user has used the constructor which takes in a file name.*/
-  std::vector<Fed9UDescription*>* makeNewFed9UDescription(void) throw (Fed9UXMLDescriptionException);
+  std::vector<Fed9UDescription*>* makeNewFed9UDescription(void) noexcept(false);
 
   /**Method which performs the Fed9UDescription overide. 
      It takes in a istream, containing the XML buffer, and modifies the object member reference to the Fed9UDescription.
      This method should be used by derived classes which use the stream interface to this class.*/
-  std::vector<Fed9UDescription*>* makeNewFed9UDescriptionFromStream(std::istream &is) throw (Fed9UXMLDescriptionException);
+  std::vector<Fed9UDescription*>* makeNewFed9UDescriptionFromStream(std::istream &is) noexcept(false);
 
   /**Method to get the value of usingStrips_*/
   bool getUsingStrips();
@@ -6662,49 +6662,49 @@ public:
 
 protected:
   /**Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.*/
-  void initializeXerces(void) throw (Fed9UXMLDescriptionException);
+  void initializeXerces(void) noexcept(false);
 
   /**Method which will construct and initialize the DOMBuilder.*/
-  void makeDOMBuilder(void) throw (Fed9UXMLDescriptionException);
+  void makeDOMBuilder(void) noexcept(false);
 
   /**Method to recursively find the child elements under the given Node.*/
-  void traverseChildElements(xercesc::DOMNode *n) throw (Fed9UXMLDescriptionException);
+  void traverseChildElements(xercesc::DOMNode *n) noexcept(false);
 
   /**Method which reads in a node, finds if it has attributes and sets these in the Fed9UDescription.*/
-  void setFed9UDescription(xercesc::DOMNode *n) throw (Fed9UXMLDescriptionException);
+  void setFed9UDescription(xercesc::DOMNode *n) noexcept(false);
 
   /**Method which will set the attributes for the fed9U node.*/
-  void setFed9UAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setFed9UAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method which will set the attributes for the feFpga node.*/
-  void setFeFpgaAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setFeFpgaAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
  
   /**Method which will set the attributes for the channel pair node.*/
-  void setChannelPairAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setChannelPairAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
  
   /**Method which will set the attributes for the channel node.*/
-  void setChannelAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setChannelAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
   
   /**Method which will set the attributes for the channel node.*/
-  void setApvAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setApvAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method which will set the attributes for the strip node.*/
-  void setStripAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setStripAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
   
   /**Method which will set the attributes for the strips node.*/
-  void setStripsAttribute(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setStripsAttribute(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method to get the integer node value from a DOMNamedNodeMap*/
-  unsigned long getIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  unsigned long getIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the signed integer node value from a DOMNamedNodeMap*/
-  int getSignedIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap,  std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  int getSignedIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap,  std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the float node value from a DOMNamedNodeMap*/
-  float getFloatNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  float getFloatNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the string node value from a DOMNamedNodeMap*/
-  std::string getStringNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  std::string getStringNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
   
   
   xercesc::DOMDocument *doc;
@@ -6761,7 +6761,7 @@ namespace Fed9U {
 
     /**Method which modifies the Fed9UDescription. 
      It modifies the object member reference to the Fed9UDescription.*/
-    //    vector<Fed9UDescription*>*  makeNewFed9UDescription(void) throw (Fed9U::Fed9UXMLDescriptionException);
+    //    vector<Fed9UDescription*>*  makeNewFed9UDescription(void) noexcept(false);
 
   private:
     std::string theXMLFileName;
@@ -6828,7 +6828,7 @@ namespace Fed9U {
      *
      * This constructor can be used to directly create an XML file.
      */
-    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. Takes a Fed9UDescription object to write to the database.
@@ -6840,7 +6840,7 @@ namespace Fed9U {
      *
      * As no file name is set during construction this cannot be used to make an XML file directly and is for use with the database.
      */
-    Fed9UDescriptionToXml(Fed9UDescription &Fed9UDescriptionToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(Fed9UDescription &Fed9UDescriptionToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. This takes a vector of Fed9UDescription pointers from which to make the XML file.
@@ -6855,7 +6855,7 @@ namespace Fed9U {
      * All the Fed9UDescription objects pointed to by the elements of the Fed9UDescription vector will be written to the single file specified
      * by targetXMLFileName. Sufficient information is given to this constructor to produce an XML file.
      */
-    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Constructor. This takes a vector of Fed9UDescription pointers to write to the database.
@@ -6869,7 +6869,7 @@ namespace Fed9U {
      * Insufficient information is passed to the constructor to create an XML file, no file name is given. It is instead used to writing the  
      * to the database. All objects pointed to by the Fed9UDescription vector will be written to the database.
      */
-    Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) throw (Fed9UXMLDescriptionException);
+    Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips = true, bool usingBinaryStrips = true) noexcept(false);
 
     /**
      * \brief Destructor.
@@ -6886,7 +6886,7 @@ namespace Fed9U {
      *
      * This must be called after using the constructor to this class which only takes in a reference to a Fed9UDescription and not an XML file name.
      */
-    void streamOutDescription(std::ostream * os) throw (Fed9UXMLDescriptionException);
+    void streamOutDescription(std::ostream * os) noexcept(false);
 
     /**
      * \brief Method which converts the Fed9UDescription to an XML file.
@@ -6895,7 +6895,7 @@ namespace Fed9U {
      *
      * This must be called after using the file based constructor to this class.
      */
-    void writeXmlFile(void) throw (Fed9UXMLDescriptionException);
+    void writeXmlFile(void) noexcept(false);
 
     /**
      * \brief  Whether to write the strip data into the  XML or not.
@@ -6936,14 +6936,14 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    virtual void constuctDOMDocument(void) throw (Fed9UXMLDescriptionException);
+    virtual void constuctDOMDocument(void) noexcept(false);
 
     /**
      * \brief Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void initializeXerces(void) throw (Fed9UXMLDescriptionException);
+    void initializeXerces(void) noexcept(false);
 
     /**
      * \brief Method which adds elements to a DOMDocument using the Fed9UDescription to get the attribute values.
@@ -6951,7 +6951,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    virtual void addDOMElements(xercesc::DOMElement *rootElement) throw (Fed9UXMLDescriptionException);
+    virtual void addDOMElements(xercesc::DOMElement *rootElement) noexcept(false);
 
     /**
      * \brief Method which extracts the FED parameters from the Fed9UDescription and add them as element attributes.
@@ -6959,7 +6959,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addFedAttributes(xercesc::DOMElement* childElement) throw (Fed9UXMLDescriptionException);
+    void addFedAttributes(xercesc::DOMElement* childElement) noexcept(false);
 
     /**
      * \brief Method which extracts the FE unit parameters from the Fed9UDescription and adds them as element attributes.
@@ -6968,7 +6968,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addFeFpgaAttributes(xercesc::DOMElement* childElement, unsigned short feId=0) throw (Fed9UXMLDescriptionException);
+    void addFeFpgaAttributes(xercesc::DOMElement* childElement, unsigned short feId=0) noexcept(false);
 
 
     /**
@@ -6978,7 +6978,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addChannelPairAttributes(xercesc::DOMElement* childElement, unsigned short channelPairId) throw (Fed9UXMLDescriptionException);
+    void addChannelPairAttributes(xercesc::DOMElement* childElement, unsigned short channelPairId) noexcept(false);
 
     /**
      * \brief Method which extracts the channel parameters from the Fed9UDescription and add them as element attributes.
@@ -6987,7 +6987,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addChannelAttributes(xercesc::DOMElement* childElement, unsigned short channelId=0) throw (Fed9UXMLDescriptionException);
+    void addChannelAttributes(xercesc::DOMElement* childElement, unsigned short channelId=0) noexcept(false);
 
     /**
      * \brief Method which extracts the APV parameters from the Fed9UDescription and add them as element attributes.
@@ -6996,7 +6996,7 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addApvAttributes(xercesc::DOMElement* childElement, unsigned short apvId=0) throw (Fed9UXMLDescriptionException);
+    void addApvAttributes(xercesc::DOMElement* childElement, unsigned short apvId=0) noexcept(false);
 
     /**
      * \brief Method which extracts the strip parameters from the Fed9UDescription and adds them as element attributes.
@@ -7005,21 +7005,21 @@ namespace Fed9U {
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      *        by other functions during the construction call.
      */
-    void addStripAttributes(xercesc::DOMElement* childElement, unsigned short stripId=0) throw (Fed9UXMLDescriptionException);
+    void addStripAttributes(xercesc::DOMElement* childElement, unsigned short stripId=0) noexcept(false);
   
     /**
      * \brief Method which extracts all the APV strip parameters from the Fed9UDescription and adds them as a single element attribute.
      * \param childElement Pointer to the element, which is a subset of the root element that will be added to the DOM document. Contains strip parameters.
      * \throw Fed9UXMLDescriptionException Throw for any error conditions that occur during construction, also rethrows any errors thrown.
      */
-    void addStripsAttribute(xercesc::DOMElement* childElement) throw (Fed9UXMLDescriptionException);
+    void addStripsAttribute(xercesc::DOMElement* childElement) noexcept(false);
 
     /**
      * \brief All the strip data on an APV can be encoded as a single chunk of binary data. This is in a non human readable form.
      *        This is used to return it in a human readable form.
      * \param stripsBuf A character point that will be filled with the strip data in a human readable form.
      */
-    void getStripDataBuffer(char * stripsBuf) throw (Fed9UXMLDescriptionException);
+    void getStripDataBuffer(char * stripsBuf) noexcept(false);
 
     xercesc::DOMDocument *doc;                                    //!< DOM document where the XML data is to be stored.
     xercesc::DOMLSSerializer *theDOMWriter;                             //!< DOM writer object to write the data in the XML format.
@@ -9818,7 +9818,7 @@ namespace Fed9U {
      * \param  bufferData Each element contains the reading from a strip, there must be one element for each strip on a FED. Size:24,576.
      * \return Self reference
      */
-    Fed9UBufferDescription & setFed9UBufferData(const std::vector<unsigned short> &bufferData) throw (ICException);
+    Fed9UBufferDescription & setFed9UBufferData(const std::vector<unsigned short> &bufferData) noexcept(false);
 
     /**
      * \brief  Method to set the channel length vector.
@@ -9826,7 +9826,7 @@ namespace Fed9U {
      *         on the FED. Size:96.
      * \return Self reference
      */
-    Fed9UBufferDescription & setChannelLengths(const std::vector<unsigned short> &channelLengths) throw (ICException);
+    Fed9UBufferDescription & setChannelLengths(const std::vector<unsigned short> &channelLengths) noexcept(false);
 
     /**
      * \brief  Method to set the FE length vector.
@@ -9834,7 +9834,7 @@ namespace Fed9U {
      *         FE unit on the FED. Size:8.
      * \return Self reference
      */
-    Fed9UBufferDescription & setFeLengths(const std::vector<unsigned short> &feLengths) throw (ICException);
+    Fed9UBufferDescription & setFeLengths(const std::vector<unsigned short> &feLengths) noexcept(false);
 
     /**
      * \brief  Method to set the packet code.
@@ -9850,7 +9850,7 @@ namespace Fed9U {
      * \param  cmMedians Common mode median value recorded by each APV. There must be one element for each APV on the FED. Size:192.
      * \return Self reference
      */
-    Fed9UBufferDescription & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICException);
+    Fed9UBufferDescription & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false);
 
    /**
      * \brief  Method to 32-bit swap data into slink format. Should only be performed AFTER buffer generation.
@@ -9997,7 +9997,7 @@ namespace Fed9U {
      * \param theBufDesc Pointer to the buffer description that is to be updated.
      * \throw ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    void generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) throw (ICException);
+    void generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
   };
 
@@ -10038,7 +10038,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9URawData(Fed9UBufferDescription *bufDesc ) throw (ICException);
+    void generateFed9URawData(Fed9UBufferDescription *bufDesc ) noexcept(false);
 
     /**
      * \brief Method which puts channel data in the Fed9U data buffer in a zero suppressed DAQ format.
@@ -10047,7 +10047,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9UZSData(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateFed9UZSData(Fed9UBufferDescription *bufDesc) noexcept(false);
 
     /**
      * \brief Method which puts channel data in the Fed9U data buffer in a scope mode DAQ format.
@@ -10058,7 +10058,7 @@ namespace Fed9U {
      * Inside the Fed9UBufferDescription must be the vector of data, which contains the ADC values for each strip (in channel and strip order order). 
      * Fed9UBufferDescriptions internal buffer will be updated to contain the whole event.
      */
-    void generateFed9UScopeModeData( Fed9UBufferDescription *bufDesc, unsigned short scope_mode_length ) throw (ICException);
+    void generateFed9UScopeModeData( Fed9UBufferDescription *bufDesc, unsigned short scope_mode_length ) noexcept(false);
 
   private:
     /**
@@ -10069,7 +10069,7 @@ namespace Fed9U {
      *
      * The ends of the FE data blocks in the FED buffer are padded out with zeros until the start of the next 64-bit words.
      */
-    void paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) throw (ICException);
+    void paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) noexcept(false);
 
     Fed9UEventInfo mFed9UEventInfo; //!< See Fed9UEventInfo for more details on this class.
 
@@ -10108,7 +10108,7 @@ namespace Fed9U {
      *
      * This is 8 bytes, which contains the bunch crossing number and FED mode.
      */
-    void generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
     /**
      * \brief This constructs the Fed9U Tracker Special DAQ header in the 2nd 64-bit word of the Fed9U buffer.
@@ -10117,7 +10117,7 @@ namespace Fed9U {
      *
      * This is another 8 bytes which contain FED debug information.
      */
-    void generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
     /**
      * \brief This adds the FE header information to the Fed9U buffer. 
@@ -10128,7 +10128,7 @@ namespace Fed9U {
      * the 8 FE lengths in bytes for all channel info for that FE (including channel header and packet code).
      * They do not include the length of the FE header itself.
      */
-    void generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException);
+    void generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) noexcept(false);
 
   private:
 
@@ -10210,7 +10210,7 @@ namespace Fed9U {
      *
      * In virgin raw data mode the data is left untouch and is exactly as it comes from the FED.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
     
   private:
   
@@ -10222,7 +10222,7 @@ namespace Fed9U {
      *
      * \todo - method very inefficient. Improve!
      */
-    void disOrderData(std::vector<unsigned short> &bufferData) const throw (ICException);
+    void disOrderData(std::vector<unsigned short> &bufferData) const noexcept(false);
       
     Fed9UEventInfo mFed9UEventInfo; //!< See the Fed9UEventInfo documentation for more information about this class.
 
@@ -10260,7 +10260,7 @@ namespace Fed9U {
      *
      * In processed raw data mode the FED will perform strip reodering and pedestal subtraction.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
 
   private:
 
@@ -10304,7 +10304,7 @@ namespace Fed9U {
      *
      * In zero suppression mode full data processing is performed. Strip re-odering, pedestal subtraction, common mode median subtraction and cluster finding.
      */
-    void generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException);
+    void generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false);
 
   private:
 
@@ -10320,7 +10320,7 @@ namespace Fed9U {
      */
     void findDataLengths(const std::vector<unsigned short> &bufferData, 
 			 std::vector<unsigned short> &feLengths, 
-			 std::vector<unsigned short> &channelLengths) throw (ICException);
+			 std::vector<unsigned short> &channelLengths) noexcept(false);
       
     Fed9UEventInfo mFed9UEventInfo; //!< See the Fed9UEventInfo documentation for more information about this class.
 
@@ -10364,7 +10364,7 @@ namespace Fed9U {
      *
      * In scope mode the full APV frames are recorded upon receipt of a trigger. A scope lengths worth of 23 bit words of the frame is recorded.
      */
-    void generateBuffer( Fed9UBufferDescription *bufDesc ) throw (ICException);
+    void generateBuffer( Fed9UBufferDescription *bufDesc ) noexcept(false);
     
   private:
     
@@ -10420,7 +10420,7 @@ namespace Fed9U {
      * The first element of the vector corresponds to strip 1, channel 96 in the external numbering or strip 0 or channel 0 internal numbering.
      * The strip order should then follow in physical strip ordering and not APV-MUX order.
      */
-    void generateFed9UBuffer(const std::vector<unsigned short> &bufferData) throw (ICUtils::ICException);
+    void generateFed9UBuffer(const std::vector<unsigned short> &bufferData) noexcept(false);
 
     /**
      * \name Buffer getters.
@@ -10433,14 +10433,14 @@ namespace Fed9U {
      * \param fedBuffer Area to copy memory to.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    void getBuffer(unsigned int *fedBuffer) const throw (ICUtils::ICException);
+    void getBuffer(unsigned int *fedBuffer) const noexcept(false);
 
     /**
      * \brief  Method to return copy of Fed9U buffer.
      * \return vector<unsigned char> A vector containing a copy of all the data in the internal buffer.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    std::vector<unsigned char> getBuffer() throw (ICUtils::ICException);
+    std::vector<unsigned char> getBuffer() noexcept(false);
     //@}
 
     /**
@@ -10454,14 +10454,14 @@ namespace Fed9U {
      * \return unsigned long Number of 32-bit words in the buffer.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    unsigned long getBufferSize(void) const throw (ICUtils::ICException);
+    unsigned long getBufferSize(void) const noexcept(false);
 
     /**
      * \brief  Method to get the bunch crossing number.
      * \return unsigned long Bunch crossing number for which the event was recorded.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    unsigned long getBunchCrossing(void) const throw (ICUtils::ICException);
+    unsigned long getBunchCrossing(void) const noexcept(false);
 
     //@}
 
@@ -10478,7 +10478,7 @@ namespace Fed9U {
      * \return Self reference.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    Fed9UBufferGenerator & setBunchCrossing(unsigned long bunchCrossing) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setBunchCrossing(unsigned long bunchCrossing) noexcept(false);
 
     /**
      * \brief  Method to set the tracker header to full debug mode.
@@ -10488,7 +10488,7 @@ namespace Fed9U {
      * The method provides no way to undo this once it has been done. The default mode for an event buffer is APV error mode
      * and no change should be made if this mode is required.
      */
-    Fed9UBufferGenerator & setHeaderToFullDebug(void) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setHeaderToFullDebug(void) noexcept(false);
 
     /**
      * \brief  Method to set the buffer creator pointer. This allows the user to change mode between generating events.
@@ -10505,9 +10505,9 @@ namespace Fed9U {
      *         a base of zero. Size:192.
      * \throw  ICException Throws this exception for all error and catches all errors and rethrows as this exception type.
      */
-    Fed9UBufferGenerator & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false);
 
-    Fed9UBufferGenerator & setSlink64() throw (ICUtils::ICException);
+    Fed9UBufferGenerator & setSlink64() noexcept(false);
 
     //@}
  
@@ -12054,14 +12054,14 @@ namespace Fed9U {
      * \throw  Fed9USpyApvDataException index is out of range.
      * \return The value of the sample in ADC counts. 
      */
-    u16 getSample(u16 index) const throw (Fed9USpyApvDataException);
+    u16 getSample(u16 index) const noexcept(false);
     /**
      * \brief  Set a sample from the spy data.
      * \param  index Index of sample in spy data (not apv data frame).
      * \throw  Fed9USpyApvDataException index is out of range.
      * \return The value of the sample in ADC counts.
      */
-    Fed9USpyApvData& setSample(u16 index, i16 value) throw (Fed9USpyApvDataException);
+    Fed9USpyApvData& setSample(u16 index, i16 value) noexcept(false);
     
     //member functions to extract values from the APV header
     /**
@@ -12070,14 +12070,14 @@ namespace Fed9U {
      * \throw  Fed9USpyApvDataException Tick mark isn't found.
      * \return Number of samples before the start of the tick mark.
      */
-    u8 getTickOffset(i16 threshold) const throw (Fed9USpyApvDataException);
+    u8 getTickOffset(i16 threshold) const noexcept(false);
     /*
      * \brief  Get the pipeline address APV header.
      * \param  threshold The threshold for a high value in the APV header.
      * \throw  Fed9USpyApvDataException Tick mark isn't found.
      * \return Pipeline address from the APV header.
      */
-    u8 getPipelineAddress(i16 threshold) const throw (Fed9USpyApvDataException);
+    u8 getPipelineAddress(i16 threshold) const noexcept(false);
     /**
      * \brief  Get APV header error bit.
      * \param  threshold The threshold for a high value in the APV header.
@@ -12085,7 +12085,7 @@ namespace Fed9U {
      * \return True if the error bit was high (ie no error) or 
      *         false if it was low (ie there was an error).
      */
-    bool getErrorBit(i16 threshold) const throw (Fed9USpyApvDataException);
+    bool getErrorBit(i16 threshold) const noexcept(false);
     
     
     /**
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescription.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescription.hh
index 940c8f8..6997e99 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescription.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescription.hh
@@ -45,22 +45,22 @@ class Fed9UXMLDescription
 
 public:
   /**Constructor. This takes as arguments the XML file name and the Fed9UDescription to be modified.*/
-  Fed9UXMLDescription(const std::string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) throw (Fed9UXMLDescriptionException);
+  Fed9UXMLDescription(const std::string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) noexcept(false);
 
   /**Constructor. This takes in the Fed9UDescription to be modified. This is the constructor that should be used by derived classes.*/
-  Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription , std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) throw (Fed9UXMLDescriptionException);
+  Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription , std::vector<Fed9UDescription*>* desclist = NULL, bool usingStrips = true) noexcept(false);
 
   /**Destructor. This does some clean up.*/
   virtual ~Fed9UXMLDescription();
 
   /**Method which performs the Fed9UDescription override. It modifies the object member reference to the Fed9UDescription. 
      This method should only be used if the user has used the constructor which takes in a file name.*/
-  std::vector<Fed9UDescription*>* makeNewFed9UDescription(void) throw (Fed9UXMLDescriptionException);
+  std::vector<Fed9UDescription*>* makeNewFed9UDescription(void) noexcept(false);
 
   /**Method which performs the Fed9UDescription overide. 
      It takes in a istream, containing the XML buffer, and modifies the object member reference to the Fed9UDescription.
      This method should be used by derived classes which use the stream interface to this class.*/
-  std::vector<Fed9UDescription*>* makeNewFed9UDescriptionFromStream(std::istream &is) throw (Fed9UXMLDescriptionException);
+  std::vector<Fed9UDescription*>* makeNewFed9UDescriptionFromStream(std::istream &is) noexcept(false);
 
   /**Method to get the value of usingStrips_*/
   bool getUsingStrips();
@@ -73,49 +73,49 @@ public:
 
 protected:
   /**Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.*/
-  void initializeXerces(void) throw (Fed9UXMLDescriptionException);
+  void initializeXerces(void) noexcept(false);
 
   /**Method which will construct and initialize the DOMBuilder.*/
-  void makeDOMBuilder(void) throw (Fed9UXMLDescriptionException);
+  void makeDOMBuilder(void) noexcept(false);
 
   /**Method to recursively find the child elements under the given Node.*/
-  void traverseChildElements(xercesc::DOMNode *n) throw (Fed9UXMLDescriptionException);
+  void traverseChildElements(xercesc::DOMNode *n) noexcept(false);
 
   /**Method which reads in a node, finds if it has attributes and sets these in the Fed9UDescription.*/
-  void setFed9UDescription(xercesc::DOMNode *n) throw (Fed9UXMLDescriptionException);
+  void setFed9UDescription(xercesc::DOMNode *n) noexcept(false);
 
   /**Method which will set the attributes for the fed9U node.*/
-  void setFed9UAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setFed9UAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method which will set the attributes for the feFpga node.*/
-  void setFeFpgaAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setFeFpgaAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
  
   /**Method which will set the attributes for the channel pair node.*/
-  void setChannelPairAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setChannelPairAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
  
   /**Method which will set the attributes for the channel node.*/
-  void setChannelAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setChannelAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
   
   /**Method which will set the attributes for the channel node.*/
-  void setApvAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setApvAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method which will set the attributes for the strip node.*/
-  void setStripAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setStripAttributes(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
   
   /**Method which will set the attributes for the strips node.*/
-  void setStripsAttribute(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException);
+  void setStripsAttribute(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false);
 
   /**Method to get the integer node value from a DOMNamedNodeMap*/
-  unsigned long getIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  unsigned long getIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the signed integer node value from a DOMNamedNodeMap*/
-  int getSignedIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap,  std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  int getSignedIntNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap,  std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the float node value from a DOMNamedNodeMap*/
-  float getFloatNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  float getFloatNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
 
   /**Method to get the string node value from a DOMNamedNodeMap*/
-  std::string getStringNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException);
+  std::string getStringNodeValue(xercesc::DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false);
   
   
   xercesc::DOMDocument *doc;
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescriptionFromFile.hh b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescriptionFromFile.hh
index 6f8aa19..803afe0 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescriptionFromFile.hh
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/include/Fed9UXMLDescriptionFromFile.hh
@@ -35,7 +35,7 @@ namespace Fed9U {
 
     /**Method which modifies the Fed9UDescription. 
      It modifies the object member reference to the Fed9UDescription.*/
-    //    vector<Fed9UDescription*>*  makeNewFed9UDescription(void) throw (Fed9U::Fed9UXMLDescriptionException);
+    //    vector<Fed9UDescription*>*  makeNewFed9UDescription(void) noexcept(false);
 
   private:
     std::string theXMLFileName;
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorProcRaw.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorProcRaw.cc
index be646e3..89b43ca 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorProcRaw.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorProcRaw.cc
@@ -5,7 +5,7 @@ namespace Fed9U {
 
   using std::exception;
 
-  void Fed9UBufferCreatorProcRaw::generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException) {
+  void Fed9UBufferCreatorProcRaw::generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false) {
     try {      
             
       //Make vectors of the data sizes for each FE and each channel.
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorRaw.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorRaw.cc
index c9c14b6..4a1c452 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorRaw.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorRaw.cc
@@ -6,7 +6,7 @@ namespace Fed9U {
 
   //using std::exception;
 
-  void Fed9UBufferCreatorRaw::generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException) {
+  void Fed9UBufferCreatorRaw::generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false) {
     try {
 
       //Make vectors of the data sizes for each FE and each channel.
@@ -47,7 +47,7 @@ namespace Fed9U {
     }
   }
   
-  void Fed9UBufferCreatorRaw::disOrderData(std::vector<unsigned short> &bufferData) const throw (ICException) {
+  void Fed9UBufferCreatorRaw::disOrderData(std::vector<unsigned short> &bufferData) const noexcept(false) {
     try {
       unsigned short stripsPerApv = mFed9UEventInfo.getStripsPerApv();
       unsigned short stripsPerChannel = stripsPerApv * mFed9UEventInfo.getApvsPerFedChannel();
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorScopeMode.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorScopeMode.cc
index b6e425a..f127eed 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorScopeMode.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorScopeMode.cc
@@ -13,7 +13,7 @@ namespace Fed9U {
   }
   
 
-  void Fed9UBufferCreatorScopeMode::generateBuffer( Fed9UBufferDescription *bufDesc ) throw (ICException) {
+  void Fed9UBufferCreatorScopeMode::generateBuffer( Fed9UBufferDescription *bufDesc ) noexcept(false) {
   
     try {      
       
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorZS.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorZS.cc
index 6910496..b9531c5 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorZS.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferCreatorZS.cc
@@ -6,7 +6,7 @@ namespace Fed9U {
   //using std::exception;
     
 
-  void Fed9UBufferCreatorZS::generateBuffer(Fed9UBufferDescription *bufDesc) throw (ICException) {
+  void Fed9UBufferCreatorZS::generateBuffer(Fed9UBufferDescription *bufDesc) noexcept(false) {
     try {
 
       //Init the buffer index
@@ -49,7 +49,7 @@ namespace Fed9U {
 
   void Fed9UBufferCreatorZS::findDataLengths(const std::vector<unsigned short> &bufferData, 
 					std::vector<unsigned short> &feLengths, 
-					std::vector<unsigned short> &channelLengths) throw (ICException) {
+					std::vector<unsigned short> &channelLengths) noexcept(false) {
     try {
       feLengths.clear();
       channelLengths.clear();
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferData.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferData.cc
index 6b0f7e6..ad761e5 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferData.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferData.cc
@@ -9,7 +9,7 @@ namespace Fed9U {
 
 
   void Fed9UBufferData::generateFed9UScopeModeData( Fed9UBufferDescription *bufDesc, 
-						    unsigned short sm_length ) throw (ICException) {
+						    unsigned short sm_length ) noexcept(false) {
 
     try {
 
@@ -125,7 +125,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferData::generateFed9URawData(Fed9UBufferDescription *bufDesc) throw (ICException) {
+  void Fed9UBufferData::generateFed9URawData(Fed9UBufferDescription *bufDesc) noexcept(false) {
     try {
       //Getting the bufferData and the channelLengths vectors
       const std::vector<unsigned short> channelLengths = bufDesc->getChannelLengths();
@@ -231,7 +231,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferData::generateFed9UZSData(Fed9UBufferDescription *bufDesc) throw (ICException) {
+  void Fed9UBufferData::generateFed9UZSData(Fed9UBufferDescription *bufDesc) noexcept(false) {
     try {
       //Getting the bufferData and the channelLengths vectors
       const std::vector<unsigned short> channelLengths = bufDesc->getChannelLengths();
@@ -387,7 +387,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferData::paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) throw (ICException) {
+  void Fed9UBufferData::paddToNext64BitWord(Fed9UBufferDescription *bufDesc, unsigned int cBytes) noexcept(false) {
     try {
       //Padd remaining 32-bit word
       switch(cBytes%4) {
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferDescription.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferDescription.cc
index 9c045d7..6ac0eb9 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferDescription.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferDescription.cc
@@ -51,7 +51,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferDescription & Fed9UBufferDescription::setFed9UBufferData(const std::vector<unsigned short> &bufferData) throw (ICException) {
+  Fed9UBufferDescription & Fed9UBufferDescription::setFed9UBufferData(const std::vector<unsigned short> &bufferData) noexcept(false) {
    
 //     ICUTILS_VERIFY( bufferData.size() == static_cast<unsigned int>( mFed9UEventInfo.getStripsPerApv() * 
 // 							    mFed9UEventInfo.getApvsPerFedChannel() * 
@@ -62,14 +62,14 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferDescription & Fed9UBufferDescription::setChannelLengths(const std::vector<unsigned short> &channelLengths) throw (ICException) {
+  Fed9UBufferDescription & Fed9UBufferDescription::setChannelLengths(const std::vector<unsigned short> &channelLengths) noexcept(false) {
     ICUTILS_VERIFY(channelLengths.size()==static_cast<unsigned int>(mFed9UEventInfo.getChannelsPerFeUnit() * mFed9UEventInfo.getFeUnitsPerFed()))(channelLengths.size()).error();
     mChannelLengths = channelLengths;
     return *this;
   }
 
 
-  Fed9UBufferDescription & Fed9UBufferDescription::setFeLengths(const std::vector<unsigned short> &feLengths) throw (ICException) {
+  Fed9UBufferDescription & Fed9UBufferDescription::setFeLengths(const std::vector<unsigned short> &feLengths) noexcept(false) {
     ICUTILS_VERIFY(feLengths.size()==mFed9UEventInfo.getFeUnitsPerFed())(feLengths.size()).error();
     mFeLengths = feLengths;
     return *this;
@@ -82,7 +82,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferDescription & Fed9UBufferDescription::setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICException) {
+  Fed9UBufferDescription & Fed9UBufferDescription::setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false) {
     ICUTILS_VERIFY(cmMedians.size()==static_cast<unsigned int>(mFed9UEventInfo.getChannelsPerFeUnit() * mFed9UEventInfo.getFeUnitsPerFed() * mFed9UEventInfo.getApvsPerFedChannel()))(cmMedians.size()).error();
     mCMMedians = cmMedians;
     return *this;
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferGenerator.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferGenerator.cc
index d985060..7f0a501 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferGenerator.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferGenerator.cc
@@ -11,7 +11,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferGenerator::generateFed9UBuffer(const std::vector<unsigned short> &bufferData) throw (ICUtils::ICException) {
+  void Fed9UBufferGenerator::generateFed9UBuffer(const std::vector<unsigned short> &bufferData) noexcept(false) {
     try {
       //First, initialize the buffer index inside the Fed9UBufferDescription
       mFed9UBufferDescription.initBufferIndex();
@@ -31,7 +31,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferGenerator & Fed9UBufferGenerator::setBunchCrossing(const unsigned long bunchCrossing) throw (ICUtils::ICException) {
+  Fed9UBufferGenerator & Fed9UBufferGenerator::setBunchCrossing(const unsigned long bunchCrossing) noexcept(false) {
     try {
       mFed9UBufferDescription.setBunchCrossing(bunchCrossing);
     }
@@ -45,7 +45,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferGenerator & Fed9UBufferGenerator::setHeaderToFullDebug(void) throw (ICUtils::ICException) {
+  Fed9UBufferGenerator & Fed9UBufferGenerator::setHeaderToFullDebug(void) noexcept(false) {
     try {
       mFed9UBufferDescription.setHeaderFormat(mFed9UEventInfo.getTrackerSpecialHeaderFullDebugMode());
     }
@@ -67,7 +67,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UBufferGenerator & Fed9UBufferGenerator::setCommonModeMedians(const std::vector<unsigned short> &cmMedians) throw (ICUtils::ICException) {
+  Fed9UBufferGenerator & Fed9UBufferGenerator::setCommonModeMedians(const std::vector<unsigned short> &cmMedians) noexcept(false) {
     try {
       mFed9UBufferDescription.setCommonModeMedians(cmMedians);
     }
@@ -80,7 +80,7 @@ namespace Fed9U {
     return *this;
   }
 
-  Fed9UBufferGenerator & Fed9UBufferGenerator::setSlink64() throw (ICUtils::ICException) {
+  Fed9UBufferGenerator & Fed9UBufferGenerator::setSlink64() noexcept(false) {
 
     try {
       mFed9UBufferDescription.setSlink64();
@@ -94,7 +94,7 @@ namespace Fed9U {
     return *this;
   }
     
-  void Fed9UBufferGenerator::getBuffer(unsigned int *fedBuffer) const throw (ICUtils::ICException) {
+  void Fed9UBufferGenerator::getBuffer(unsigned int *fedBuffer) const noexcept(false) {
     try {
       if ( (mFed9UBufferDescription.getBufferConst()) && 
 	   (mFed9UBufferDescription.getBufferSize()!=0) ) {
@@ -112,7 +112,7 @@ namespace Fed9U {
   }
 
 
-  std::vector<unsigned char> Fed9UBufferGenerator::getBuffer() throw (ICUtils::ICException) {
+  std::vector<unsigned char> Fed9UBufferGenerator::getBuffer() noexcept(false) {
     std::vector<unsigned char> buffer; // returned object
     try {
       if ( mFed9UBufferDescription.getBufferConst() && 
@@ -132,7 +132,7 @@ namespace Fed9U {
   }
     
 
-  unsigned long Fed9UBufferGenerator::getBufferSize(void) const throw (ICUtils::ICException) {
+  unsigned long Fed9UBufferGenerator::getBufferSize(void) const noexcept(false) {
     try {
       return mFed9UBufferDescription.getBufferSize();
     }
@@ -145,7 +145,7 @@ namespace Fed9U {
   }
 
 
-  unsigned long Fed9UBufferGenerator::getBunchCrossing(void) const throw (ICUtils::ICException) {
+  unsigned long Fed9UBufferGenerator::getBunchCrossing(void) const noexcept(false) {
     try {
       return mFed9UBufferDescription.getBunchCrossing();
     }
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferHeader.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferHeader.cc
index a66b1d1..bcfed36 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferHeader.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferHeader.cc
@@ -6,7 +6,7 @@ namespace Fed9U {
   //using std::exception;
 
 
-  void Fed9UBufferHeader::generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException) {
+  void Fed9UBufferHeader::generateFed9UDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false) {
     try {
       theBufDesc->getBuffer()[theBufDesc->getBufferSize()] = ((0x5000 | ((theBufDesc->getMode() & 0xf) << 8)) << 16) + 0x0000; //The 0x5 is the start of the buffer.
       theBufDesc->incrementBufferIndex();
@@ -22,7 +22,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferHeader::generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException) {
+  void Fed9UBufferHeader::generateFed9UTrackerSpecialDaqHeader(Fed9UBufferDescription *theBufDesc) noexcept(false) {
     try {
       theBufDesc->getBuffer()[theBufDesc->getBufferSize()] = 
 	(0xED << 24) | // Temporary label to indicate that new tracker-specific header is being used
@@ -44,7 +44,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UBufferHeader::generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) throw (ICUtils::ICException) {
+  void Fed9UBufferHeader::generateFed9UFEHeader(Fed9UBufferDescription *theBufDesc) noexcept(false) {
     try {
       //Check that the feLengths vector has 8 elements
       const std::vector<unsigned short> feLengths = theBufDesc->getFeLengths();
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferTrailer.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferTrailer.cc
index 391e8e1..f7ec09d 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferTrailer.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UBufferTrailer.cc
@@ -6,7 +6,7 @@ namespace Fed9U {
   using std::exception;
 
 
-  void Fed9UBufferTrailer::generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) throw (ICException) {
+  void Fed9UBufferTrailer::generateFed9UDaqTrailer(Fed9UBufferDescription *theBufDesc) noexcept(false) {
     try {
       unsigned int totalLength = static_cast<unsigned int>(static_cast<float>(theBufDesc->getBufferSize() + 2) / 2.0); 
       
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXml.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXml.cc
index 56bf98f..366a9a0 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXml.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXml.cc
@@ -51,7 +51,7 @@ namespace Fed9U {
   using std::ofstream;
 
 
-  Fed9UDescriptionToXml::Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips, bool usingBinaryStrips) throw (Fed9UXMLDescriptionException): 
+  Fed9UDescriptionToXml::Fed9UDescriptionToXml(const std::string &targetXMLFileName,  std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips, bool usingBinaryStrips) noexcept(false): 
     doc(NULL),
     theDOMWriter(NULL),
     theDOMOutput(NULL),
@@ -72,7 +72,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UDescriptionToXml::Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips, bool usingBinaryStrips) throw (Fed9UXMLDescriptionException): 
+  Fed9UDescriptionToXml::Fed9UDescriptionToXml( std::vector<Fed9UDescription*>  Fed9UDescriptionsToWrite , bool usingStrips, bool usingBinaryStrips) noexcept(false): 
     doc(NULL),
     theDOMWriter(NULL),
     theDOMOutput(NULL),
@@ -93,7 +93,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UDescriptionToXml::Fed9UDescriptionToXml(const std::string &targetXMLFileName, Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips, bool usingBinaryStrips) throw (Fed9UXMLDescriptionException) : 
+  Fed9UDescriptionToXml::Fed9UDescriptionToXml(const std::string &targetXMLFileName, Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips, bool usingBinaryStrips) noexcept(false) : 
     doc(NULL),
     theDOMWriter(NULL),
     theDOMOutput(NULL),
@@ -113,7 +113,7 @@ namespace Fed9U {
   }
 
 
-  Fed9UDescriptionToXml::Fed9UDescriptionToXml( Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips, bool usingBinaryStrips) throw (Fed9UXMLDescriptionException) :    
+  Fed9UDescriptionToXml::Fed9UDescriptionToXml( Fed9UDescription &Fed9UDescriptionToWrite, bool usingStrips, bool usingBinaryStrips) noexcept(false) :    
     doc(NULL),
     theDOMWriter(NULL),
     theDOMOutput(NULL),
@@ -148,7 +148,7 @@ namespace Fed9U {
   }
 
   
-  void Fed9UDescriptionToXml::streamOutDescription(std::ostream * os) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::streamOutDescription(std::ostream * os) noexcept(false)
   {
     try {
       constuctDOMDocument();
@@ -191,7 +191,7 @@ namespace Fed9U {
   }*/
 
 
-  void Fed9UDescriptionToXml::writeXmlFile(void) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::writeXmlFile(void) noexcept(false)
   {
     try {
       constuctDOMDocument();
@@ -233,7 +233,7 @@ namespace Fed9U {
   //****************************************************************************************************
 
 
-  void Fed9UDescriptionToXml::constuctDOMDocument(void) throw (Fed9UXMLDescriptionException) {
+  void Fed9UDescriptionToXml::constuctDOMDocument(void) noexcept(false) {
   
     try {
       //Get a DOM Core implementation.
@@ -286,7 +286,7 @@ namespace Fed9U {
     
 
   //Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.
-  void Fed9UDescriptionToXml::initializeXerces(void) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::initializeXerces(void) noexcept(false)
   {
     try {
       if (XMLPlatformUtils::fgTransService == NULL)   
@@ -305,7 +305,7 @@ namespace Fed9U {
   }
 
   
-  void Fed9UDescriptionToXml::addDOMElements(DOMElement *rootElement) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addDOMElements(DOMElement *rootElement) noexcept(false)
   {
     //    DOMElement* rootElement = doc->getDocumentElement();
 
@@ -389,7 +389,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addFedAttributes(DOMElement* childElement) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addFedAttributes(DOMElement* childElement) noexcept(false)
   {
     try {
     bool fedParamBool = false;
@@ -956,7 +956,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addFeFpgaAttributes(DOMElement* childElement, unsigned short feId) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addFeFpgaAttributes(DOMElement* childElement, unsigned short feId) noexcept(false)
   {
     try {
     bool fedParamBool = false;
@@ -1028,7 +1028,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addChannelPairAttributes(DOMElement* childElement, unsigned short channelPairId) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addChannelPairAttributes(DOMElement* childElement, unsigned short channelPairId) noexcept(false)
   {
     try {
       bool fedParamBool = false;
@@ -1069,7 +1069,7 @@ namespace Fed9U {
   }
   
 
-  void Fed9UDescriptionToXml::addChannelAttributes(DOMElement* childElement, unsigned short channelId) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addChannelAttributes(DOMElement* childElement, unsigned short channelId) noexcept(false)
   {
     try {
       bool fedParamBool = false;
@@ -1143,7 +1143,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addApvAttributes(DOMElement* childElement, unsigned short apvId) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addApvAttributes(DOMElement* childElement, unsigned short apvId) noexcept(false)
   {
     try {
     bool fedParamBool = false;
@@ -1198,7 +1198,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addStripAttributes(DOMElement* childElement, unsigned short stripId) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addStripAttributes(DOMElement* childElement, unsigned short stripId) noexcept(false)
   {
     try {
     bool fedParamBool = false;
@@ -1258,7 +1258,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::addStripsAttribute(DOMElement* childElement) throw (Fed9UXMLDescriptionException)
+  void Fed9UDescriptionToXml::addStripsAttribute(DOMElement* childElement) noexcept(false)
   {
     try {
 
@@ -1342,7 +1342,7 @@ namespace Fed9U {
   }
 
 
-  void Fed9UDescriptionToXml::getStripDataBuffer(char * stripsBuf) throw (Fed9UXMLDescriptionException) {
+  void Fed9UDescriptionToXml::getStripDataBuffer(char * stripsBuf) noexcept(false) {
     // now we must loop over all strips building all the info for each 
     // strip (pedestal, lowthresholdfactor, highthresholdfactor, noise, disable)
     // into one blob. To do this we use a stringstream streaming in values as hex
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXmlToFile.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXmlToFile.cc
index c9e0d2b..d6c92ec 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXmlToFile.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UDescriptionToXmlToFile.cc
@@ -28,12 +28,12 @@ namespace Fed9U {
   }
 
 
-  Fed9UDescriptionToXmlToFile::Fed9UDescriptionToXmlToFile(const std::string &targetXMLFileName, std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite ) throw (Fed9UXMLDescriptionException) : Fed9UDescriptionToXml(targetXMLFileName, Fed9UDescriptionsToWrite ), theTargetXMLFileName(targetXMLFileName) {
+  Fed9UDescriptionToXmlToFile::Fed9UDescriptionToXmlToFile(const std::string &targetXMLFileName, std::vector<Fed9UDescription*> Fed9UDescriptionsToWrite ) noexcept(false) : Fed9UDescriptionToXml(targetXMLFileName, Fed9UDescriptionsToWrite ), theTargetXMLFileName(targetXMLFileName) {
   
   }
 
 
-  void Fed9UDescriptionToXmlToFile::writeXmlFile(void) throw (Fed9UXMLDescriptionException) {
+  void Fed9UDescriptionToXmlToFile::writeXmlFile(void) noexcept(false) {
     try {
       if (debugOutput_)
 	std::cout << "calling :: writeXmlFile() ... filename = " << theTargetXMLFileName << std::endl;
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9USpyApvData.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9USpyApvData.cc
index d448d3a..385b42b 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9USpyApvData.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9USpyApvData.cc
@@ -2,19 +2,19 @@
 
 namespace Fed9U {
   
-  u16 Fed9USpyApvData::getSample(u16 index) const throw (Fed9USpyApvDataException)
+  u16 Fed9USpyApvData::getSample(u16 index) const noexcept(false)
   {
     ICUTILS_VERIFY(index < SAMPLES_PER_APV)(index).msg("Trying to get sample with index greater than number of samples per APV.")
     .error().code(Fed9USpyApvDataException::ERROR_OUT_OF_RANGE);
     return samples_[index];
   }
-  Fed9USpyApvData& Fed9USpyApvData::setSample(u16 index, i16 value) throw (Fed9USpyApvDataException)
+  Fed9USpyApvData& Fed9USpyApvData::setSample(u16 index, i16 value) noexcept(false)
   {
     ICUTILS_VERIFY(index < SAMPLES_PER_APV)(index).msg("Trying to set sample with index greater than number of samples per APV.")
     .error().code(Fed9USpyApvDataException::ERROR_OUT_OF_RANGE);
     samples_[index] = value; return *this;
   }
-  u8 Fed9USpyApvData::getTickOffset(i16 threshold) const throw (Fed9USpyApvDataException)
+  u8 Fed9USpyApvData::getTickOffset(i16 threshold) const noexcept(false)
   {
     u8 tickOffset=0;
     //skip low bits at the begining
@@ -25,7 +25,7 @@ namespace Fed9U {
     .msg("Tick mark too short.").error().code(Fed9USpyApvDataException::ERROR_TICK_MARK_NOT_FOUND);
     return tickOffset;
   }
-  bool Fed9USpyApvData::getErrorBit(i16 threshold) const throw (Fed9USpyApvDataException)
+  bool Fed9USpyApvData::getErrorBit(i16 threshold) const noexcept(false)
   {
     u8 errorBitOffset = 11;	//3 samples for tick marks, 8 for address
     try {
@@ -35,7 +35,7 @@ namespace Fed9U {
     }
     return samples_[errorBitOffset] > threshold;
   }
-  u8 Fed9USpyApvData::getPipelineAddress(i16 threshold) const throw (Fed9USpyApvDataException)
+  u8 Fed9USpyApvData::getPipelineAddress(i16 threshold) const noexcept(false)
   {
     u8 result = 0x0;
     //find the tick mark
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescription.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescription.cc
index bb82690..f5b58f7 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescription.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescription.cc
@@ -80,7 +80,7 @@ namespace Fed9U {
   using std::stringstream;
   
   //Constructor. This takes as arguments the XML file name and the Fed9UDescriptions to be modified.
-  Fed9UXMLDescription::Fed9UXMLDescription(const string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist, bool usingStrips) throw (Fed9UXMLDescriptionException) 
+  Fed9UXMLDescription::Fed9UXMLDescription(const string &XMLOverideFile, Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist, bool usingStrips) noexcept(false) 
     : theXMLOverideFile(XMLOverideFile), 
       theFed9UDescription(defaultFed9UDescription), 
       theFed9UDescriptionList_(desclist),
@@ -113,7 +113,7 @@ namespace Fed9U {
 
 
   //Constructor. This takes in the Fed9UDescription to be modified.
-  Fed9UXMLDescription::Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist, bool usingStrips) throw (Fed9UXMLDescriptionException) : theFed9UDescription(defaultFed9UDescription), theFed9UDescriptionList_(desclist), 
+  Fed9UXMLDescription::Fed9UXMLDescription(Fed9UDescription &defaultFed9UDescription, std::vector<Fed9UDescription*>* desclist, bool usingStrips) noexcept(false) : theFed9UDescription(defaultFed9UDescription), theFed9UDescriptionList_(desclist), 
        numberOfFeds_(0), usingStrips_(usingStrips), debugOutput_(false) {
     try {
       makeDOMBuilder();
@@ -149,7 +149,7 @@ namespace Fed9U {
   
   //Method which performs the Fed9UDescription override. 
   //It modifies the object member reference to the Fed9UDescription.
-  std::vector<Fed9UDescription*> * Fed9UXMLDescription::makeNewFed9UDescription(void)  throw (Fed9UXMLDescriptionException) { 
+  std::vector<Fed9UDescription*> * Fed9UXMLDescription::makeNewFed9UDescription(void)  noexcept(false) { 
     try {    
       //reset document pool
       cout << "Reset the document Pool" << endl;
@@ -215,7 +215,7 @@ namespace Fed9U {
   
   //Method which performs the Fed9UDescription override. 
   //It takes in a istream, containing the XML buffer, and modifies the object member reference to the Fed9UDescription.
-  std::vector<Fed9UDescription*>* Fed9UXMLDescription::makeNewFed9UDescriptionFromStream(std::istream &is) throw (Fed9UXMLDescriptionException) {
+  std::vector<Fed9UDescription*>* Fed9UXMLDescription::makeNewFed9UDescriptionFromStream(std::istream &is) noexcept(false) {
 
     try {    
       //reset document pool
@@ -301,7 +301,7 @@ namespace Fed9U {
   //****************************************************************************************************
   
   //Method to initialize the Xerces XML parser. This method must be called before using any Xerces APIs.
-  void Fed9UXMLDescription::initializeXerces(void) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::initializeXerces(void) noexcept(false)
   {
     try {
 	//if (XMLPlatformUtils::fgTransService == NULL)
@@ -321,7 +321,7 @@ namespace Fed9U {
 
   //*******************************************************************
   //Method which will construct and initialize the DOMBuilder.
-  void Fed9UXMLDescription::makeDOMBuilder(void) throw (Fed9UXMLDescriptionException) {
+  void Fed9UXMLDescription::makeDOMBuilder(void) noexcept(false) {
     try {
       //Initialize the Xerces APIs
       initializeXerces();
@@ -363,7 +363,7 @@ namespace Fed9U {
   //*****************************************************************
   //Method to recursively find the child elements under the given Node.
   //This is based on code from the Xerces 2.3 library samples.
-  void Fed9UXMLDescription::traverseChildElements(DOMNode *n) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::traverseChildElements(DOMNode *n) noexcept(false)
   {
     char * name=NULL;
     try {
@@ -406,7 +406,7 @@ namespace Fed9U {
   
   //**********************************************************************************************
   //Method which reads in a node, finds if it has attributes and sets these in the Fed9UDescription.
-  void Fed9UXMLDescription::setFed9UDescription(DOMNode *n) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setFed9UDescription(DOMNode *n) noexcept(false)
   {
     try {
       //      cout << " we write the node into the description" << endl;
@@ -462,7 +462,7 @@ namespace Fed9U {
   
   //*******************************************************
   //Method which will set the attributes for the fed9U node.
-  void Fed9UXMLDescription::setFed9UAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setFed9UAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   { 
     try {
     //There are four possible type of node value, integer (signed and unsigned), float and string.
@@ -1488,7 +1488,7 @@ namespace Fed9U {
 
   //********************************************************
   //Method which will set the attributes for the feFpga node.
-  void Fed9UXMLDescription::setFeFpgaAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setFeFpgaAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     try {
     //There are two possible type of node value, integer and string.
@@ -1592,7 +1592,7 @@ namespace Fed9U {
 
   //*********************************************************
   //Method which will set the attributes for the channel pair node.
-  void Fed9UXMLDescription::setChannelPairAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setChannelPairAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     try {
       //There is one possible sort of node value u16 only
@@ -1643,7 +1643,7 @@ namespace Fed9U {
 
   //*********************************************************
   //Method which will set the attributes for the channel node.
-  void Fed9UXMLDescription::setChannelAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setChannelAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     try {
     //There are two possible type of node value, integer and string.
@@ -1791,7 +1791,7 @@ namespace Fed9U {
 
   //*********************************************************
   //Method which will set the attributes for the channel node.
-  void Fed9UXMLDescription::setApvAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setApvAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     try {
     //There are two possible type of node value, integer and string.
@@ -1872,7 +1872,7 @@ namespace Fed9U {
 
   //*************************************************************
   //Method which will set the attributes for the strip node.
-  void Fed9UXMLDescription::setStripAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setStripAttributes(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     try {
       //There are two possible type of node value, integer and string.
@@ -1958,7 +1958,7 @@ namespace Fed9U {
 
  //*************************************************************
   //Method which will set the attributes for the strips node.
-  void Fed9UXMLDescription::setStripsAttribute(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) throw (Fed9UXMLDescriptionException)
+  void Fed9UXMLDescription::setStripsAttribute(DOMNamedNodeMap *theAttributesDOMNamedNodeMap) noexcept(false)
   {
     // each strip is stored as 32 bits of info in a string blob, we have to loop over each strip and extract the data from
     // each of the 32 bit words. The data is stored in the following bits
@@ -2037,7 +2037,7 @@ namespace Fed9U {
 
   //**************************************************************
   //Method to get the integer node value from a DOMNamedNodeMap
-  unsigned long Fed9UXMLDescription::getIntNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException)
+  unsigned long Fed9UXMLDescription::getIntNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, std::string theAttributeName, bool &notFound) noexcept(false)
   {
     try {
       unsigned long theIntNodeValue = 0;
@@ -2069,7 +2069,7 @@ namespace Fed9U {
 
   //**************************************************************
   //Method to get the signed integer node value from a DOMNamedNodeMap
-  int Fed9UXMLDescription::getSignedIntNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException)
+  int Fed9UXMLDescription::getSignedIntNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) noexcept(false)
   {
     try {
       int theSignedIntNodeValue = 0;
@@ -2100,7 +2100,7 @@ namespace Fed9U {
 
   //**************************************************************
   //Method to get the float node value from a DOMNamedNodeMap
-  float Fed9UXMLDescription::getFloatNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException)
+  float Fed9UXMLDescription::getFloatNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) noexcept(false)
   {
     try {
       float theFloatNodeValue = 0.0;
@@ -2131,7 +2131,7 @@ namespace Fed9U {
 
   //**************************************************************
   //Method to get the string node value from a DOMNamedNodeMap
-  string Fed9UXMLDescription::getStringNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) throw (Fed9UXMLDescriptionException)
+  string Fed9UXMLDescription::getStringNodeValue(DOMNamedNodeMap *theAttributesDOMNamedNodeMap, string theAttributeName, bool &notFound) noexcept(false)
   {
     try {
       string theStringNodeValue;
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescriptionFromFile.cc b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescriptionFromFile.cc
index cce3d09..87de0c1 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescriptionFromFile.cc
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Fed9UUtils/src/Fed9UXMLDescriptionFromFile.cc
@@ -33,7 +33,7 @@ namespace Fed9U {
 
   /**Method which modifies the Fed9UDescription. 
      It modifies the object member reference to the Fed9UDescription.*/
-  /* vector<Fed9UDescription*> * Fed9UXMLDescriptionFromFile::makeNewFed9UDescription(void) throw (Fed9UXMLDescriptionException) {
+  /* vector<Fed9UDescription*> * Fed9UXMLDescriptionFromFile::makeNewFed9UDescription(void) noexcept(false) {
     try {
       ifstream theXMLBuf(theXMLFileName.c_str());
       if (!theXMLBuf.is_open()) {
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Makevars b/TrackerOnline/Fed9U/Fed9USoftware/Makevars
index d8932b3..35ce8de 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Makevars
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Makevars
@@ -85,7 +85,7 @@ CPPFLAGS += $(ENV_CMS_TK_FED9U_ROOT_INCDIR) -I$(INC) $(CUSTOM_INCLUDES)   \
 	$(ENV_CMS_TK_FED9U_ICUTILS_INCDIR)				\
 	-I../Fed9UVmeBase/include/ -I../Fed9UVmeDevice/include/ \
 	-I../Fed9UDevice/include/ -I../Fed9UBuildDefines/include/       \
-	-Dlinux -DLINUX     -DLITTLE_ENDIAN__    -DCPU=x86  -Dx86  -std=c++0x  \
+	-Dlinux -DLINUX     -DLITTLE_ENDIAN__    -DCPU=x86  -Dx86   \
 	-DSOAP__  -DCMS_TK_64BITS  $(ENV_CMS_TK_FED9U_DATABASE_C++FLAGS) -DEVENT_STREAMLINE #-DINLINE  $(ENV_CMS_TK_FED9U_HAL_C++FLAGS) 
 # -Dtoolbox don't know what this did... so removed it... was breaking the compile for the diag
 
@@ -96,7 +96,7 @@ else
 NONSTDFLAGS += -g -DDEBUGMSGERROR
 endif
 
-CCFLAGS += -ansi -pedantic -fPIC -Wall -Wno-long-long -std=c++0x $(NONSTDFLAGS)
+CCFLAGS += -fPIC -Wall -Wno-long-long $(NONSTDFLAGS)
 CXXFLAGS += $(CCFLAGS) $(CPPFLAGS)
 ARFLAGS += cr
 SOFLAGS += -shared
diff --git a/TrackerOnline/Fed9U/Fed9USoftware/Makevars.noroot b/TrackerOnline/Fed9U/Fed9USoftware/Makevars.noroot
index 3c42443..8c1b190 100755
--- a/TrackerOnline/Fed9U/Fed9USoftware/Makevars.noroot
+++ b/TrackerOnline/Fed9U/Fed9USoftware/Makevars.noroot
@@ -85,7 +85,7 @@ CPPFLAGS += -I$(INC) $(CUSTOM_INCLUDES)   \
 	$(ENV_CMS_TK_FED9U_ICUTILS_INCDIR)				\
 	-I../Fed9UVmeBase/include/ -I../Fed9UVmeDevice/include/ \
 	-I../Fed9UDevice/include/ -I../Fed9UBuildDefines/include/       \
-	-Dlinux -DLINUX     -DLITTLE_ENDIAN__    -DCPU=x86  -Dx86  -std=c++0x  \
+	-Dlinux -DLINUX     -DLITTLE_ENDIAN__    -DCPU=x86  -Dx86   \
 	-DSOAP__  -DCMS_TK_64BITS  $(ENV_CMS_TK_FED9U_DATABASE_C++FLAGS) -DEVENT_STREAMLINE #-DINLINE  $(ENV_CMS_TK_FED9U_HAL_C++FLAGS) 
 # -Dtoolbox don't know what this did... so removed it... was breaking the compile for the diag
 
@@ -96,7 +96,7 @@ else
 NONSTDFLAGS += -g -DDEBUGMSGERROR
 endif
 
-CCFLAGS += -ansi -pedantic -fPIC -Wall -Wno-long-long -std=c++0x $(NONSTDFLAGS)
+CCFLAGS += -fPIC -Wall -Wno-long-long $(NONSTDFLAGS)
 CXXFLAGS += $(CCFLAGS) $(CPPFLAGS)
 ARFLAGS += cr
 SOFLAGS += -shared
