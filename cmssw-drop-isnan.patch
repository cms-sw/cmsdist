Index: Alignment/CocoaModel/src/OptOCOPS.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Alignment/CocoaModel/src/OptOCOPS.cc,v
retrieving revision 1.17
diff -u -r1.17 OptOCOPS.cc
--- Alignment/CocoaModel/src/OptOCOPS.cc	4 Oct 2010 17:34:57 -0000	1.17
+++ Alignment/CocoaModel/src/OptOCOPS.cc	23 Oct 2012 20:14:46 -0000
@@ -17,11 +17,12 @@
 #include "Alignment/CocoaModel/interface/ALIPlane.h"
 #include "Alignment/CocoaDDLObjects/interface/CocoaSolidShapeBox.h"
 #include "Alignment/CocoaUtilities/interface/GlobalOptionMgr.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include <iostream>
 #include <iomanip>
 #include <fstream>
-#include <math.h>     		// I have added a new library for isnan() function
+#include <math.h>     		// I have added a new library for edm::isNotFinite() function
 #include <cstdlib>
 
 using namespace CLHEP;
@@ -265,8 +266,8 @@
   for( ii = 0; ii < 4; ii++ ) {
     if (ALIUtils::debug >= 2) std::cout << "\tmeas CCD " << measNames[ii] << " ii=(" << ii << ") \t Values: "
      //<< (fabs( measv[ii][0] ) <  fabs( measv[ii][1]) 
-       << " " << fabs( measv[ii][0] ) << " " <<  fabs( measv[ii][1] ) << "  isnan() = " <<
-       std::isnan(measv[ii][1]) << std::endl;
+       << " " << fabs( measv[ii][0] ) << " " <<  fabs( measv[ii][1] ) << "  edm::isNotFinite() = " <<
+       edm::isNotFinite(measv[ii][1]) << std::endl;
 
     if( meas.xlaserLine( ii ) != -1 ) { 
       laserLine = ALIbool( meas.xlaserLine( ii ) );
@@ -277,7 +278,7 @@
     //  Somehow measv[][1] can occasionally return value of 'nan'
     //  which is interpretted as less than any real value
     //
-      if(std::isnan(measv[ii][1]) != 0){
+      if(edm::isNotFinite(measv[ii][1]) != 0){
       		measv[ii][1] = 1e99;
 		if (ALIUtils::debug >= 2) std::cout << "  --> Swapping for " << measv[ii][1] << "(inf)" << std::endl;
 				  }
Index: Alignment/CommonAlignmentAlgorithm/src/AlignmentExtendedCorrelationsStore.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Alignment/CommonAlignmentAlgorithm/src/AlignmentExtendedCorrelationsStore.cc,v
retrieving revision 1.8
diff -u -r1.8 AlignmentExtendedCorrelationsStore.cc
--- Alignment/CommonAlignmentAlgorithm/src/AlignmentExtendedCorrelationsStore.cc	4 Oct 2010 17:34:57 -0000	1.8
+++ Alignment/CommonAlignmentAlgorithm/src/AlignmentExtendedCorrelationsStore.cc	23 Oct 2012 20:14:46 -0000
@@ -6,6 +6,7 @@
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 AlignmentExtendedCorrelationsStore::AlignmentExtendedCorrelationsStore( const edm::ParameterSet& config )
@@ -233,7 +234,7 @@
   for ( int iRow = 0; iRow < nRow; ++iRow )
   {
     double factor = sqrt(cov[row+iRow][row+iRow]);
-    if ( std::isnan(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovariance] "
+    if ( edm::isNotFinite(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovariance] "
 							    << "NaN-factor: sqrt(" << cov[row+iRow][row+iRow] << ")";
 
     for ( int jCol = 0; jCol < nCol; ++jCol )
@@ -243,7 +244,7 @@
   for ( int jCol = 0; jCol < nCol; ++jCol )
   {
     double factor = sqrt(cov[col+jCol][col+jCol]);
-    if ( std::isnan(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovariance] "
+    if ( edm::isNotFinite(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovariance] "
 							    << "NaN-factor: sqrt(" << cov[col+jCol][col+jCol] << ")";
 
     for ( int iRow = 0; iRow < nRow; ++iRow )
@@ -262,7 +263,7 @@
   for ( int iRow = 0; iRow < nRow; ++iRow )
   {
     double factor = sqrt(cov[col+iRow][col+iRow]);
-    if ( std::isnan(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovarianceT] "
+    if ( edm::isNotFinite(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovarianceT] "
 							    << "NaN-factor: sqrt(" << cov[col+iRow][col+iRow] << ")";
     for ( int jCol = 0; jCol < nCol; ++jCol )
       cov[row+jCol][col+iRow] = entry( iRow, jCol )*factor;
@@ -271,7 +272,7 @@
   for ( int jCol = 0; jCol < nCol; ++jCol )
   {
     double factor = sqrt(cov[row+jCol][row+jCol]);
-    if ( std::isnan(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovarianceT] "
+    if ( edm::isNotFinite(factor) ) throw cms::Exception("LogicError") << "[AlignmentExtendedCorrelationsStore::fillCovarianceT] "
 							    << "NaN-factor: sqrt(" << cov[row+jCol][row+jCol] << ")";
     for ( int iRow = 0; iRow < nRow; ++iRow )
       cov[row+jCol][col+iRow] *= factor;
Index: Alignment/SurveyAnalysis/macros/AlignLib.C
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Alignment/SurveyAnalysis/macros/AlignLib.C,v
retrieving revision 1.1
diff -u -r1.1 AlignLib.C
--- Alignment/SurveyAnalysis/macros/AlignLib.C	7 Sep 2010 16:17:53 -0000	1.1
+++ Alignment/SurveyAnalysis/macros/AlignLib.C	23 Oct 2012 20:14:46 -0000
@@ -27,6 +27,7 @@
 #if !defined(__CINT__) && !defined(__MAKECINT__)
 //#include "Alignment/CommonAlignment/src/AlignableObjectId.cc"
 #include "Alignment/CommonAlignment/interface/AlignableObjectId.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #endif
 
 const int nPar = 6;
Index: Alignment/TwoBodyDecay/src/TwoBodyDecayEstimator.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Alignment/TwoBodyDecay/src/TwoBodyDecayEstimator.cc,v
retrieving revision 1.13
diff -u -r1.13 TwoBodyDecayEstimator.cc
--- Alignment/TwoBodyDecay/src/TwoBodyDecayEstimator.cc	13 Sep 2011 12:04:28 -0000	1.13
+++ Alignment/TwoBodyDecay/src/TwoBodyDecayEstimator.cc	23 Oct 2012 20:14:46 -0000
@@ -5,6 +5,7 @@
 #include "Alignment/TwoBodyDecay/interface/TwoBodyDecayEstimator.h"
 #include "Alignment/TwoBodyDecay/interface/TwoBodyDecayModel.h"
 #include "Alignment/TwoBodyDecay/interface/TwoBodyDecayDerivatives.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 //#include "DataFormats/CLHEP/interface/Migration.h"
 
 TwoBodyDecayEstimator::TwoBodyDecayEstimator( const edm::ParameterSet & config )
@@ -227,7 +228,7 @@
 
   for ( int i = 0; i < vec.num_col(); ++i )
   {
-    isNan = isNan || std::isnan( vec[i] );
+    isNan = isNan || edm::isNotFinite( vec[i] );
     isInf = isInf || std::isinf( vec[i] );
   }
 
Index: CalibCalorimetry/HcalStandardModules/src/HcalPedestalMCWidths.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/CalibCalorimetry/HcalStandardModules/src/HcalPedestalMCWidths.cc,v
retrieving revision 1.4
diff -u -r1.4 HcalPedestalMCWidths.cc
--- CalibCalorimetry/HcalStandardModules/src/HcalPedestalMCWidths.cc	9 Oct 2012 14:58:05 -0000	1.4
+++ CalibCalorimetry/HcalStandardModules/src/HcalPedestalMCWidths.cc	23 Oct 2012 20:14:46 -0000
@@ -6,6 +6,7 @@
 //
 #include <memory>
 #include "CalibCalorimetry/HcalStandardModules/interface/HcalPedestalMCWidths.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 HcalPedestalMCWidths::HcalPedestalMCWidths(const edm::ParameterSet& ps) :
    hbheDigiCollectionTag_(ps.getParameter<edm::InputTag>("hbheDigiCollectionTag")),
@@ -31,7 +32,7 @@
          for(int j = 0; j != 10; j++){
             for(int k = 0; k != 10; k++){            
                bunch_it->sig[i][j][k] = (bunch_it->prod[i][j][k]/bunch_it->num[i][j][k]);//-(bunch_it->cap[i]*bunch_it->cap[(i+j)%4]);
-               if(!std::isnan(bunch_it->sig[i][j][k]))
+               if(!edm::isNotFinite(bunch_it->sig[i][j][k]))
                {
                   item.setValue(i,j,k,bunch_it->sig[i][j][k]);
                }else{
@@ -49,7 +50,7 @@
          for(int i = 0; i != 4; i++){
             for(int j = 0; j != 10; j++){
                for(int k = j; k != 10; k++)
-               if(!std::isnan(bunch_it->sig[i][j][k])) HBMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
+               if(!edm::isNotFinite(bunch_it->sig[i][j][k])) HBMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
             }
          }
       }
@@ -57,7 +58,7 @@
          for(int i = 0; i != 4; i++){
             for(int j = 0; j != 10; j++){
                for(int k = j; k != 10; k++)
-               if(!std::isnan(bunch_it->sig[i][j][k])) HEMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
+               if(!edm::isNotFinite(bunch_it->sig[i][j][k])) HEMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
             }
          }
       }
@@ -65,7 +66,7 @@
          for(int i = 0; i != 4; i++){
             for(int j = 0; j != 10; j++){
                for(int k = j; k != 10; k++)
-               if(!std::isnan(bunch_it->sig[i][j][k])) HFMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
+               if(!edm::isNotFinite(bunch_it->sig[i][j][k])) HFMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
             }
          }
       }
@@ -73,7 +74,7 @@
          for(int i = 0; i != 4; i++){
             for(int j = 0; j != 10; j++){
                for(int k = j; k != 10; k++)
-               if(!std::isnan(bunch_it->sig[i][j][k])) HOMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
+               if(!edm::isNotFinite(bunch_it->sig[i][j][k])) HOMeans[j]->Fill(k-j,bunch_it->sig[i][j][k]);
             }
          }
       }
Index: CalibTracker/SiPixelGainCalibration/plugins/SiPixelGainCalibrationAnalysis.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/CalibTracker/SiPixelGainCalibration/plugins/SiPixelGainCalibrationAnalysis.cc,v
retrieving revision 1.41
diff -u -r1.41 SiPixelGainCalibrationAnalysis.cc
--- CalibTracker/SiPixelGainCalibration/plugins/SiPixelGainCalibrationAnalysis.cc	21 Oct 2009 09:28:07 -0000	1.41
+++ CalibTracker/SiPixelGainCalibration/plugins/SiPixelGainCalibrationAnalysis.cc	23 Oct 2012 20:14:46 -0000
@@ -19,6 +19,7 @@
 
 // user include files
 #include "CondCore/DBOutputService/interface/PoolDBOutputService.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "SiPixelGainCalibrationAnalysis.h"
 #include <sstream>
@@ -352,7 +353,7 @@
   chi2=func_->GetChisquare()/((float)npoints-func_->GetNpar());
   prob= TMath::Prob(func_->GetChisquare(),npoints-func_->GetNpar());
   size_t ntimes=0;
-  while((isnan(slope) || isnan(intercept) )&& ntimes<10){
+  while((edm::isNotFinite(slope) || edm::isNotFinite(intercept) )&& ntimes<10){
     ntimes++;
     makehistopersistent=true;
     //    std::cout << slope << " " << intercept << " " << prob << std::endl;
@@ -375,7 +376,7 @@
     status=0;
   if(slope!=0)
     slope = 1./slope;
-  if(isnan(slope) || isnan(intercept)){
+  if(edm::isNotFinite(slope) || edm::isNotFinite(intercept)){
     status=-6;
     bookkeeper_[detid]["status_2d"]->setBinContent(ipix->col()+1,ipix->row()+1,status);
     if(writeSummary_){
Index: Calibration/EcalCalibAlgos/src/ClusterFillMap.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Calibration/EcalCalibAlgos/src/ClusterFillMap.cc,v
retrieving revision 1.5
diff -u -r1.5 ClusterFillMap.cc
--- Calibration/EcalCalibAlgos/src/ClusterFillMap.cc	7 Sep 2010 16:53:35 -0000	1.5
+++ Calibration/EcalCalibAlgos/src/ClusterFillMap.cc	23 Oct 2012 20:14:46 -0000
@@ -1,6 +1,7 @@
 #include "Calibration/EcalCalibAlgos/interface/ClusterFillMap.h"
 #include "DataFormats/EcalDetId/interface/EEDetId.h"
 #include "DataFormats/EcalDetId/interface/EBDetId.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 	ClusterFillMap::ClusterFillMap (int WindowX,
 			int WindowY,
@@ -48,7 +49,7 @@
      dummy*= (*m_endcapMap)[idsIt->first];
    }
    int ID=idsIt->first.rawId();
-   if (std::isnan(dummy)) {
+   if (edm::isNotFinite(dummy)) {
      dummy=0;
    }
    if ( dummy < m_minEnergyPerCrystal ) continue; //return 1; 
Index: Calibration/EcalCalibAlgos/src/ElectronCalibration.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Calibration/EcalCalibAlgos/src/ElectronCalibration.cc,v
retrieving revision 1.19
diff -u -r1.19 ElectronCalibration.cc
--- Calibration/EcalCalibAlgos/src/ElectronCalibration.cc	7 Sep 2010 16:53:35 -0000	1.19
+++ Calibration/EcalCalibAlgos/src/ElectronCalibration.cc	23 Oct 2012 20:14:46 -0000
@@ -17,6 +17,7 @@
 #include "DataFormats/TrackReco/interface/Track.h"
 #include "DataFormats/TrackReco/interface/TrackFwd.h"
 #include "DataFormats/TrackReco/interface/TrackExtraFwd.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "TFile.h"
 #include "TH1.h"
 #include "TH2.h"
@@ -512,7 +513,7 @@
 	       continue;
 	     }
 	   
-	   if (std::isnan(itrechit->energy())) return;	  
+	   if (edm::isNotFinite(itrechit->energy())) return;	  
 	   energy.push_back(itrechit->energy());
 	   energy5x5 += energy[icry];
 	   
Index: Calibration/EcalCalibAlgos/src/ElectronCalibrationUniv.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Calibration/EcalCalibAlgos/src/ElectronCalibrationUniv.cc,v
retrieving revision 1.12
diff -u -r1.12 ElectronCalibrationUniv.cc
--- Calibration/EcalCalibAlgos/src/ElectronCalibrationUniv.cc	9 Feb 2012 08:17:59 -0000	1.12
+++ Calibration/EcalCalibAlgos/src/ElectronCalibrationUniv.cc	23 Oct 2012 20:14:46 -0000
@@ -16,6 +16,7 @@
 #include "DataFormats/TrackReco/interface/Track.h"
 #include "DataFormats/TrackReco/interface/TrackFwd.h"
 #include "DataFormats/TrackReco/interface/TrackExtraFwd.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "TFile.h"
 #include "TH1.h"
 #include "TH2.h"
@@ -731,7 +732,7 @@
 	continue;
       }
       
-      if (std::isnan(itrechit->energy())){std::cout<<" nan energy "<<std::endl; return;} 	  
+      if (edm::isNotFinite(itrechit->energy())){std::cout<<" nan energy "<<std::endl; return;} 	  
       energy.push_back(itrechit->energy());
       energy5x5 += itrechit->energy();
       
@@ -752,7 +753,7 @@
  	continue;
       }
       
-      if (std::isnan(itrechit->energy())){std::cout<<" nan energy "<<std::endl; return;}
+      if (edm::isNotFinite(itrechit->energy())){std::cout<<" nan energy "<<std::endl; return;}
       energy.push_back(itrechit->energy());
       energy5x5 += itrechit->energy();
       
Index: Calibration/EcalCalibAlgos/src/IMACalibBlock.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Calibration/EcalCalibAlgos/src/IMACalibBlock.cc,v
retrieving revision 1.11
diff -u -r1.11 IMACalibBlock.cc
--- Calibration/EcalCalibAlgos/src/IMACalibBlock.cc	30 Jun 2011 10:10:52 -0000	1.11
+++ Calibration/EcalCalibAlgos/src/IMACalibBlock.cc	23 Oct 2012 20:14:46 -0000
@@ -8,6 +8,7 @@
 #include "Calibration/EcalCalibAlgos/interface/IMACalibBlock.h"
 #include "Calibration/Tools/interface/BlockSolver.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "TH1F.h"
 #include "TFile.h"
 #include <cassert>
@@ -165,7 +166,7 @@
     assert (vuota.num_col () == int(max)) ;
     for (unsigned int i = 0 ; i < max ; ++i)
      for (unsigned int j = 0 ; j < max ; ++j)
-       if (std::isnan (piena[i*max + j])) vuota[i][j] = 0. ;
+       if (edm::isNotFinite (piena[i*max + j])) vuota[i][j] = 0. ;
          else vuota[i][j] = piena[i*max + j] ; 
 
     return ;
@@ -182,7 +183,7 @@
     int max = m_numberOfElements ;
     assert (vuoto.num_row () == max) ;
     for (int i = 0 ; i < max ; ++i)
-      if (std::isnan (pieno[i])) vuoto[i] = 0. ;
+      if (edm::isNotFinite (pieno[i])) vuoto[i] = 0. ;
       else vuoto[i] = pieno[i] ; 
 
     return ;
Index: Calibration/EcalCalibAlgos/src/MatrixFillMap.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Calibration/EcalCalibAlgos/src/MatrixFillMap.cc,v
retrieving revision 1.4
diff -u -r1.4 MatrixFillMap.cc
--- Calibration/EcalCalibAlgos/src/MatrixFillMap.cc	7 Sep 2010 16:53:35 -0000	1.4
+++ Calibration/EcalCalibAlgos/src/MatrixFillMap.cc	23 Oct 2012 20:14:46 -0000
@@ -1,6 +1,7 @@
 #include "Calibration/EcalCalibAlgos/interface/MatrixFillMap.h"
 #include "DataFormats/EcalDetId/interface/EEDetId.h"
 #include "DataFormats/EcalDetId/interface/EBDetId.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 MatrixFillMap::MatrixFillMap (int WindowX,
 	int WindowY,
@@ -78,7 +79,7 @@
       double dummy = 0;
       dummy = curr_recHit->energy () ;
       //checks if the reading of the xtal is in a sensible range
-      if (std::isnan(dummy)){
+      if (edm::isNotFinite(dummy)){
 	  dummy=0;
        }	
       if ( dummy < m_minEnergyPerCrystal) continue; 
@@ -113,7 +114,7 @@
    int ID=det.rawId();
    EcalRecHitCollection::const_iterator curr_recHit = endcapHitsCollection->find(det) ;
    double dummy = curr_recHit->energy () ;
-   if (std::isnan(dummy)) {
+   if (edm::isNotFinite(dummy)) {
      dummy=0;
    }
    if ( dummy < m_minEnergyPerCrystal ) continue; 
Index: DQM/BeamMonitor/plugins/Vx3DHLTAnalyzer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/DQM/BeamMonitor/plugins/Vx3DHLTAnalyzer.cc,v
retrieving revision 1.104
diff -u -r1.104 Vx3DHLTAnalyzer.cc
--- DQM/BeamMonitor/plugins/Vx3DHLTAnalyzer.cc	14 Sep 2012 07:46:59 -0000	1.104
+++ DQM/BeamMonitor/plugins/Vx3DHLTAnalyzer.cc	23 Oct 2012 20:14:46 -0000
@@ -20,6 +20,7 @@
 
 #include "FWCore/ServiceRegistry/interface/Service.h"
 #include "FWCore/Framework/interface/LuminosityBlock.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/TrackerRecHit2D/interface/SiPixelRecHitCollection.h"
 #include "DataFormats/TrackReco/interface/Track.h"
@@ -116,7 +117,7 @@
 		  for (j = 0; j < DIM; j++)
 		    {
 		      MyVertex.Covariance[i][j] = it3DVx->covariance(i,j);
-		      if (std::isnan(MyVertex.Covariance[i][j]) == true) break;
+		      if (edm::isNotFinite(MyVertex.Covariance[i][j]) == true) break;
 		    }
 		  if (j != DIM) break;
 		}
@@ -321,8 +322,8 @@
 	  Gauss3D->GetStats(amin, edm, errdef, nvpar, nparx);
 
 	  if (counterVx < minNentries) goodData = -2;
-	  else if (std::isnan(edm) == true) goodData = -1;
-	  else for (unsigned int j = 0; j < nParams; j++) if (std::isnan(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
+	  else if (edm::isNotFinite(edm) == true) goodData = -1;
+	  else for (unsigned int j = 0; j < nParams; j++) if (edm::isNotFinite(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
 	  if (goodData == 0)
 	    {
 	      covyz = Gauss3D->GetParameter(4)*(std::fabs(Gauss3D->GetParameter(2))-std::fabs(Gauss3D->GetParameter(1))) - Gauss3D->GetParameter(5)*Gauss3D->GetParameter(3);
@@ -376,8 +377,8 @@
 	  Gauss3D->GetStats(amin, edm, errdef, nvpar, nparx);
 
 	  if (counterVx < minNentries) goodData = -2;
-	  else if (std::isnan(edm) == true) goodData = -1;
-	  else for (unsigned int j = 0; j < nParams; j++) if (std::isnan(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
+	  else if (edm::isNotFinite(edm) == true) goodData = -1;
+	  else for (unsigned int j = 0; j < nParams; j++) if (edm::isNotFinite(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
 	  if (goodData == 0)
 	    {
 	      covyz = Gauss3D->GetParameter(4)*(std::fabs(Gauss3D->GetParameter(2))-std::fabs(Gauss3D->GetParameter(1))) - Gauss3D->GetParameter(5)*Gauss3D->GetParameter(3);
@@ -432,8 +433,8 @@
 	  Gauss3D->GetStats(amin, edm, errdef, nvpar, nparx);
 
 	  if (counterVx < minNentries) goodData = -2;
-	  else if (std::isnan(edm) == true) goodData = -1;
-	  else for (unsigned int j = 0; j < nParams; j++) if (std::isnan(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
+	  else if (edm::isNotFinite(edm) == true) goodData = -1;
+	  else for (unsigned int j = 0; j < nParams; j++) if (edm::isNotFinite(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
 	  if (goodData == 0)
 	    {
 	      covyz = Gauss3D->GetParameter(4)*(std::fabs(Gauss3D->GetParameter(2))-std::fabs(Gauss3D->GetParameter(1))) - Gauss3D->GetParameter(5)*Gauss3D->GetParameter(3);
@@ -477,8 +478,8 @@
       Gauss3D->GetStats(amin, edm, errdef, nvpar, nparx);
       
       if (counterVx < minNentries) goodData = -2;
-      else if (std::isnan(edm) == true) goodData = -1;
-      else for (unsigned int j = 0; j < nParams; j++) if (std::isnan(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
+      else if (edm::isNotFinite(edm) == true) goodData = -1;
+      else for (unsigned int j = 0; j < nParams; j++) if (edm::isNotFinite(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
       if (goodData == 0)
 	{
 	  covyz = Gauss3D->GetParameter(4)*(std::fabs(Gauss3D->GetParameter(2))-std::fabs(Gauss3D->GetParameter(1))) - Gauss3D->GetParameter(5)*Gauss3D->GetParameter(3);
@@ -524,8 +525,8 @@
 	      Gauss3D->GetStats(amin, edm, errdef, nvpar, nparx);
       
 	      if (counterVx < minNentries) goodData = -2;
-	      else if (std::isnan(edm) == true) goodData = -1;
-	      else for (unsigned int j = 0; j < nParams; j++) if (std::isnan(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
+	      else if (edm::isNotFinite(edm) == true) goodData = -1;
+	      else for (unsigned int j = 0; j < nParams; j++) if (edm::isNotFinite(Gauss3D->GetParError(j)) == true) { goodData = -1; break; }
 	      if (goodData == 0)
 		{
 		  covyz = Gauss3D->GetParameter(4)*(std::fabs(Gauss3D->GetParameter(2))-std::fabs(Gauss3D->GetParameter(1))) - Gauss3D->GetParameter(5)*Gauss3D->GetParameter(3);
Index: DQM/TrigXMonitorClient/src/HLTScalersClient.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/DQM/TrigXMonitorClient/src/HLTScalersClient.cc,v
retrieving revision 1.19
diff -u -r1.19 HLTScalersClient.cc
--- DQM/TrigXMonitorClient/src/HLTScalersClient.cc	20 Jul 2010 02:58:27 -0000	1.19
+++ DQM/TrigXMonitorClient/src/HLTScalersClient.cc	23 Oct 2012 20:14:46 -0000
@@ -48,6 +48,7 @@
 #include "FWCore/Framework/interface/Event.h"
 #include "FWCore/Framework/interface/Run.h"
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 #include "DQMServices/Core/interface/DQMStore.h"
@@ -392,7 +393,7 @@
     double slope = sl.first; double slope_err = sl.second;
     if ( slope > 0 ) {
       hltRate_->setBinContent(nL,slope);
-      if ( ! std::isnan(slope_err ) && (slope_err >= 0 )  )
+      if ( ! edm::isNotFinite(slope_err ) && (slope_err >= 0 )  )
 	hltRate_->setBinError(nL,slope_err);
     }
   } // found  histo
@@ -429,7 +430,7 @@
 	// set the current rate(s)
 	hltCurrentRate_[(i-1)/kPerHisto]->setBinContent(i%kPerHisto, slope);
 	currentRate_->setBinContent(i, slope);
-	if ( ! std::isnan(slope_err ) && (slope_err >= 0 ) ) {
+	if ( ! edm::isNotFinite(slope_err ) && (slope_err >= 0 ) ) {
 	  currentRate_->setBinError(i, slope_err);
 	  hltCurrentRate_[(i-1)/kPerHisto]->setBinError(i%kPerHisto, slope_err);
 	  rateHistories_[i-1]->setBinError(nL,slope_err);
@@ -451,7 +452,7 @@
       double slope = sl.first; double slope_err = sl.second;
       if ( slope >= 0 ) {
 	hltRate_->setBinContent(nL,slope);
-	if ( ! std::isnan(slope_err ) && (slope_err >= 0 )  )
+	if ( ! edm::isNotFinite(slope_err ) && (slope_err >= 0 )  )
 	  hltRate_->setBinError(nL,slope_err);
       }
     } // found  histo
@@ -534,7 +535,7 @@
     if ( slope > 0 ) {
       hltNormRate_->setBinContent(nL,slope);
       if ( cnt > 0 ) slope_err = slope*sqrt( 2./num_fu + 2./cnt);
-      if ( ! std::isnan(slope_err ) && (slope_err >= 0 )  )
+      if ( ! edm::isNotFinite(slope_err ) && (slope_err >= 0 )  )
 	hltNormRate_->setBinError(nL,slope_err);
     }
   }
@@ -560,7 +561,7 @@
             std::cout << "Slope err " << i << " = " << slope_err << std::endl;
           }
 	}
-	if ( ! std::isnan(slope_err ) && (slope_err >= 0 )  ) {
+	if ( ! edm::isNotFinite(slope_err ) && (slope_err >= 0 )  ) {
 	  rateNormHistories_[i-1]->setBinError(nL,slope_err);
 	  // set the current rate(s)
 	  hltCurrentNormRate_[(i-1)/kPerHisto]->setBinError(i%kPerHisto, slope_err);
Index: DQMOffline/RecoB/plugins/PrimaryVertexMonitor.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/DQMOffline/RecoB/plugins/PrimaryVertexMonitor.cc,v
retrieving revision 1.10
diff -u -r1.10 PrimaryVertexMonitor.cc
--- DQMOffline/RecoB/plugins/PrimaryVertexMonitor.cc	5 Apr 2012 20:20:10 -0000	1.10
+++ DQMOffline/RecoB/plugins/PrimaryVertexMonitor.cc	23 Oct 2012 20:14:46 -0000
@@ -1,6 +1,7 @@
 #include "DQMOffline/RecoB/plugins/PrimaryVertexMonitor.h"
 #include "FWCore/ServiceRegistry/interface/Service.h"
 #include "FWCore/Framework/interface/MakerMacros.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/VertexReco/interface/VertexFwd.h"
 #include "CommonTools/Statistics/interface/ChiSquaredProbability.h"
@@ -172,15 +173,15 @@
       yerrVsTrks[i]->Fill(weight, v.yError()*10000);
       zerrVsTrks[i]->Fill(weight, v.zError()*10000);
 
-      nans[i]->Fill(1.,std::isnan(v.position().x())*1.);
-      nans[i]->Fill(2.,std::isnan(v.position().y())*1.);
-      nans[i]->Fill(3.,std::isnan(v.position().z())*1.);
+      nans[i]->Fill(1.,edm::isNotFinite(v.position().x())*1.);
+      nans[i]->Fill(2.,edm::isNotFinite(v.position().y())*1.);
+      nans[i]->Fill(3.,edm::isNotFinite(v.position().z())*1.);
 
       int index = 3;
       for (int i = 0; i != 3; i++) {
 	for (int j = i; j != 3; j++) {
 	  index++;
-	  nans[i]->Fill(index*1., std::isnan(v.covariance(i, j))*1.);
+	  nans[i]->Fill(index*1., edm::isNotFinite(v.covariance(i, j))*1.);
 	  // in addition, diagonal element must be positive
 	  if (j == i && v.covariance(i, j) < 0) {
 	    nans[i]->Fill(index*1., 1.);
Index: DataFormats/BTauReco/interface/CombinedTauTagInfo.h
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/DataFormats/BTauReco/interface/CombinedTauTagInfo.h,v
retrieving revision 1.17
diff -u -r1.17 CombinedTauTagInfo.h
--- DataFormats/BTauReco/interface/CombinedTauTagInfo.h	27 May 2009 12:51:11 -0000	1.17
+++ DataFormats/BTauReco/interface/CombinedTauTagInfo.h	23 Oct 2012 20:14:46 -0000
@@ -18,6 +18,7 @@
 #include "DataFormats/JetReco/interface/JetTracksAssociation.h"
 #include "DataFormats/BTauReco/interface/JTATagInfo.h"
 #include "DataFormats/BTauReco/interface/IsolatedTauTagInfo.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 namespace reco {
 
@@ -57,7 +58,7 @@
     // float discriminator() returns 0.        if candidate did not pass tracker selection,   
     //                               1.        if candidate passed tracker selection and did not contain neutral ECAL clus.,   
     //                               0<=  <=1  if candidate passed tracker selection, contained neutral ECAL clus. and went through the likelihood ratio mechanism,   
-    //                               NaN       the values of the likelihood functions PDFs are 0 (test the result of discriminator() with bool isnan(.));   
+    //                               NaN       the values of the likelihood functions PDFs are 0 (test the result of discriminator() with bool edm::isNotFinite(.));   
     
     //the reference to the IsolatedTauTagInfo
     const IsolatedTauTagInfoRef & isolatedtautaginfoRef() const { return IsolatedTauTagInfoRef_; }
Index: DataFormats/BTauReco/interface/PFCombinedTauTagInfo.h
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/DataFormats/BTauReco/interface/PFCombinedTauTagInfo.h,v
retrieving revision 1.10
diff -u -r1.10 PFCombinedTauTagInfo.h
--- DataFormats/BTauReco/interface/PFCombinedTauTagInfo.h	6 Aug 2010 20:24:24 -0000	1.10
+++ DataFormats/BTauReco/interface/PFCombinedTauTagInfo.h	23 Oct 2012 20:14:46 -0000
@@ -16,6 +16,7 @@
 #include "DataFormats/ParticleFlowCandidate/interface/PFCandidateFwd.h"
 #include "DataFormats/BTauReco/interface/BaseTagInfo.h"
 #include "DataFormats/BTauReco/interface/PFIsolatedTauTagInfo.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 
@@ -83,7 +84,7 @@
     // float JetTag::discriminator() returns 0.        if candidate did not pass PF charged hadron candidates selection,   
     //                                       1.        if candidate passed PF charged hadron candidates selection and did not contain PF gamma candidate(s),   
     //                                       0<=  <=1  if candidate passed PF charged hadron candidates selection, contained PF gamma candidate(s) and went through the likelihood ratio mechanism,   
-    //                                       NaN       the values of the likelihood functions PDFs are 0 (test the result of discriminator() with bool isnan(.));   
+    //                                       NaN       the values of the likelihood functions PDFs are 0 (test the result of discriminator() with bool edm::isNotFinite(.));   
     //computed with the parameters taken from the RecoTauTag/PFCombinedTauTag/data/ .cfi files
     
     bool selectedByPFChargedHadrCands()const{return(candidate_selectedByPFChargedHadrCands_);}
Index: EventFilter/StorageManager/test/MonitoredQuantity_t.cpp
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/EventFilter/StorageManager/test/MonitoredQuantity_t.cpp,v
retrieving revision 1.7
diff -u -r1.7 MonitoredQuantity_t.cpp
--- EventFilter/StorageManager/test/MonitoredQuantity_t.cpp	7 Mar 2011 15:31:32 -0000	1.7
+++ EventFilter/StorageManager/test/MonitoredQuantity_t.cpp	23 Oct 2012 20:14:46 -0000
@@ -7,6 +7,7 @@
 
 #include "EventFilter/StorageManager/interface/MonitoredQuantity.h"
 #include "EventFilter/StorageManager/interface/Utils.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 /////////////////////////////////////////////////////////////
 //
Index: FWCore/Utilities/test/Math_t.cpp
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/FWCore/Utilities/test/Attic/Math_t.cpp,v
retrieving revision 1.6
diff -u -r1.6 Math_t.cpp
--- FWCore/Utilities/test/Math_t.cpp	6 Aug 2012 21:49:46 -0000	1.6
+++ FWCore/Utilities/test/Math_t.cpp	23 Oct 2012 20:14:46 -0000
@@ -3,6 +3,7 @@
 
 #include "FWCore/Utilities/interface/math.h"
 #include "FWCore/Utilities/interface/HRRealTime.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include <Utilities/Testing/interface/CppUnit_testdriver.icpp>
 #include <cppunit/extensions/HelperMacros.h>
@@ -27,15 +28,15 @@
   CPPUNIT_ASSERT(std::numeric_limits<FP>::is_specialized);
   CPPUNIT_ASSERT(std::numeric_limits<FP>::has_quiet_NaN);
   FP nan = std::numeric_limits<FP>::quiet_NaN();
-  CPPUNIT_ASSERT(!edm::isnan(static_cast<FP>(1.0)));
-  CPPUNIT_ASSERT(!edm::isnan(static_cast<FP>(-1.0)));
-  CPPUNIT_ASSERT(!edm::isnan(static_cast<FP>(0.0)));
-  CPPUNIT_ASSERT(!edm::isnan(static_cast<FP>(-0.0)));
-  CPPUNIT_ASSERT(!edm::isnan(std::numeric_limits<FP>::infinity()));
-  CPPUNIT_ASSERT(!edm::isnan(-std::numeric_limits<FP>::infinity()));
+  CPPUNIT_ASSERT(!edm::isNotFinite(static_cast<FP>(1.0)));
+  CPPUNIT_ASSERT(!edm::isNotFinite(static_cast<FP>(-1.0)));
+  CPPUNIT_ASSERT(!edm::isNotFinite(static_cast<FP>(0.0)));
+  CPPUNIT_ASSERT(!edm::isNotFinite(static_cast<FP>(-0.0)));
+  CPPUNIT_ASSERT(!edm::isNotFinite(std::numeric_limits<FP>::infinity()));
+  CPPUNIT_ASSERT(!edm::isNotFinite(-std::numeric_limits<FP>::infinity()));
 
-  CPPUNIT_ASSERT(edm::isnan(nan));
-  CPPUNIT_ASSERT(edm::isnan(std::numeric_limits<FP>::signaling_NaN()));
+  CPPUNIT_ASSERT(edm::isNotFinite(nan));
+  CPPUNIT_ASSERT(edm::isNotFinite(std::numeric_limits<FP>::signaling_NaN()));
 }
 
 
@@ -48,9 +49,8 @@
   test_fp_type<double>();
   test_fp_type<long double>();
 
-  CPPUNIT_ASSERT(edm::isnan(std::numeric_limits<float>::quiet_NaN()));
-  CPPUNIT_ASSERT(edm::isnan(std::numeric_limits<double>::quiet_NaN()));
-  CPPUNIT_ASSERT(edm::isnan(std::numeric_limits<long double>::quiet_NaN()));
+  CPPUNIT_ASSERT(edm::isNotFinite(std::numeric_limits<float>::quiet_NaN()));
+  CPPUNIT_ASSERT(edm::isNotFinite(std::numeric_limits<double>::quiet_NaN()));
 }
 
 template <class FP>
@@ -81,9 +81,9 @@
   start = edm::hrRealTime();
   for (int i = 0; i < 1000*1000; ++i)
     for (int j = 0; j < 5; ++j)
-      sum += (edm::isnan(values[j]) ? 0 : 1);
+      sum += (edm::isNotFinite(values[j]) ? 0 : 1);
   stop = edm::hrRealTime();
-  std::cout << "edm::isnan time:         " << (stop - start) << std::endl;
+  std::cout << "edm::isNotFinite time:         " << (stop - start) << std::endl;
 
   sum = 0;
   start = edm::hrRealTime();
@@ -101,6 +101,4 @@
   time_fp_type<float>();
   std::cout << "\ntiming doubles\n";
   time_fp_type<double>();
-  std::cout << "\ntiming long doubles\n";
-  time_fp_type<long double>();
 }
Index: MagneticField/VolumeBasedEngine/src/MagGeometry.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/MagneticField/VolumeBasedEngine/src/MagGeometry.cc,v
retrieving revision 1.20
diff -u -r1.20 MagGeometry.cc
--- MagneticField/VolumeBasedEngine/src/MagGeometry.cc	21 Mar 2012 23:01:46 -0000	1.20
+++ MagneticField/VolumeBasedEngine/src/MagGeometry.cc	23 Oct 2012 20:14:46 -0000
@@ -15,6 +15,7 @@
 #include "Utilities/BinningTools/interface/PeriodicBinFinderInPhi.h"
 
 #include <FWCore/ParameterSet/interface/ParameterSet.h>
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "MagneticField/Layers/interface/MagVerbosity.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
@@ -91,7 +92,7 @@
   
   // Fall-back case: no volume found
   
-  if (isnan(gp.mag())) {
+  if (edm::isNotFinite(gp.mag())) {
     LogWarning("InvalidInput") << "Input value invalid (not a number): " << gp << endl;
       
   } else {
Index: PhysicsTools/MVAComputer/src/ProcLikelihood.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/PhysicsTools/MVAComputer/src/ProcLikelihood.cc,v
retrieving revision 1.15
diff -u -r1.15 ProcLikelihood.cc
--- PhysicsTools/MVAComputer/src/ProcLikelihood.cc	26 Jan 2010 19:40:04 -0000	1.15
+++ PhysicsTools/MVAComputer/src/ProcLikelihood.cc	23 Oct 2012 20:14:46 -0000
@@ -23,6 +23,7 @@
 #include "PhysicsTools/MVAComputer/interface/VarProcessor.h"
 #include "PhysicsTools/MVAComputer/interface/Calibration.h"
 #include "PhysicsTools/MVAComputer/interface/Spline.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 using namespace PhysicsTools;
 
@@ -393,10 +394,10 @@
 				signal *= signalProb;
 				background *= backgroundProb;
 				double s = signalDiff / signalProb;
-				if (std::isinf(s) || std::isnan(s))
+				if (std::isinf(s) || edm::isNotFinite(s))
 					s = 0.0;
 				double b = backgroundDiff / backgroundProb;
-				if (std::isinf(b) || std::isnan(b))
+				if (std::isinf(b) || edm::isNotFinite(b))
 					b = 0.0;
 
 				result[j] = s - b;
Index: PhysicsTools/PatAlgos/plugins/PATElectronProducer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/PhysicsTools/PatAlgos/plugins/PATElectronProducer.cc,v
retrieving revision 1.60
diff -u -r1.60 PATElectronProducer.cc
--- PhysicsTools/PatAlgos/plugins/PATElectronProducer.cc	21 May 2012 21:26:04 -0000	1.60
+++ PhysicsTools/PatAlgos/plugins/PATElectronProducer.cc	23 Oct 2012 20:14:46 -0000
@@ -5,6 +5,7 @@
 
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "FWCore/ParameterSet/interface/FileInPath.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/Common/interface/Association.h"
 #include "DataFormats/Common/interface/ValueMap.h"
@@ -372,7 +373,7 @@
           double sigmaIphiIphi;
           double sigmaIetaIphi;
           std::vector<float> vCov = lazyTools.localCovariances(*( itElectron->superCluster()->seed()));
-          if( !isnan(vCov[2])) sigmaIphiIphi = sqrt(vCov[2]);
+          if( !edm::isNotFinite(vCov[2])) sigmaIphiIphi = sqrt(vCov[2]);
           else sigmaIphiIphi = 0;
           sigmaIetaIphi = vCov[1];
           anElectron.setMvaVariables( r9, sigmaIphiIphi, sigmaIetaIphi, ip3d);
@@ -525,7 +526,7 @@
       double sigmaIphiIphi;
       double sigmaIetaIphi;
       std::vector<float> vCov = lazyTools.localCovariances(*( itElectron->superCluster()->seed()));
-      if( !isnan(vCov[2])) sigmaIphiIphi = sqrt(vCov[2]);
+      if( !edm::isNotFinite(vCov[2])) sigmaIphiIphi = sqrt(vCov[2]);
       else sigmaIphiIphi = 0;
       sigmaIetaIphi = vCov[1];
       anElectron.setMvaVariables( r9, sigmaIphiIphi, sigmaIetaIphi, ip3d);
Index: RecoEgamma/EgammaElectronAlgos/src/GsfElectronAlgo.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoEgamma/EgammaElectronAlgos/src/GsfElectronAlgo.cc,v
retrieving revision 1.135
diff -u -r1.135 GsfElectronAlgo.cc
--- RecoEgamma/EgammaElectronAlgos/src/GsfElectronAlgo.cc	27 Apr 2012 12:50:06 -0000	1.135
+++ RecoEgamma/EgammaElectronAlgos/src/GsfElectronAlgo.cc	23 Oct 2012 20:14:46 -0000
@@ -37,6 +37,7 @@
 
 
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 
@@ -540,7 +541,7 @@
   std::vector<float> localCovariances = EcalClusterTools::localCovariances(seedCluster,recHits,topology,recHitFlagsToBeExcluded,recHitSeverityToBeExcluded,severityLevelAlgo) ;
   showerShape.sigmaEtaEta = sqrt(covariances[0]) ;
   showerShape.sigmaIetaIeta = sqrt(localCovariances[0]) ;
-  if (!isnan(localCovariances[2])) showerShape.sigmaIphiIphi = sqrt(localCovariances[2]) ;
+  if (!edm::isNotFinite(localCovariances[2])) showerShape.sigmaIphiIphi = sqrt(localCovariances[2]) ;
   showerShape.e1x5 = EcalClusterTools::e1x5(seedCluster,recHits,topology,recHitFlagsToBeExcluded,recHitSeverityToBeExcluded,severityLevelAlgo)  ;
   showerShape.e2x5Max = EcalClusterTools::e2x5Max(seedCluster,recHits,topology,recHitFlagsToBeExcluded,recHitSeverityToBeExcluded,severityLevelAlgo)  ;
   showerShape.e5x5 = EcalClusterTools::e5x5(seedCluster,recHits,topology,recHitFlagsToBeExcluded,recHitSeverityToBeExcluded,severityLevelAlgo) ;
Index: RecoEgamma/EgammaPhotonAlgos/src/ConversionFastHelix.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoEgamma/EgammaPhotonAlgos/src/ConversionFastHelix.cc,v
retrieving revision 1.14
diff -u -r1.14 ConversionFastHelix.cc
--- RecoEgamma/EgammaPhotonAlgos/src/ConversionFastHelix.cc	22 Dec 2011 09:36:38 -0000	1.14
+++ RecoEgamma/EgammaPhotonAlgos/src/ConversionFastHelix.cc	23 Oct 2012 20:14:46 -0000
@@ -3,6 +3,7 @@
 #include "TrackingTools/TrajectoryParametrization/interface/GlobalTrajectoryParameters.h"
 #include "TrackingTools/TrajectoryParametrization/interface/CurvilinearTrajectoryError.h"
 #include "TrackingTools/TrajectoryParametrization/interface/CartesianTrajectoryError.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 #include <cfloat>
@@ -112,7 +113,7 @@
     double z_0 = 0; 
     
     //std::cout << " ConversionFastHelix:helixStateAtVertex  flfit.n2() " <<  flfit.n2() << " flfit.c() " << flfit.c() << " flfit.n2() " << flfit.n2() << std::endl;
-    if ( flfit.n2() !=0 && !std::isnan( flfit.c()) && !std::isnan(flfit.n2())   ) {
+    if ( flfit.n2() !=0 && !edm::isNotFinite( flfit.c()) && !edm::isNotFinite(flfit.n2())   ) {
       //  std::cout << " Accepted " << std::endl;
       z_0 = -flfit.c()/flfit.n2();
       double dzdrphi = -flfit.n1()/flfit.n2();
@@ -207,7 +208,7 @@
   FastLine flfit(theOuterHit, theMiddleHit);
 
   double z_0 = 0;
-  if (flfit.n2() !=0  && !std::isnan( flfit.c()) && !std::isnan(flfit.n2())   ) {
+  if (flfit.n2() !=0  && !edm::isNotFinite( flfit.c()) && !edm::isNotFinite(flfit.n2())   ) {
     z_0 = -flfit.c()/flfit.n2();
 
     double dzdr = -flfit.n1()/flfit.n2();
Index: RecoJets/FFTJetProducers/src/FFTJetInterface.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoJets/FFTJetProducers/src/FFTJetInterface.cc,v
retrieving revision 1.3
diff -u -r1.3 FFTJetInterface.cc
--- RecoJets/FFTJetProducers/src/FFTJetInterface.cc	8 Feb 2011 12:00:35 -0000	1.3
+++ RecoJets/FFTJetProducers/src/FFTJetInterface.cc	23 Oct 2012 20:14:46 -0000
@@ -3,6 +3,7 @@
 #include "RecoJets/FFTJetProducers/interface/FFTJetInterface.h"
 
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/JetReco/interface/Jet.h"
 #include "DataFormats/CaloTowers/interface/CaloTower.h"
@@ -100,7 +101,7 @@
         const reco::Candidate& item(*it);
         if (anomalous(item))
             continue;
-        if (std::isnan(item.pt()))
+        if (edm::isNotFinite(item.pt()))
             continue;
 
         if (adjustForVertex)
Index: RecoJets/JetProducers/plugins/SubEventGenJetProducer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoJets/JetProducers/plugins/SubEventGenJetProducer.cc,v
retrieving revision 1.9
diff -u -r1.9 SubEventGenJetProducer.cc
--- RecoJets/JetProducers/plugins/SubEventGenJetProducer.cc	9 Mar 2011 12:12:02 -0000	1.9
+++ RecoJets/JetProducers/plugins/SubEventGenJetProducer.cc	23 Oct 2012 20:14:46 -0000
@@ -2,6 +2,7 @@
 #include "FWCore/Framework/interface/MakerMacros.h"
 #include "RecoJets/JetProducers/plugins/SubEventGenJetProducer.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "RecoJets/JetProducers/interface/JetSpecific.h"
 #include "DataFormats/HepMCCandidate/interface/GenParticle.h"
 
@@ -51,7 +52,7 @@
       inEnd = inputs_.end(), i = inBegin;
    for (; i != inEnd; ++i ) {
       reco::CandidatePtr input = inputs_[i - inBegin];
-      if (std::isnan(input->pt()))           continue;
+      if (edm::isNotFinite(input->pt()))           continue;
       if (input->et()    <inputEtMin_)  continue;
       if (input->energy()<inputEMin_)   continue;
       if (isAnomalousTower(input))      continue;
Index: RecoJets/JetProducers/plugins/VirtualJetProducer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoJets/JetProducers/plugins/VirtualJetProducer.cc,v
retrieving revision 1.38
diff -u -r1.38 VirtualJetProducer.cc
--- RecoJets/JetProducers/plugins/VirtualJetProducer.cc	14 Feb 2012 19:43:31 -0000	1.38
+++ RecoJets/JetProducers/plugins/VirtualJetProducer.cc	23 Oct 2012 20:14:46 -0000
@@ -17,6 +17,7 @@
 #include "FWCore/Utilities/interface/Exception.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "FWCore/Framework/interface/MakerMacros.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/Common/interface/View.h"
 #include "DataFormats/Common/interface/Handle.h"
@@ -394,7 +395,7 @@
     inEnd = inputs_.end(), i = inBegin;
   for (; i != inEnd; ++i ) {
     reco::CandidatePtr input = *i;
-    if (std::isnan(input->pt()))           continue;
+    if (edm::isNotFinite(input->pt()))           continue;
     if (input->et()    <inputEtMin_)  continue;
     if (input->energy()<inputEMin_)   continue;
     if (isAnomalousTower(input))      continue;
@@ -573,7 +574,7 @@
 	}
       */
       clusterSequenceWithArea->get_median_rho_and_sigma(*fjRangeDef_,false,*rho,*sigma,mean_area);
-      if((*rho < 0)|| (std::isnan(*rho))) {
+      if((*rho < 0)|| (edm::isNotFinite(*rho))) {
 	edm::LogError("BadRho") << "rho value is " << *rho << " area:" << mean_area << " and n_empty_jets: " << clusterSequenceWithArea->n_empty_jets(*fjRangeDef_) << " with range " << fjRangeDef_->description()
 				<<". Setting rho to rezo.";
 	*rho = 0;
Index: RecoLocalCalo/EcalRecAlgos/interface/EcalUncalibRecHitFixedAlphaBetaAlgo.h
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoLocalCalo/EcalRecAlgos/interface/EcalUncalibRecHitFixedAlphaBetaAlgo.h,v
retrieving revision 1.26
diff -u -r1.26 EcalUncalibRecHitFixedAlphaBetaAlgo.h
--- RecoLocalCalo/EcalRecAlgos/interface/EcalUncalibRecHitFixedAlphaBetaAlgo.h	4 Oct 2010 17:34:58 -0000	1.26
+++ RecoLocalCalo/EcalRecAlgos/interface/EcalUncalibRecHitFixedAlphaBetaAlgo.h	23 Oct 2012 20:14:46 -0000
@@ -17,6 +17,7 @@
 #include "RecoLocalCalo/EcalRecAlgos/interface/EcalUncalibRecHitRecAbsAlgo.h"
 
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include <vector>
 #include <string>
@@ -333,7 +334,7 @@
     // Probably the fastest way to protect against
     // +-inf value in the matrix DM1_ after inversion
     // (which is nevertheless flagged as successfull...)
-    if ( std::isnan( PROD[0] ) ) {
+    if ( edm::isNotFinite( PROD[0] ) ) {
             InitFitParameters(samples,max_sample);
             return -103 ;
     }
Index: RecoMuon/GlobalTrackingTools/plugins/GlobalTrackQualityProducer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoMuon/GlobalTrackingTools/plugins/GlobalTrackQualityProducer.cc,v
retrieving revision 1.7
diff -u -r1.7 GlobalTrackQualityProducer.cc
--- RecoMuon/GlobalTrackingTools/plugins/GlobalTrackQualityProducer.cc	28 Oct 2011 22:10:33 -0000	1.7
+++ RecoMuon/GlobalTrackingTools/plugins/GlobalTrackQualityProducer.cc	23 Oct 2012 20:14:46 -0000
@@ -15,6 +15,7 @@
 // user include files
 #include "FWCore/Framework/interface/Frameworkfwd.h"
 #include "FWCore/Framework/interface/EDProducer.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "CommonTools/Statistics/interface/ChiSquaredProbability.h"
 #include "RecoMuon/GlobalTrackingTools/plugins/GlobalTrackQualityProducer.h"
@@ -202,9 +203,9 @@
 	 && !std::isinf(rhit->localPositionError().xx()) //this is paranoia induced by reported case
 	 && !std::isinf(rhit->localPositionError().xy()) //it's better to track down the origin of bad numbers
 	 && !std::isinf(rhit->localPositionError().yy())
-	 && !std::isnan(rhit->localPositionError().xx()) //this is paranoia induced by reported case
-	 && !std::isnan(rhit->localPositionError().xy()) //it's better to track down the origin of bad numbers
-	 && !std::isnan(rhit->localPositionError().yy())
+	 && !edm::isNotFinite(rhit->localPositionError().xx()) //this is paranoia induced by reported case
+	 && !edm::isNotFinite(rhit->localPositionError().xy()) //it's better to track down the origin of bad numbers
+	 && !edm::isNotFinite(rhit->localPositionError().yy())
 	 ) {
 
       double phi1 = tsos.globalPosition().phi();
Index: RecoMuon/MuonIdentification/test/MuonTimingValidator.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoMuon/MuonIdentification/test/MuonTimingValidator.cc,v
retrieving revision 1.9
diff -u -r1.9 MuonTimingValidator.cc
--- RecoMuon/MuonIdentification/test/MuonTimingValidator.cc	25 Mar 2010 14:08:50 -0000	1.9
+++ RecoMuon/MuonIdentification/test/MuonTimingValidator.cc	23 Oct 2012 20:14:46 -0000
@@ -18,6 +18,7 @@
 //
 
 #include "RecoMuon/MuonIdentification/test/MuonTimingValidator.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 // system include files
 #include <memory>
@@ -580,7 +581,7 @@
     Float_t eff = hout->GetBinContent(i) ;
     Float_t Err = 0.;
     if (tot > 0) Err = tot_e / tot * sqrt( eff* (1-eff) );
-    if (eff == 1. || isnan(Err) || !std::isfinite(Err) ) Err=1.e-3;
+    if (eff == 1. || edm::isNotFinite(Err) || !std::isfinite(Err) ) Err=1.e-3;
     hout->SetBinError(i, Err);
   }
   return hout;
Index: RecoPixelVertexing/PixelVertexFinding/src/DivisiveVertexFinder.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoPixelVertexing/PixelVertexFinding/src/DivisiveVertexFinder.cc,v
retrieving revision 1.12
diff -u -r1.12 DivisiveVertexFinder.cc
--- RecoPixelVertexing/PixelVertexFinding/src/DivisiveVertexFinder.cc	17 Aug 2010 23:05:31 -0000	1.12
+++ RecoPixelVertexing/PixelVertexFinding/src/DivisiveVertexFinder.cc	23 Oct 2012 20:14:46 -0000
@@ -4,6 +4,7 @@
 #include "DataFormats/GeometryCommonDetAlgo/interface/Measurement1D.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "RecoPixelVertexing/PixelVertexFinding/interface/PVClusterComparer.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include <utility>
 #include <vector>
 #include <map>
@@ -39,7 +40,7 @@
   reco::Vertex v( reco::Vertex::Point(0,0,vz.value()), err, 0, 1, trks.size() );
     for (unsigned int i=0; i<trks.size(); i++) {
       double vz = trks[i]->vz();
-      if(std::isnan(vz)) continue;
+      if(edm::isNotFinite(vz)) continue;
       v.add(reco::TrackBaseRef(trks[i]));
     }
     
@@ -59,7 +60,7 @@
   //  std::vector< std::vector< const reco::Track* > > trkps;
   for (unsigned int i=0; i<trks.size(); ++i) {
     double vz = trks[i]->vz();
-    if(std::isnan(vz)) continue;
+    if(edm::isNotFinite(vz)) continue;
     std::vector< const reco::Track* > temp;
     temp.clear();
     temp.push_back( &(*trks[i]) );
Index: RecoTauTag/RecoTau/plugins/CaloRecoTauDiscriminationAgainstElectron.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoTauTag/RecoTau/plugins/CaloRecoTauDiscriminationAgainstElectron.cc,v
retrieving revision 1.4
diff -u -r1.4 CaloRecoTauDiscriminationAgainstElectron.cc
--- RecoTauTag/RecoTau/plugins/CaloRecoTauDiscriminationAgainstElectron.cc	28 Oct 2010 14:26:34 -0000	1.4
+++ RecoTauTag/RecoTau/plugins/CaloRecoTauDiscriminationAgainstElectron.cc	23 Oct 2012 20:14:46 -0000
@@ -2,6 +2,7 @@
 
 #include "MagneticField/Records/interface/IdealMagneticFieldRecord.h"
 #include "RecoTauTag/TauTagTools/interface/TauTagTools.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 /* class CaloRecoTauDiscriminationAgainstElectron
  * created : Feb 17 2008,
@@ -48,7 +49,7 @@
 {
    if (ApplyCut_maxleadTrackHCAL3x3hottesthitDEta_){
       // optional selection : ask for small |deta| between direction of propag. leading Track - ECAL inner surf. contact point and direction of highest Et hit among HCAL hits inside a 3x3 calo. tower matrix centered on direction of propag. leading Track - ECAL inner surf. contact point
-      if (std::isnan((*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()) || (*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()>maxleadTrackHCAL3x3hottesthitDEta_) return 0.;
+      if (edm::isNotFinite((*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()) || (*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()>maxleadTrackHCAL3x3hottesthitDEta_) return 0.;
    }
    if (ApplyCut_leadTrackavoidsECALcrack_){
       // optional selection : ask that leading track - ECAL inner surface contact point does not fall inside any ECAL eta crack 
@@ -63,7 +64,7 @@
          return 0.;
       }     
    }
-   if (std::isnan((*theCaloTauRef).leadTrackHCAL3x3hitsEtSum()))
+   if (edm::isNotFinite((*theCaloTauRef).leadTrackHCAL3x3hitsEtSum()))
    {
       return 0.;
    } else
@@ -89,7 +90,7 @@
     }
     if (ApplyCut_maxleadTrackHCAL3x3hottesthitDEta_){
       // optional selection : ask for small |deta| between direction of propag. leading Track - ECAL inner surf. contact point and direction of highest Et hit among HCAL hits inside a 3x3 calo. tower matrix centered on direction of propag. leading Track - ECAL inner surf. contact point
-      if (std::isnan((*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()) || (*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()>maxleadTrackHCAL3x3hottesthitDEta_){
+      if (edm::isNotFinite((*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()) || (*theCaloTauRef).leadTrackHCAL3x3hottesthitDEta()>maxleadTrackHCAL3x3hottesthitDEta_){
 	theCaloTauDiscriminatorAgainstElectron->setValue(iCaloTau,0);
 	continue;
       }
@@ -110,7 +111,7 @@
 	continue;
       }     
     }
-    if (std::isnan((*theCaloTauRef).leadTrackHCAL3x3hitsEtSum())){
+    if (edm::isNotFinite((*theCaloTauRef).leadTrackHCAL3x3hitsEtSum())){
       theCaloTauDiscriminatorAgainstElectron->setValue(iCaloTau,0);
     }else{
       if ((*theCaloTauRef).leadTrackHCAL3x3hitsEtSum()/(*theCaloTauRef).leadTrack()->pt()<=leadTrack_HCAL3x3hitsEtSumOverPt_minvalue_) theCaloTauDiscriminatorAgainstElectron->setValue(iCaloTau,0);
Index: RecoTauTag/RecoTau/src/RecoTauMVAHelper.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoTauTag/RecoTau/src/RecoTauMVAHelper.cc,v
retrieving revision 1.9
diff -u -r1.9 RecoTauMVAHelper.cc
--- RecoTauTag/RecoTau/src/RecoTauMVAHelper.cc	18 Mar 2011 15:46:36 -0000	1.9
+++ RecoTauTag/RecoTau/src/RecoTauMVAHelper.cc	23 Oct 2012 20:14:46 -0000
@@ -10,6 +10,7 @@
 #include "RecoTauTag/RecoTau/interface/RecoTauDiscriminantPlugins.h"
 
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 namespace reco { namespace tau {
 
@@ -85,7 +86,7 @@
     std::vector<double> pluginOutput = (plugin->second)->operator()(tau);
     // Check for nans
     for(size_t instance = 0; instance < pluginOutput.size(); ++instance) {
-      if (std::isnan(pluginOutput[instance])) {
+      if (edm::isNotFinite(pluginOutput[instance])) {
         std::ostringstream error;
         error << "A nan was detected in"
             << " the tau MVA variable " << id << " returning zero instead!"
Index: RecoTracker/CkfPattern/src/CkfTrackCandidateMakerBase.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoTracker/CkfPattern/src/CkfTrackCandidateMakerBase.cc,v
retrieving revision 1.50
diff -u -r1.50 CkfTrackCandidateMakerBase.cc
--- RecoTracker/CkfPattern/src/CkfTrackCandidateMakerBase.cc	26 Sep 2012 14:52:11 -0000	1.50
+++ RecoTracker/CkfPattern/src/CkfTrackCandidateMakerBase.cc	23 Oct 2012 20:14:46 -0000
@@ -5,6 +5,7 @@
 #include "FWCore/Framework/interface/ESHandle.h"
 #include "FWCore/Framework/interface/EventSetup.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/Common/interface/OwnVector.h"
 #include "DataFormats/TrackCandidate/interface/TrackCandidateCollection.h"
@@ -347,7 +348,7 @@
 	   theInitialState->innerState( *it , doBackFit);
 
 	 // temporary protection againt invalid initial states
-	 if (! initState.first.isValid() || initState.second == 0 || std::isnan(initState.first.globalPosition().x())) {
+	 if (! initState.first.isValid() || initState.second == 0 || edm::isNotFinite(initState.first.globalPosition().x())) {
 	   //cout << "invalid innerState, will not make TrackCandidate" << endl;
 	   continue;
 	 }
Index: RecoTracker/ConversionSeedGenerators/src/PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoTracker/ConversionSeedGenerators/src/PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.cc,v
retrieving revision 1.7
diff -u -r1.7 PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.cc
--- RecoTracker/ConversionSeedGenerators/src/PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.cc	22 Aug 2012 14:44:31 -0000	1.7
+++ RecoTracker/ConversionSeedGenerators/src/PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.cc	23 Oct 2012 20:14:46 -0000
@@ -1,5 +1,6 @@
 #include "RecoTracker/ConversionSeedGenerators/interface/PhotonConversionTrajectorySeedProducerFromSingleLegAlgo.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 //#define debugTSPFSLA
 
@@ -300,7 +301,7 @@
 
   _IdealHelixParameters.setData(track,primaryVertexPoint);   
     
-  if (std::isnan(_IdealHelixParameters.GetTangentPoint().r()) || 
+  if (edm::isNotFinite(_IdealHelixParameters.GetTangentPoint().r()) || 
 	(_IdealHelixParameters.GetTangentPoint().r()==0)){
     //this case means a null results on the _IdealHelixParameters side
     return false;
Index: RecoTracker/SpecialSeedGenerators/src/SimpleCosmicBONSeeder.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoTracker/SpecialSeedGenerators/src/SimpleCosmicBONSeeder.cc,v
retrieving revision 1.19
diff -u -r1.19 SimpleCosmicBONSeeder.cc
--- RecoTracker/SpecialSeedGenerators/src/SimpleCosmicBONSeeder.cc	17 Jan 2012 14:08:57 -0000	1.19
+++ RecoTracker/SpecialSeedGenerators/src/SimpleCosmicBONSeeder.cc	23 Oct 2012 20:14:46 -0000
@@ -8,6 +8,7 @@
 #include "RecoTracker/SpecialSeedGenerators/interface/SimpleCosmicBONSeeder.h"
 #include "DataFormats/TrackerRecHit2D/interface/SiStripMatchedRecHit2D.h"
 #include "DataFormats/TrackerRecHit2D/interface/SiStripRecHit2D.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 typedef TransientTrackingRecHit::ConstRecHitPointer SeedingHit;
 
 #include <numeric>
@@ -472,7 +473,7 @@
         float        ch = pq.second; 
         float Mom = sqrt( gv.x()*gv.x() + gv.y()*gv.y() + gv.z()*gv.z() ); 
 
-        if(Mom > 10000 || isnan(Mom))  { 
+        if(Mom > 10000 || edm::isNotFinite(Mom))  { 
             if (seedVerbosity_ > 1)
                 std::cout << "Processing triplet " << it << ": fail for momentum." << std::endl; 
             continue;
Index: RecoVertex/BeamSpotProducer/src/BSFitter.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoVertex/BeamSpotProducer/src/BSFitter.cc,v
retrieving revision 1.24
diff -u -r1.24 BSFitter.cc
--- RecoVertex/BeamSpotProducer/src/BSFitter.cc	18 Feb 2011 22:16:38 -0000	1.24
+++ RecoVertex/BeamSpotProducer/src/BSFitter.cc	23 Oct 2012 20:14:46 -0000
@@ -27,6 +27,7 @@
 #include "RecoVertex/BeamSpotProducer/interface/BSFitter.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 // ROOT
 #include "TMatrixD.h"
@@ -210,7 +211,7 @@
                 
                 reco::BeamSpot tmp_lh = Fit_d_z_likelihood(tmp_par,tmp_error_par);
                 
-                if ( isnan(ff_minimum) || std::isinf(ff_minimum) ) {
+                if ( edm::isNotFinite(ff_minimum) || std::isinf(ff_minimum) ) {
                     edm::LogWarning("BSFitter") << "BSFitter: Result is non physical. Log-Likelihood fit to extract beam width did not converge." << std::endl;
                     tmp_lh.setType(reco::BeamSpot::Unknown);
                     return tmp_lh;                    
@@ -244,7 +245,7 @@
 			
 			reco::BeamSpot tmp_lh = Fit_dres_z_likelihood(tmp_par2);
 
-			if ( isnan(ff_minimum) || std::isinf(ff_minimum) ) {
+			if ( edm::isNotFinite(ff_minimum) || std::isinf(ff_minimum) ) {
 			
                 edm::LogWarning("BSFitter") << "Result is non physical. Log-Likelihood fit did not converge." << std::endl;
 				tmp_lh.setType(reco::BeamSpot::Unknown);
Index: RecoVertex/BeamSpotProducer/src/PVFitter.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoVertex/BeamSpotProducer/src/PVFitter.cc,v
retrieving revision 1.19
diff -u -r1.19 PVFitter.cc
--- RecoVertex/BeamSpotProducer/src/PVFitter.cc	5 Dec 2011 23:14:31 -0000	1.19
+++ RecoVertex/BeamSpotProducer/src/PVFitter.cc	23 Oct 2012 20:14:46 -0000
@@ -17,6 +17,7 @@
 #include "CondFormats/BeamSpotObjects/interface/BeamSpotObjects.h"
 
 #include "FWCore/Utilities/interface/InputTag.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "DataFormats/Common/interface/View.h"
 
 #include "DataFormats/TrackCandidate/interface/TrackCandidate.h"
@@ -440,7 +441,7 @@
       fwidthZerr = minuitx.GetParError(8);
 
       // check errors on widths and sigmaZ for nan
-      if ( isnan(fwidthXerr) || isnan(fwidthYerr) || isnan(fwidthZerr) ) {
+      if ( edm::isNotFinite(fwidthXerr) || edm::isNotFinite(fwidthYerr) || edm::isNotFinite(fwidthZerr) ) {
           edm::LogWarning("PVFitter") << "3D beam spot fit returns nan in 3rd iteration" << std::endl;
           return false;
       }
Index: RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc,v
retrieving revision 1.6
diff -u -r1.6 GsfVertexWeightCalculator.cc
--- RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc	28 Jan 2012 11:28:54 -0000	1.6
+++ RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc	23 Oct 2012 20:14:46 -0000
@@ -1,5 +1,6 @@
 #include "RecoVertex/GaussianSumVertexFit/interface/GsfVertexWeightCalculator.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include <cfloat>
 
@@ -51,7 +52,7 @@
   double chi = ROOT::Math::Similarity(diff,sigmaM);;  //SigmaM is now inverted !!!
   double weight = pow(2. * M_PI, -0.5 * 5) * sqrt(1./sigmaDet) * exp(-0.5 * chi);
 
-  if (std::isnan(weight) || sigmaDet<=0.) {
+  if (edm::isNotFinite(weight) || sigmaDet<=0.) {
     edm::LogWarning("GsfVertexWeightCalculator") << "Weight is NaN";
     return -1.;
   }
Index: RecoVertex/KinematicFit/src/KinematicConstrainedVertexUpdator.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoVertex/KinematicFit/src/KinematicConstrainedVertexUpdator.cc,v
retrieving revision 1.8
diff -u -r1.8 KinematicConstrainedVertexUpdator.cc
--- RecoVertex/KinematicFit/src/KinematicConstrainedVertexUpdator.cc	21 Mar 2011 11:25:14 -0000	1.8
+++ RecoVertex/KinematicFit/src/KinematicConstrainedVertexUpdator.cc	23 Oct 2012 20:14:46 -0000
@@ -1,5 +1,6 @@
 #include "RecoVertex/KinematicFit/interface/KinematicConstrainedVertexUpdator.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 KinematicConstrainedVertexUpdator::KinematicConstrainedVertexUpdator()
 { 
@@ -89,7 +90,7 @@
 
   //check for NaN
   for(int i = 1; i<=val.num_row();++i) {
-    if (std::isnan(val(i))) {
+    if (edm::isNotFinite(val(i))) {
       LogDebug("KinematicConstrainedVertexUpdator")
       << "catched NaN.\n";
       return std::pair<std::pair<std::vector<KinematicState>, AlgebraicMatrix>, RefCountedKinematicVertex >(
Index: RecoVertex/VertexTools/interface/SequentialVertexFitter.h
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/RecoVertex/VertexTools/interface/SequentialVertexFitter.h,v
retrieving revision 1.16
diff -u -r1.16 SequentialVertexFitter.h
--- RecoVertex/VertexTools/interface/SequentialVertexFitter.h	4 Oct 2010 21:16:01 -0000	1.16
+++ RecoVertex/VertexTools/interface/SequentialVertexFitter.h	23 Oct 2012 20:14:46 -0000
@@ -8,6 +8,7 @@
 #include "RecoVertex/VertexTools/interface/LinearizedTrackStateFactory.h"
 #include "RecoVertex/VertexTools/interface/VertexTrackFactory.h"
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include <cmath>
 // #include "TrackingTools/TransientTrack/interface/TransientTrack.h"
 // #include "Vertex/VertexPrimitives/interface/VertexSeedFactory.h"
@@ -242,7 +243,7 @@
    */
   inline bool hasNan(const GlobalPoint& point) const {
     using namespace std;
-    return (isnan(point.x())|| isnan(point.y()) || isnan(point.z()));
+    return (edm::isNotFinite(point.x())|| edm::isNotFinite(point.y()) || edm::isNotFinite(point.z()));
   }
 
 
Index: SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step234.C
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Attic/Analysis_Step234.C,v
retrieving revision 1.42
diff -u -r1.42 Analysis_Step234.C
--- SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step234.C	14 Nov 2011 21:28:24 -0000	1.42
+++ SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step234.C	23 Oct 2012 20:14:46 -0000
@@ -20,6 +20,7 @@
 #include "TRandom3.h"
 #include "TProfile.h"
 #include "TDirectory.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 namespace reco    { class Vertex; class Track; class GenParticle; class DeDxData; class MuonTimeExtra;}
 namespace susybsm { class HSCParticle; class HSCPIsolation;}
Index: SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step5.C
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step5.C,v
retrieving revision 1.31
diff -u -r1.31 Analysis_Step5.C
--- SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step5.C	21 Nov 2011 20:58:48 -0000	1.31
+++ SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step5.C	23 Oct 2012 20:14:46 -0000
@@ -28,6 +28,7 @@
 #include "Analysis_PlotFunction.h"
 #include "Analysis_PlotStructure.h"
 #include "Analysis_Samples.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 using namespace std;
 
Index: SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step6.C
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step6.C,v
retrieving revision 1.40
diff -u -r1.40 Analysis_Step6.C
--- SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step6.C	21 Nov 2011 20:58:48 -0000	1.40
+++ SUSYBSMAnalysis/HSCP/test/ICHEP_Analysis/Analysis_Step6.C	23 Oct 2012 20:14:46 -0000
@@ -27,6 +27,7 @@
 //#include "CL95.h"
 #include "roostats_cl95.C"
 #include "nSigma.C"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 using namespace std;
 
Index: SimCalorimetry/CaloSimAlgos/src/CaloHitRespoNew.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimCalorimetry/CaloSimAlgos/src/CaloHitRespoNew.cc,v
retrieving revision 1.7
diff -u -r1.7 CaloHitRespoNew.cc
--- SimCalorimetry/CaloSimAlgos/src/CaloHitRespoNew.cc	7 Jun 2012 18:12:36 -0000	1.7
+++ SimCalorimetry/CaloSimAlgos/src/CaloHitRespoNew.cc	23 Oct 2012 20:14:46 -0000
@@ -13,6 +13,7 @@
 #include "CLHEP/Random/RandPoissonQ.h"
 #include "CLHEP/Random/RandGaussQ.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "CLHEP/Units/GlobalPhysicalConstants.h"
 #include "CLHEP/Units/GlobalSystemOfUnits.h" 
@@ -216,7 +217,7 @@
 void 
 CaloHitRespoNew::add( const PCaloHit& hit ) 
 {
-      if( !isnan( hit.time() ) &&
+      if( !edm::isNotFinite( hit.time() ) &&
 	  ( 0 == m_hitFilter ||
 	    m_hitFilter->accepts( hit ) ) ) putAnalogSignal( hit ) ;
 }
Index: SimCalorimetry/CaloSimAlgos/src/CaloHitResponse.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimCalorimetry/CaloSimAlgos/src/CaloHitResponse.cc,v
retrieving revision 1.37
diff -u -r1.37 CaloHitResponse.cc
--- SimCalorimetry/CaloSimAlgos/src/CaloHitResponse.cc	2 Oct 2012 08:07:58 -0000	1.37
+++ SimCalorimetry/CaloSimAlgos/src/CaloHitResponse.cc	23 Oct 2012 20:14:46 -0000
@@ -15,6 +15,7 @@
 #include "CLHEP/Random/RandPoissonQ.h"
 #include "CLHEP/Random/RandFlat.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "CLHEP/Units/GlobalPhysicalConstants.h"
 #include "CLHEP/Units/GlobalSystemOfUnits.h" 
@@ -114,7 +115,7 @@
 
 void CaloHitResponse::add( const PCaloHit& hit ) {
   // check the hit time makes sense
-  if ( isnan(hit.time()) ) { return; }
+  if ( edm::isNotFinite(hit.time()) ) { return; }
 
   // maybe it's not from this subdetector
   if(theHitFilter == 0 || theHitFilter->accepts(hit)) {
Index: SimCalorimetry/EcalSimAlgos/src/EBHitResponse.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimCalorimetry/EcalSimAlgos/src/EBHitResponse.cc,v
retrieving revision 1.15
diff -u -r1.15 EBHitResponse.cc
--- SimCalorimetry/EcalSimAlgos/src/EBHitResponse.cc	7 Jun 2012 18:12:40 -0000	1.15
+++ SimCalorimetry/EcalSimAlgos/src/EBHitResponse.cc	23 Oct 2012 20:14:46 -0000
@@ -8,6 +8,7 @@
 #include "CLHEP/Random/RandPoissonQ.h"
 #include "CLHEP/Random/RandGaussQ.h"
 #include "DataFormats/EcalDetId/interface/EBDetId.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 EBHitResponse::EBHitResponse( const CaloVSimParameterMap* parameterMap , 
@@ -211,7 +212,7 @@
 void 
 EBHitResponse::add( const PCaloHit& hit ) 
 {
-  if (!isnan( hit.time() ) && ( 0 == hitFilter() || hitFilter()->accepts( hit ) ) ) {
+  if (!edm::isNotFinite( hit.time() ) && ( 0 == hitFilter() || hitFilter()->accepts( hit ) ) ) {
      if( 0 == hit.depth() ) // for now take only nonAPD hits
      {
         if( !m_apdOnly ) putAnalogSignal( hit ) ;
@@ -249,7 +250,7 @@
       const int bunch ( hitItr.bunch() ) ;
       if( minBunch() <= bunch  &&
 	  maxBunch() >= bunch  &&
-	  !isnan( hit.time() ) &&
+	  !edm::isNotFinite( hit.time() ) &&
 	  ( 0 == hitFilter() ||
 	    hitFilter()->accepts( hit ) ) )
       { 
Index: SimCalorimetry/EcalSimAlgos/src/EcalHitResponse.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimCalorimetry/EcalSimAlgos/src/EcalHitResponse.cc,v
retrieving revision 1.4
diff -u -r1.4 EcalHitResponse.cc
--- SimCalorimetry/EcalSimAlgos/src/EcalHitResponse.cc	7 Jun 2012 18:12:40 -0000	1.4
+++ SimCalorimetry/EcalSimAlgos/src/EcalHitResponse.cc	23 Oct 2012 20:14:46 -0000
@@ -13,6 +13,7 @@
 #include "CLHEP/Random/RandPoissonQ.h"
 #include "CLHEP/Random/RandGaussQ.h"
 #include "FWCore/Utilities/interface/Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "CLHEP/Units/GlobalPhysicalConstants.h"
 #include "CLHEP/Units/GlobalSystemOfUnits.h" 
@@ -145,7 +146,7 @@
 void 
 EcalHitResponse::add( const PCaloHit& hit ) 
 {
-  if (!isnan( hit.time() ) && ( 0 == m_hitFilter || m_hitFilter->accepts( hit ) ) ) {
+  if (!edm::isNotFinite( hit.time() ) && ( 0 == m_hitFilter || m_hitFilter->accepts( hit ) ) ) {
      putAnalogSignal( hit ) ;
   }
 }
@@ -178,7 +179,7 @@
       const PCaloHit& hit ( *hitItr ) ;
       const int bunch ( hitItr.bunch() ) ;
       if( withinBunchRange(bunch)  &&
-	  !isnan( hit.time() ) &&
+	  !edm::isNotFinite( hit.time() ) &&
 	  ( 0 == m_hitFilter ||
 	    m_hitFilter->accepts( hit ) ) ) putAnalogSignal( hit ) ;
    }
Index: SimCalorimetry/HcalSimAlgos/src/HcalSiPMHitResponse.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimCalorimetry/HcalSimAlgos/src/HcalSiPMHitResponse.cc,v
retrieving revision 1.10
diff -u -r1.10 HcalSiPMHitResponse.cc
--- SimCalorimetry/HcalSimAlgos/src/HcalSiPMHitResponse.cc	29 Jun 2012 22:44:43 -0000	1.10
+++ SimCalorimetry/HcalSimAlgos/src/HcalSiPMHitResponse.cc	23 Oct 2012 20:14:46 -0000
@@ -9,6 +9,7 @@
 #include "SimCalorimetry/CaloSimAlgos/interface/CaloSimParameters.h"
 #include "SimCalorimetry/CaloSimAlgos/interface/CaloVHitCorrection.h"
 #include "SimCalorimetry/CaloSimAlgos/interface/CaloVShape.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 HcalSiPMHitResponse::HcalSiPMHitResponse(const CaloVSimParameterMap * parameterMap,
 					 const CaloShapes * shapes) :
@@ -29,7 +30,7 @@
 
 
 void HcalSiPMHitResponse::add(const PCaloHit& hit) {
-    if (!isnan(hit.time()) &&
+    if (!edm::isNotFinite(hit.time()) &&
 	((theHitFilter == 0) || (theHitFilter->accepts(hit)))) {
       DetId id(hit.id());
       if (pixelHistory.find(id)==pixelHistory.end()) {
@@ -50,7 +51,7 @@
   for (MixCollection<PCaloHit>::MixItr hitItr = hits.begin();
        hitItr != hits.end(); ++hitItr) {
     if (!((hitItr.bunch() < theMinBunch) || (hitItr.bunch() > theMaxBunch)) &&
-        !(isnan(hitItr->time())) &&
+        !(edm::isNotFinite(hitItr->time())) &&
         ((theHitFilter == 0) || (theHitFilter->accepts(*hitItr)))) {
       DetId id(hitItr->id());
       if (sortedhits.find(id)==sortedhits.end())
Index: SimG4Core/MagneticField/src/Field.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimG4Core/MagneticField/src/Field.cc,v
retrieving revision 1.13
diff -u -r1.13 Field.cc
--- SimG4Core/MagneticField/src/Field.cc	30 Sep 2010 12:31:25 -0000	1.13
+++ SimG4Core/MagneticField/src/Field.cc	23 Oct 2012 20:14:46 -0000
@@ -9,6 +9,7 @@
 #include "CLHEP/Units/GlobalSystemOfUnits.h"
 
 #include "SimG4Core/Notification/interface/SimG4Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 using namespace sim;
 
@@ -26,10 +27,10 @@
 
     //
     // this is another trick to check on a NaN, maybe it's even CPU-faster...
-    // but ler's stick to system function isnan(...) for now
+    // but ler's stick to system function edm::isNotFinite(...) for now
     //
     // if ( !(xyz[0]==xyz[0]) || !(xyz[1]==xyz[1]) || !(xyz[2]==xyz[2]) )
-    if ( std::isnan(xyz[0]+xyz[1]+xyz[2]) != 0 )
+    if ( edm::isNotFinite(xyz[0]+xyz[1]+xyz[2]) != 0 )
     {
        throw SimG4Exception( "SimG4CoreMagneticField: Corrupted Event - NaN detected (position)" ) ;
     }
Index: SimG4Core/SensitiveDetector/src/SensitiveDetector.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/SimG4Core/SensitiveDetector/src/SensitiveDetector.cc,v
retrieving revision 1.6
diff -u -r1.6 SensitiveDetector.cc
--- SimG4Core/SensitiveDetector/src/SensitiveDetector.cc	31 Aug 2007 22:14:32 -0000	1.6
+++ SimG4Core/SensitiveDetector/src/SensitiveDetector.cc	23 Oct 2012 20:14:46 -0000
@@ -7,6 +7,7 @@
 #include "G4LogicalVolumeStore.hh"
 
 #include "SimG4Core/Notification/interface/SimG4Exception.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 using std::string;
 
@@ -91,7 +92,7 @@
        NameOfVol = "CorruptedVolumeInfo" ;
     }
     
-    // for simplicity... maybe isnan() will work on the 3-vector directly...
+    // for simplicity... maybe edm::isNotFinite() will work on the 3-vector directly...
     //
     double xyz[3] ;
     xyz[0] = CurrentPos.x() ;
@@ -100,10 +101,10 @@
     
     //
     // this is another trick to check on a NaN, maybe it's even CPU-faster...
-    // but ler's stick to system function isnan(...) for now
+    // but ler's stick to system function edm::isNotFinite(...) for now
     //
     // if ( !(xyz[0]==xyz[0]) || !(xyz[1]==xyz[1]) || !(xyz[2]==xyz[2]) )
-    if( isnan(xyz[0]+xyz[1]+xyz[2]) != 0 )
+    if( edm::isNotFinite(xyz[0]+xyz[1]+xyz[2]) != 0 )
     {
        // std::cout << " NaN detected in volume " << NameOfVol << std::endl ;
        throw SimG4Exception( "SimG4CoreSensitiveDetector: Corrupted Event - NaN detected (position)" ) ;
@@ -113,7 +114,7 @@
     xyz[1] = CurrentMom.y() ;
     xyz[2] = CurrentMom.z() ;
     if ( !(xyz[0]==xyz[0]) || !(xyz[1]==xyz[1]) || !(xyz[2]==xyz[2]) ||
-         isnan(xyz[0]) != 0 || isnan(xyz[1]) != 0 || isnan(xyz[2]) != 0 )
+         edm::isNotFinite(xyz[0]) != 0 || edm::isNotFinite(xyz[1]) != 0 || edm::isNotFinite(xyz[2]) != 0 )
     {
        std::cout << " NaN detected in volume " << NameOfVol << std::endl ;
        throw SimG4Exception( "SimG4CoreSensitiveDetector: Corrupted Event - NaN detected (3-momentum)" ) ;
Index: TopQuarkAnalysis/TopEventSelection/src/TtHadLRSignalSelObservables.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TopQuarkAnalysis/TopEventSelection/src/TtHadLRSignalSelObservables.cc,v
retrieving revision 1.5
diff -u -r1.5 TtHadLRSignalSelObservables.cc
--- TopQuarkAnalysis/TopEventSelection/src/TtHadLRSignalSelObservables.cc	15 Oct 2010 22:44:35 -0000	1.5
+++ TopQuarkAnalysis/TopEventSelection/src/TtHadLRSignalSelObservables.cc	23 Oct 2012 20:14:46 -0000
@@ -1,4 +1,5 @@
 #include "TopQuarkAnalysis/TopEventSelection/interface/TtHadLRSignalSelObservables.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 TtHadLRSignalSelObservables::TtHadLRSignalSelObservables()
 {
@@ -198,10 +199,10 @@
   double Sphericity = 1.5*(EigValues[1]+EigValues[2]);
   double Aplanarity = 1.5*EigValues[2];
   
-  double Obs12 = (isnan(Sphericity) ? -1 : Sphericity);
+  double Obs12 = (edm::isNotFinite(Sphericity) ? -1 : Sphericity);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(12,Obs12));
   
-  double Obs13 = (isnan(Aplanarity) ? -1 : Aplanarity);
+  double Obs13 = (edm::isNotFinite(Aplanarity) ? -1 : Aplanarity);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(13,Obs13));
   
   
@@ -255,10 +256,10 @@
   double BOOST_Sphericity = 1.5*(BOOST_EigValues[1]+BOOST_EigValues[2]);
   double BOOST_Aplanarity = 1.5*BOOST_EigValues[2];
   
-  double Obs14 = ( isnan(BOOST_Sphericity) ? -1 : BOOST_Sphericity );
+  double Obs14 = ( edm::isNotFinite(BOOST_Sphericity) ? -1 : BOOST_Sphericity );
   evtselectVarVal.push_back(std::pair<unsigned int,double>(14,Obs14));
   
-  double Obs15 = ( isnan(BOOST_Aplanarity) ? -1 : BOOST_Aplanarity );
+  double Obs15 = ( edm::isNotFinite(BOOST_Aplanarity) ? -1 : BOOST_Aplanarity );
   evtselectVarVal.push_back(std::pair<unsigned int,double>(15,Obs15));
   
   
Index: TopQuarkAnalysis/TopEventSelection/src/TtSemiLRSignalSelObservables.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TopQuarkAnalysis/TopEventSelection/src/TtSemiLRSignalSelObservables.cc,v
retrieving revision 1.15
diff -u -r1.15 TtSemiLRSignalSelObservables.cc
--- TopQuarkAnalysis/TopEventSelection/src/TtSemiLRSignalSelObservables.cc	15 Oct 2010 22:44:35 -0000	1.15
+++ TopQuarkAnalysis/TopEventSelection/src/TtSemiLRSignalSelObservables.cc	23 Oct 2012 20:14:46 -0000
@@ -1,4 +1,5 @@
 #include "TopQuarkAnalysis/TopEventSelection/interface/TtSemiLRSignalSelObservables.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 TtSemiLRSignalSelObservables::TtSemiLRSignalSelObservables()
 {
@@ -251,11 +252,11 @@
   double Sphericity = 1.5*(EigValues[1]+EigValues[2]);
   double Aplanarity = 1.5*EigValues[2];
   
-  double Obs15 = (isnan(Sphericity) ? 0 : Sphericity);
+  double Obs15 = (edm::isNotFinite(Sphericity) ? 0 : Sphericity);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(15,Obs15));
   if(DEBUG) std::cout<<"------ LR observable 15 "<<Obs15<<" calculated ------"<<std::endl;
   
-  double Obs16 = (isnan(Aplanarity) ? 0 : Aplanarity);
+  double Obs16 = (edm::isNotFinite(Aplanarity) ? 0 : Aplanarity);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(16,Obs16));
   if(DEBUG) std::cout<<"------ LR observable 16 "<<Obs16<<" calculated ------"<<std::endl;
   
@@ -301,11 +302,11 @@
   double BOOST_Sphericity = 1.5*(BOOST_EigValues[1]+BOOST_EigValues[2]);
   double BOOST_Aplanarity = 1.5*BOOST_EigValues[2];
   
-  double Obs17 = ( isnan(BOOST_Sphericity) ? 0 : BOOST_Sphericity );
+  double Obs17 = ( edm::isNotFinite(BOOST_Sphericity) ? 0 : BOOST_Sphericity );
   evtselectVarVal.push_back(std::pair<unsigned int,double>(17,Obs17));
   if(DEBUG) std::cout<<"------ LR observable 17 "<<Obs17<<" calculated ------"<<std::endl;
   
-  double Obs18 = ( isnan(BOOST_Aplanarity) ? 0 : BOOST_Aplanarity );
+  double Obs18 = ( edm::isNotFinite(BOOST_Aplanarity) ? 0 : BOOST_Aplanarity );
   evtselectVarVal.push_back(std::pair<unsigned int,double>(18,Obs18));
   if(DEBUG) std::cout<<"------ LR observable 18 "<<Obs18<<" calculated ------"<<std::endl;
   
@@ -524,11 +525,11 @@
   double Sphericity_NoNu = 1.5*(EigValues_NoNu[1]+EigValues_NoNu[2]);
   double Aplanarity_NoNu = 1.5*EigValues_NoNu[2];
   
-  double Obs35 = (isnan(Sphericity_NoNu) ? 0 : Sphericity_NoNu);
+  double Obs35 = (edm::isNotFinite(Sphericity_NoNu) ? 0 : Sphericity_NoNu);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(35,Obs35));
   if(DEBUG) std::cout<<"------ LR observable 35 "<<Obs35<<" calculated ------"<<std::endl;
   
-  double Obs36 = (isnan(Aplanarity_NoNu) ? 0 : Aplanarity_NoNu);
+  double Obs36 = (edm::isNotFinite(Aplanarity_NoNu) ? 0 : Aplanarity_NoNu);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(36,Obs36));
   if(DEBUG) std::cout<<"------ LR observable 36 "<<Obs36<<" calculated ------"<<std::endl;
   
@@ -564,11 +565,11 @@
   double Sphericity_NoNuNoLep = 1.5*(EigValues_NoNuNoLep[1]+EigValues_NoNuNoLep[2]);
   double Aplanarity_NoNuNoLep = 1.5*EigValues_NoNuNoLep[2];
   
-  double Obs37 = (isnan(Sphericity_NoNuNoLep) ? 0 : Sphericity_NoNuNoLep);
+  double Obs37 = (edm::isNotFinite(Sphericity_NoNuNoLep) ? 0 : Sphericity_NoNuNoLep);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(37,Obs37));
   if(DEBUG) std::cout<<"------ LR observable 37 "<<Obs37<<" calculated ------"<<std::endl;
   
-  double Obs38 = (isnan(Aplanarity_NoNuNoLep) ? 0 : Aplanarity_NoNuNoLep);
+  double Obs38 = (edm::isNotFinite(Aplanarity_NoNuNoLep) ? 0 : Aplanarity_NoNuNoLep);
   evtselectVarVal.push_back(std::pair<unsigned int,double>(38,Obs38));
   if(DEBUG) std::cout<<"------ LR observable 38 "<<Obs38<<" calculated ------"<<std::endl;
   
Index: TrackingTools/TrackAssociator/src/DetIdAssociator.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TrackingTools/TrackAssociator/src/DetIdAssociator.cc,v
retrieving revision 1.26
diff -u -r1.26 DetIdAssociator.cc
--- TrackingTools/TrackAssociator/src/DetIdAssociator.cc	7 Apr 2011 09:18:47 -0000	1.26
+++ TrackingTools/TrackAssociator/src/DetIdAssociator.cc	23 Oct 2012 20:14:46 -0000
@@ -20,6 +20,7 @@
 
 #include "TrackingTools/TrackAssociator/interface/DetIdAssociator.h"
 #include "DetIdInfo.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include <map>
 
 DetIdAssociator::DetIdAssociator(const int nPhi, const int nEta, const double etaBinSize)
@@ -171,7 +172,7 @@
 	     LogTrace("TrackAssociatorVerbose")<< "\tpoint (rho,phi,z): " << iter->perp() << ", " <<
 	       iter->phi() << ", " << iter->z();
 	     // FIX ME: this should be a fatal error
-	     if(std::isnan(iter->mag())||iter->mag()>1e5) { //Detector parts cannot be 1 km away or be NaN
+	     if(edm::isNotFinite(iter->mag())||iter->mag()>1e5) { //Detector parts cannot be 1 km away or be NaN
 	       edm::LogWarning("TrackAssociator") << "Critical error! Bad detector unit geometry:\n\tDetId:" 
 						  << id_itr->rawId() << "\t mag(): " << iter->mag() << "\n" << DetIdInfo::info( *id_itr )
 						  << "\nSkipped the element";
Index: TrackingTools/TrackFitters/src/KFFittingSmoother.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TrackingTools/TrackFitters/src/KFFittingSmoother.cc,v
retrieving revision 1.27
diff -u -r1.27 KFFittingSmoother.cc
--- TrackingTools/TrackFitters/src/KFFittingSmoother.cc	14 Sep 2012 12:39:33 -0000	1.27
+++ TrackingTools/TrackFitters/src/KFFittingSmoother.cc	23 Oct 2012 20:14:46 -0000
@@ -5,6 +5,7 @@
 #include "TrackingTools/TrackFitters/interface/KFTrajectorySmoother.h"
 #include "TrackingTools/GeomPropagators/interface/AnalyticalPropagator.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "TrackingTools/TransientTrackingRecHit/interface/InvalidTransientRecHit.h"
 
 // ggiurgiu@fnal.gov: Add headers needed to cut on pixel hit probability
@@ -27,15 +28,15 @@
 
 bool KFFittingSmoother::checkForNans(const Trajectory & theTraj) const
 {
-  if (std::isnan(theTraj.chiSquared ())) return false;
+  if (edm::isNotFinite(theTraj.chiSquared ())) return false;
   const std::vector<TrajectoryMeasurement> & vtm = theTraj.measurements();
   for (std::vector<TrajectoryMeasurement>::const_iterator tm=vtm.begin(); tm!=vtm.end();tm++) {
-    if (std::isnan(tm->estimate())) return false;
+    if (edm::isNotFinite(tm->estimate())) return false;
     AlgebraicVector5 v = tm->updatedState ().localParameters ().vector();
-    for (int i=0;i<5;++i) if (std::isnan(v[i])) return false;
+    for (int i=0;i<5;++i) if (edm::isNotFinite(v[i])) return false;
     const AlgebraicSymMatrix55 & m = tm->updatedState ().curvilinearError ().matrix();
     for (int i=0;i<5;++i) 
-      for (int j=0;j<(i+1);++j) if (std::isnan(m(i,j))) return false;
+      for (int j=0;j<(i+1);++j) if (edm::isNotFinite(m(i,j))) return false;
   }
   return true;
 }
Index: TrackingTools/TrackFitters/src/KFTrajectoryFitter.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/TrackingTools/TrackFitters/src/KFTrajectoryFitter.cc,v
retrieving revision 1.38
diff -u -r1.38 KFTrajectoryFitter.cc
--- TrackingTools/TrackFitters/src/KFTrajectoryFitter.cc	14 Sep 2012 12:37:36 -0000	1.38
+++ TrackingTools/TrackFitters/src/KFTrajectoryFitter.cc	23 Oct 2012 20:14:46 -0000
@@ -13,6 +13,7 @@
 #include "DataFormats/MuonDetId/interface/DTWireId.h"
 #include "DataFormats/MuonDetId/interface/RPCDetId.h"
 #include "DataFormats/MuonDetId/interface/MuonSubdetId.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 
 const DetLayerGeometry KFTrajectoryFitter::dummyGeometry;
@@ -177,11 +178,11 @@
               (std::abs(currTsos.localParameters().qbp())>100
                || std::abs(currTsos.localParameters().position().y()) > 1000
                || std::abs(currTsos.localParameters().position().x()) > 1000
-               ) ) || std::isnan(currTsos.localParameters().qbp());
+               ) ) || edm::isNotFinite(currTsos.localParameters().qbp());
 	  if unlikely(badState){
 	    if (!currTsos.isValid()) edm::LogError("FailedUpdate")
 	     <<"updating with the hit failed. Not updating the trajectory with the hit";
-	    else if (std::isnan(currTsos.localParameters().qbp())) edm::LogError("TrajectoryNaN")<<"Trajectory has NaN";
+	    else if (edm::isNotFinite(currTsos.localParameters().qbp())) edm::LogError("TrajectoryNaN")<<"Trajectory has NaN";
 	    else LogTrace("FailedUpdate")<<"updated state is valid but pretty bad, skipping. currTsos "
 	    				 <<currTsos<<"\n predTsos "<<predTsos;
 	    myTraj.push(TM(predTsos, *ihit,0,theGeometry->idToLayer((*ihit)->geographicalId())  ));
Index: Validation/RecoPixelVertexing/test/PixelTrackVal.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Validation/RecoPixelVertexing/test/PixelTrackVal.cc,v
retrieving revision 1.16
diff -u -r1.16 PixelTrackVal.cc
--- Validation/RecoPixelVertexing/test/PixelTrackVal.cc	24 Oct 2011 05:13:44 -0000	1.16
+++ Validation/RecoPixelVertexing/test/PixelTrackVal.cc	23 Oct 2012 20:14:46 -0000
@@ -8,6 +8,7 @@
 #include "FWCore/ServiceRegistry/interface/Service.h"
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 #include "DataFormats/TrackReco/interface/TrackFwd.h"
 #include "DataFormats/TrackReco/interface/Track.h"
@@ -98,9 +99,9 @@
 
     const reco::Track * it= &tracks[idx];
     TH1* h = static_cast<TH1*>(hList.FindObject("h_Nan"));
-    h->Fill(1.,std::isnan(it->momentum().x())*1.);
-    h->Fill(2.,std::isnan(it->momentum().y())*1.);
-    h->Fill(3.,std::isnan(it->momentum().z())*1.);
+    h->Fill(1.,edm::isNotFinite(it->momentum().x())*1.);
+    h->Fill(2.,edm::isNotFinite(it->momentum().y())*1.);
+    h->Fill(3.,edm::isNotFinite(it->momentum().z())*1.);
     
     bool problem = false;
     int index = 3;
@@ -108,8 +109,8 @@
       for (int j = i; j != 3; j++) {
 	  index++;
 	  static_cast<TH1*>(hList.FindObject("h_Nan"))->Fill(
-            index*1., std::isnan(it->covariance(i, j))*1.);
-	  if (std::isnan(it->covariance(i, j))) problem = true;
+            index*1., edm::isNotFinite(it->covariance(i, j))*1.);
+	  if (edm::isNotFinite(it->covariance(i, j))) problem = true;
 	  // in addition, diagonal element must be positive
 	  if (j == i && it->covariance(i, j) < 0) {
 	    static_cast<TH1*>(hList.FindObject("h_Nan"))->Fill(index*1., 1.);
Index: Validation/RecoVertex/src/PrimaryVertexAnalyzer.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Validation/RecoVertex/src/PrimaryVertexAnalyzer.cc,v
retrieving revision 1.38.2.1
diff -u -r1.38.2.1 PrimaryVertexAnalyzer.cc
--- Validation/RecoVertex/src/PrimaryVertexAnalyzer.cc	24 Oct 2011 05:49:02 -0000	1.38.2.1
+++ Validation/RecoVertex/src/PrimaryVertexAnalyzer.cc	23 Oct 2012 20:14:46 -0000
@@ -21,6 +21,7 @@
 //#include "SimGeneral/HepPDTRecord/interface/ParticleDataTable.h"
 
 #include "CommonTools/Statistics/interface/ChiSquaredProbability.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 
 // Root
 #include <TH1.h>
@@ -585,16 +586,16 @@
       }
       
       bool problem = false;
-      h["nans"+isuffix]->Fill(1.,isnan(v->position().x())*1.);
-      h["nans"+isuffix]->Fill(2.,isnan(v->position().y())*1.);
-      h["nans"+isuffix]->Fill(3.,isnan(v->position().z())*1.);
+      h["nans"+isuffix]->Fill(1.,edm::isNotFinite(v->position().x())*1.);
+      h["nans"+isuffix]->Fill(2.,edm::isNotFinite(v->position().y())*1.);
+      h["nans"+isuffix]->Fill(3.,edm::isNotFinite(v->position().z())*1.);
       
       int index = 3;
       for (int i = 0; i != 3; i++) {
 	for (int j = i; j != 3; j++) {
 	  index++;
-	  h["nans"+isuffix]->Fill(index*1., isnan(v->covariance(i, j))*1.);
-	  if (isnan(v->covariance(i, j))) problem = true;
+	  h["nans"+isuffix]->Fill(index*1., edm::isNotFinite(v->covariance(i, j))*1.);
+	  if (edm::isNotFinite(v->covariance(i, j))) problem = true;
 	  // in addition, diagonal element must be positive
 	  if (j == i && v->covariance(i, j) < 0) {
 	    h["nans"+isuffix]->Fill(index*1., 1.);
Index: Validation/RecoVertex/src/PrimaryVertexAnalyzer4PU.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/Validation/RecoVertex/src/PrimaryVertexAnalyzer4PU.cc,v
retrieving revision 1.12.2.3.2.1
diff -u -r1.12.2.3.2.1 PrimaryVertexAnalyzer4PU.cc
--- Validation/RecoVertex/src/PrimaryVertexAnalyzer4PU.cc	14 Sep 2012 21:08:02 -0000	1.12.2.3.2.1
+++ Validation/RecoVertex/src/PrimaryVertexAnalyzer4PU.cc	23 Oct 2012 20:14:46 -0000
@@ -3,6 +3,7 @@
 #include "FWCore/ParameterSet/interface/ParameterSet.h"
 #include "FWCore/MessageLogger/interface/MessageLogger.h"
 #include "FWCore/Version/interface/GetReleaseVersion.h"
+#include "FWCore/Utilities/interface/isFinite.h"
 #include "MagneticField/Engine/interface/MagneticField.h"
 
 // reco track and vertex 
@@ -3372,16 +3373,16 @@
     
     // test track links, use reconstructed vertices
       bool problem = false;
-      Fill(h,"nans",1.,std::isnan(v->position().x())*1.);
-      Fill(h,"nans",2.,std::isnan(v->position().y())*1.);
-      Fill(h,"nans",3.,std::isnan(v->position().z())*1.);
+      Fill(h,"nans",1.,edm::isNotFinite(v->position().x())*1.);
+      Fill(h,"nans",2.,edm::isNotFinite(v->position().y())*1.);
+      Fill(h,"nans",3.,edm::isNotFinite(v->position().z())*1.);
       
       int index = 3;
       for (int i = 0; i != 3; i++) {
 	for (int j = i; j != 3; j++) {
 	  index++;
-	  Fill(h,"nans",index*1., std::isnan(v->covariance(i, j))*1.);
-	  if (std::isnan(v->covariance(i, j))) problem = true;
+	  Fill(h,"nans",index*1., edm::isNotFinite(v->covariance(i, j))*1.);
+	  if (edm::isNotFinite(v->covariance(i, j))) problem = true;
 	  // in addition, diagonal element must be positive
 	  if (j == i && v->covariance(i, j) < 0) {
 	    Fill(h,"nans",index*1., 1.);
--- /dev/null
+++ FWCore/Utilities/interface/isFinite.h
@@ -0,0 +1,43 @@
+#ifndef FWCORE_Utilities_isFinite_H
+#define FWCORE_Utilities_isFinite_H
+
+namespace edm {
+  template <typename T>
+  bool isFinite(T x);
+
+  template <typename T>
+  inline
+  bool isNotFinite(T x) {
+    return !isFinite(x);
+  }
+  
+  template<>
+  inline
+  bool isFinite(float x) {
+    const unsigned int mask =  0x7f800000;
+    union { unsigned int l; float d;} v;
+    v.d =x;
+    return (v.l&mask)!=mask;
+  }
+  
+  template<>
+  inline
+  bool isFinite(double x) {
+    const unsigned long long mask = 0x7FF0000000000000LL;
+    union { unsigned long long l; double d;} v;
+    v.d =x;
+    return (v.l&mask)!=mask;
+  }
+
+  template<>
+  inline
+  bool isFinite(long double x) {
+    const unsigned long long mask = 0x7FF0000000000000LL;
+    union { unsigned long long l; double d;} v;
+    v.d =x;
+    return (v.l&mask)!=mask;
+  }
+}
+
+#endif // FWCORE_Utilities_isFinite_H
+
# bla bla
