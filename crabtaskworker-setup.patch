From 5c5b76c24fe438979c448eff1ce961ae21658f9b Mon Sep 17 00:00:00 2001
From: Andres Tanasijczuk <andres.jorge.tanasijczuk@cern.ch>
Date: Wed, 8 Jul 2015 16:59:33 +0200
Subject: [PATCH] When retrieving dataset file details, allow to get non-valid
 files from dbs.

---
 src/python/WMCore/JobSplitting/JobFactory.py |  2 +-
 src/python/WMCore/Services/DBS/DBS3Reader.py | 22 ++++++++++++----------
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/src/python/WMCore/JobSplitting/JobFactory.py b/src/python/WMCore/JobSplitting/JobFactory.py
index 12cf9c0..cd3dcd6 100644
--- a/src/python/WMCore/JobSplitting/JobFactory.py
+++ b/src/python/WMCore/JobSplitting/JobFactory.py
@@ -205,8 +205,8 @@ def sortByLocation(self):
             fileset = self.loadFiles(size = self.limit)
             logging.debug("Loaded %i files" % (len(fileset)))
         else:
-            fileset = self.subscription.availableFiles(limit = self.limit, doingJobSplitting = True)
             logging.debug("About to load files by DAO")
+            fileset = self.subscription.availableFiles(limit = self.limit, doingJobSplitting = True)
 
         for file in fileset:
             locSet = frozenset(file['locations'])
diff --git a/src/python/WMCore/Services/DBS/DBS3Reader.py b/src/python/WMCore/Services/DBS/DBS3Reader.py
index 5bebe96..484925b 100644
--- a/src/python/WMCore/Services/DBS/DBS3Reader.py
+++ b/src/python/WMCore/Services/DBS/DBS3Reader.py
@@ -221,7 +221,7 @@ def listDatasetFiles(self, datasetPath):
         return [ x['logical_file_name'] for x in self.dbs.listFileArray(dataset = datasetPath)]
 
 
-    def listDatasetFileDetails(self, datasetPath, getParents=False):
+    def listDatasetFileDetails(self, datasetPath, getParents=False, validFileOnly=1):
         """
         TODO: This is completely wrong need to be redone. or be removed - getting dataset altogether
         might be to costly
@@ -236,36 +236,38 @@ def listDatasetFileDetails(self, datasetPath, getParents=False):
               'Parents': [],
               'Checksum': '22218315',
               'Adler32': 'a41a1446',
-              'FileSize': 286021145
+              'FileSize': 286021145,
+              'ValidFile': 1
             }
 
         """
-        fileDetails = self.dbs.listFileArray(dataset = datasetPath, validFileOnly = 1, detail=True)
+        fileDetails = self.dbs.listFileArray(dataset = datasetPath, validFileOnly = validFileOnly, detail=True)
         blocks = set() #the set of blocks of the dataset
         #Iterate over the files and prepare the set of blocks and a dict where the keys are the files
         files = {}
         for f in fileDetails:
             blocks.add(f['block_name'])
             files[f['logical_file_name']] = remapDBS3Keys(f, stringify = True)
+            files[f['logical_file_name']]['ValidFile'] = f['is_file_valid']
             files[f['logical_file_name']]['Lumis'] = {}
             files[f['logical_file_name']]['Parents'] = []
 
         #Iterate over the blocks and get parents and lumis
-        #TODO this part is completely wrong need to be redone
         for blockName in blocks:
             #get the parents
             if getParents:
                 parents = self.dbs.listFileParents(block_name=blockName)
                 for p in parents:
-                    if p['logical_file_name'] in files: #invalid files are not there
+                    if p['logical_file_name'] in files: #invalid files are not there if validFileOnly=1
                         files[p['logical_file_name']]['Parents'].extend(p['parent_logical_file_name'])
             #get the lumis
-            file_lumis = self.dbs.listFileLumis(block_name=blockName, validFileOnly = 1)
+            file_lumis = self.dbs.listFileLumis(block_name=blockName)
             for f in file_lumis:
-                if f['run_num'] in files[f['logical_file_name']]['Lumis']:
-                    files[f['logical_file_name']]['Lumis'][f['run_num']].extend(f['lumi_section_num'])
-                else:
-                    files[f['logical_file_name']]['Lumis'][f['run_num']] = f['lumi_section_num']
+                if f['logical_file_name'] in files: #invalid files are not there if validFileOnly=1
+                    if f['run_num'] in files[f['logical_file_name']]['Lumis']:
+                        files[f['logical_file_name']]['Lumis'][f['run_num']].extend(f['lumi_section_num'])
+                    else:
+                        files[f['logical_file_name']]['Lumis'][f['run_num']] = f['lumi_section_num']
 
         return files
 
