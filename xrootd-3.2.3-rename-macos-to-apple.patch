diff --git a/cmake/XRootDOSDefs.cmake b/cmake/XRootDOSDefs.cmake
index b3b183b..ab38043 100644
--- a/cmake/XRootDOSDefs.cmake
+++ b/cmake/XRootDOSDefs.cmake
@@ -26,7 +26,6 @@ endif()
 #-------------------------------------------------------------------------------
 if( APPLE )
   set( MacOSX TRUE )
-  add_definitions( -D__macos__=1 )
   add_definitions( -DLT_MODULE_EXT=".dylib" )
   set( CMAKE_INSTALL_LIBDIR "lib" )
   set( CMAKE_INSTALL_BINDIR "bin" )
diff --git a/src/Xrd/XrdBuffer.cc b/src/Xrd/XrdBuffer.cc
index b840fbb..0b0409e 100644
--- a/src/Xrd/XrdBuffer.cc
+++ b/src/Xrd/XrdBuffer.cc
@@ -10,7 +10,7 @@
 
 #include <time.h>
 #include <unistd.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <stdio.h>
diff --git a/src/Xrd/XrdConfig.cc b/src/Xrd/XrdConfig.cc
index d14a7ea..bba99c9 100644
--- a/src/Xrd/XrdConfig.cc
+++ b/src/Xrd/XrdConfig.cc
@@ -44,7 +44,7 @@
 #ifdef __linux__
 #include <netinet/tcp.h>
 #endif
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #endif
 
@@ -595,7 +595,7 @@ int XrdConfig::setFDL()
 // Set the limit to the maximum allowed
 //
    rlim.rlim_cur = rlim.rlim_max;
-#if (defined(__macos__) && defined(MAC_OS_X_VERSION_10_5))
+#if (defined(__APPLE__) && defined(MAC_OS_X_VERSION_10_5))
    if (rlim.rlim_cur == RLIM_INFINITY || rlim.rlim_cur > OPEN_MAX)
      rlim.rlim_cur = OPEN_MAX;
 #endif
diff --git a/src/Xrd/XrdLink.cc b/src/Xrd/XrdLink.cc
index 118fd4b..c8f978e 100644
--- a/src/Xrd/XrdLink.cc
+++ b/src/Xrd/XrdLink.cc
@@ -25,7 +25,7 @@
 
 #ifdef HAVE_SENDFILE
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <sys/sendfile.h>
 #endif
 
diff --git a/src/Xrd/XrdPollE.icc b/src/Xrd/XrdPollE.icc
index 6491b8e..8e031e8 100644
--- a/src/Xrd/XrdPollE.icc
+++ b/src/Xrd/XrdPollE.icc
@@ -8,7 +8,7 @@
 /*              DE-AC02-76-SFO0515 with the Department of Energy              */
 /******************************************************************************/
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <malloc.h>
 #endif
 #include <unistd.h>
diff --git a/src/Xrd/XrdPollPoll.icc b/src/Xrd/XrdPollPoll.icc
index c311e42..5bd15f0 100644
--- a/src/Xrd/XrdPollPoll.icc
+++ b/src/Xrd/XrdPollPoll.icc
@@ -8,7 +8,7 @@
 /*              DE-AC03-76-SFO0515 with the Department of Energy              */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <unistd.h>
diff --git a/src/Xrd/XrdScheduler.cc b/src/Xrd/XrdScheduler.cc
index 8a49c48..de9e99a 100644
--- a/src/Xrd/XrdScheduler.cc
+++ b/src/Xrd/XrdScheduler.cc
@@ -13,7 +13,7 @@
 #include <stdio.h>
 #include <sys/types.h>
 #include <sys/wait.h>
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #endif
 
@@ -208,7 +208,7 @@ void *XrdScheduler::Reaper()
    int status;
    pid_t pid;
    XrdSchedulerPID *tp, *ptp, *xtp;
-#if defined(__macos__) && !defined(MAC_OS_X_VERSION_10_5)
+#if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_5)
    struct timespec ts = { 1, 0 };
 #else
    sigset_t Sset;
@@ -236,7 +236,7 @@ void *XrdScheduler::Reaper()
                 } else {ptp = tp; tp = tp->next;}
              }
        ReaperMutex.UnLock();
-#if defined(__macos__) && !defined(MAC_OS_X_VERSION_10_5)
+#if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_5)
        // Mac OS X sigwait() is broken on <= 10.4.
       } while (nanosleep(&ts, 0) <= 0);
 #else
diff --git a/src/Xrd/XrdStats.cc b/src/Xrd/XrdStats.cc
index 15389bf..a08dab2 100644
--- a/src/Xrd/XrdStats.cc
+++ b/src/Xrd/XrdStats.cc
@@ -8,7 +8,7 @@
 /*              DE-AC03-76-SFO0515 with the Department of Energy              */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <stdio.h>
diff --git a/src/XrdClient/XrdClientConn.cc b/src/XrdClient/XrdClientConn.cc
index fd6d7cd..6cb0e2b 100644
--- a/src/XrdClient/XrdClientConn.cc
+++ b/src/XrdClient/XrdClientConn.cc
@@ -47,7 +47,7 @@
 
 #ifndef WIN32
 #include <dlfcn.h>
-#ifndef __macos__
+#ifndef __APPLE__
 #include <link.h>
 #endif
 #endif
diff --git a/src/XrdClient/XrdClientConst.hh b/src/XrdClient/XrdClientConst.hh
index fe2bf17..6e304dc 100644
--- a/src/XrdClient/XrdClientConst.hh
+++ b/src/XrdClient/XrdClientConst.hh
@@ -120,7 +120,7 @@
 // which enables window scaling on some platforms (linux, MacOsX)
 // but may be to small on others (solaris); the preprocessor macro
 // is set based on the platform information found in configure
-#if defined(__linux__) || defined(__macos__)
+#if defined(__linux__) || defined(__APPLE__)
 #define DFLT_DFLTTCPWINDOWSIZE     (0)
 #else
 #define DFLT_DFLTTCPWINDOWSIZE     (262144)
diff --git a/src/XrdCms/XrdCmsSecurity.cc b/src/XrdCms/XrdCmsSecurity.cc
index ba5553d..5ef1aa0 100644
--- a/src/XrdCms/XrdCmsSecurity.cc
+++ b/src/XrdCms/XrdCmsSecurity.cc
@@ -20,7 +20,7 @@
 #endif
   
 #include <dlfcn.h>
-#ifndef __macos__
+#ifndef __APPLE__
 #include <link.h>
 #endif
 
diff --git a/src/XrdFfs/XrdFfsXrootdfs.cc b/src/XrdFfs/XrdFfsXrootdfs.cc
index b0dbc48..dc23680 100644
--- a/src/XrdFfs/XrdFfsXrootdfs.cc
+++ b/src/XrdFfs/XrdFfsXrootdfs.cc
@@ -752,7 +752,7 @@ static int xrootdfs_statfs(const char *path, struct statvfs *stbuf)
 //  long long size;
 
 //    XrdFfsMisc_xrd_secsss_register(fuse_get_context()->uid, fuse_get_context()->gid);
-#ifndef __macos__
+#ifndef __APPLE__
     stbuf->f_bsize = 1024;
 #else
     stbuf->f_bsize = 1024 * 128; // work around 32 bit fsblkcnt_t in struct statvfs on Mac OSX
diff --git a/src/XrdNet/XrdNetBuffer.cc b/src/XrdNet/XrdNetBuffer.cc
index 18dc6c4..c44355d 100644
--- a/src/XrdNet/XrdNetBuffer.cc
+++ b/src/XrdNet/XrdNetBuffer.cc
@@ -17,7 +17,7 @@ const char *XrdNetBufferCVSID = "$Id: xrootd-3.2.3-rename-macos-to-apple.patch,v 1.1 2012/09/05 21:55:55 davidlt Exp $";
 #endif
 #include <sys/types.h>
 #include <stdlib.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 
diff --git a/src/XrdOss/XrdOssAio.cc b/src/XrdOss/XrdOssAio.cc
index 8e75663..9fedd8b 100644
--- a/src/XrdOss/XrdOssAio.cc
+++ b/src/XrdOss/XrdOssAio.cc
@@ -16,7 +16,7 @@
 #ifdef __FreeBSD__
 #include <fcntl.h>
 #endif
-#ifdef __macos__
+#ifdef __APPLE__
 #include <sys/aio.h>
 #else
 #include <aio.h>
@@ -38,7 +38,7 @@
 // 1) No implementation of sigwaitinfo(). Though we can simulate it...
 // 2) Event notification returns an incomplete siginfo structure.
 //
-#ifdef __macos__
+#ifdef __APPLE__
 #undef _POSIX_ASYNCHRONOUS_IO
 #endif
 
@@ -379,7 +379,7 @@ void *XrdOssAioWait(void *mySigarg)
            continue;
           }
 
-#ifdef __macos__
+#ifdef __APPLE__
        aiop = (XrdSfsAio *)myInfo.si_value.sigval_ptr;
 #else
        aiop = (XrdSfsAio *)myInfo.si_value.sival_ptr;
@@ -439,7 +439,7 @@ void XrdOssAioRSH(int signum, siginfo_t *info, void *ucontext)
    XrdOssAioInfoR->si_signo = info->si_signo;
    XrdOssAioInfoR->si_errno = info->si_errno;
    XrdOssAioInfoR->si_code  = info->si_code;
-#ifdef __macos__
+#ifdef __APPLE__
    XrdOssAioInfoR->si_value.sigval_ptr = info->si_addr;
 #else
    XrdOssAioInfoR->si_value.sival_ptr = info->si_value.sival_ptr;
@@ -467,7 +467,7 @@ void XrdOssAioWSH(int signum, siginfo_t *info, void *ucontext)
    XrdOssAioInfoW->si_signo = info->si_signo;
    XrdOssAioInfoW->si_errno = info->si_errno;
    XrdOssAioInfoW->si_code  = info->si_code;
-#ifdef __macos__
+#ifdef __APPLE__
    XrdOssAioInfoW->si_value.sigval_ptr = info->si_addr;
 #else
    XrdOssAioInfoW->si_value.sival_ptr = info->si_value.sival_ptr;
diff --git a/src/XrdOss/XrdOssCache.hh b/src/XrdOss/XrdOssCache.hh
index e82e7dd..faaec11 100644
--- a/src/XrdOss/XrdOssCache.hh
+++ b/src/XrdOss/XrdOssCache.hh
@@ -43,7 +43,7 @@
 #define FS_BLKSZ f_bsize
 #define FS_FFREE f_ffree
 #endif
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/param.h>
 #include <sys/mount.h>
 #define STATFS_t struct statfs
diff --git a/src/XrdOss/XrdOssMSS.cc b/src/XrdOss/XrdOssMSS.cc
index 254c6be..8192667 100644
--- a/src/XrdOss/XrdOssMSS.cc
+++ b/src/XrdOss/XrdOssMSS.cc
@@ -279,7 +279,7 @@ int XrdOssSys::MSS_Stat(const char *path, struct stat *buff)
     buff->st_mtime = static_cast<time_t>(mtime);
     buff->st_size  = static_cast<off_t>(xt_size);
     buff->st_blksize=static_cast<long>(xt_blksize);
-#ifdef __macos__
+#ifdef __APPLE__
     buff->st_blocks =                      xt_blocks;
 #else
     buff->st_blocks =static_cast<blkcnt_t>(xt_blocks);
diff --git a/src/XrdOss/XrdOssMio.cc b/src/XrdOss/XrdOssMio.cc
index 8a3d4b7..a3396c6 100644
--- a/src/XrdOss/XrdOssMio.cc
+++ b/src/XrdOss/XrdOssMio.cc
@@ -40,7 +40,7 @@ char           XrdOssMio::MM_chk      = 0;
 char           XrdOssMio::MM_okmlock  = 1;
 char           XrdOssMio::MM_preld    = 0;
 long long      XrdOssMio::MM_pagsz    = (long long)sysconf(_SC_PAGESIZE);
-#ifdef __macos__
+#ifdef __APPLE__
 long long      XrdOssMio::MM_pages    = 1024*1024*1024;
 #else
 long long      XrdOssMio::MM_pages    = (long long)sysconf(_SC_PHYS_PAGES);
diff --git a/src/XrdOuc/XrdOucCacheReal.cc b/src/XrdOuc/XrdOucCacheReal.cc
index fabbc89..ca5d1e5 100644
--- a/src/XrdOuc/XrdOucCacheReal.cc
+++ b/src/XrdOuc/XrdOucCacheReal.cc
@@ -19,7 +19,7 @@
 #include "XrdOuc/XrdOucCacheData.hh"
 #include "XrdSys/XrdSysHeaders.hh"
   
-#ifdef __macos__
+#ifdef __APPLE__
 #ifndef MAP_ANONYMOUS
 #define MAP_ANONYMOUS MAP_ANON
 #endif
diff --git a/src/XrdPosix/XrdPosix.cc b/src/XrdPosix/XrdPosix.cc
index b10cc1d..aa92be4 100644
--- a/src/XrdPosix/XrdPosix.cc
+++ b/src/XrdPosix/XrdPosix.cc
@@ -293,7 +293,7 @@ size_t XrdPosix_Fread(void *ptr, size_t size, size_t nitems, FILE *stream)
 #if defined(__linux__)
    else if (bytes < 0) stream->_flags |= _IO_ERR_SEEN;
    else                stream->_flags |= _IO_EOF_SEEN;
-#elif defined(__macos__)
+#elif defined(__APPLE__)
    else if (bytes < 0) stream->_flags |= __SEOF;
    else                stream->_flags |= __SERR;
 #else
@@ -459,7 +459,7 @@ size_t XrdPosix_Fwrite(const void *ptr, size_t size, size_t nitems, FILE *stream
 #ifndef SUNX86
 #if defined(__linux__)
       else stream->_flags |= _IO_ERR_SEEN;
-#elif defined(__macos__)
+#elif defined(__APPLE__)
       else stream->_flags |= __SERR;
 #else
       else stream->_flag  |= _IOERR;
diff --git a/src/XrdPosix/XrdPosixLinkage.cc b/src/XrdPosix/XrdPosixLinkage.cc
index 7a9e838..e8a7d48 100644
--- a/src/XrdPosix/XrdPosixLinkage.cc
+++ b/src/XrdPosix/XrdPosixLinkage.cc
@@ -24,7 +24,7 @@ const char *XrdPosixLinkageCVSID = "$Id: xrootd-3.2.3-rename-macos-to-apple.patch,v 1.1 2012/09/05 21:55:55 davidlt Exp $";
 #endif
 
 #include <dlfcn.h>
-#if !defined(__macos__) && !defined(__CYGWIN__)
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 #include <link.h>
 #endif
 
diff --git a/src/XrdPosix/XrdPosixOsDep.hh b/src/XrdPosix/XrdPosixOsDep.hh
index bb16830..14b55cc 100644
--- a/src/XrdPosix/XrdPosixOsDep.hh
+++ b/src/XrdPosix/XrdPosixOsDep.hh
@@ -26,7 +26,7 @@
 // appropriate type for the next 25 years). The Posix interface only supports
 // 64-bit offsets.
 //
-#if  defined(__macos__)
+#if  defined(__APPLE__)
 #if !defined(dirent64)
 #define dirent64 dirent
 #endif
diff --git a/src/XrdPosix/XrdPosixPreload.cc b/src/XrdPosix/XrdPosixPreload.cc
index f5afe02..d24bab1 100644
--- a/src/XrdPosix/XrdPosixPreload.cc
+++ b/src/XrdPosix/XrdPosixPreload.cc
@@ -150,7 +150,7 @@ int     fcntl64(int fd, int cmd, ...)
 /*                             f d a t a s y n c                              */
 /******************************************************************************/
 // On Mac it is the same as fsync
-#if !defined(__macos__)
+#if !defined(__APPLE__)
 extern "C"
 {
 int     fdatasync(int fildes)
@@ -392,7 +392,7 @@ off64_t lseek64(int fildes, off64_t offset, int whence)
   
 extern "C"
 {
-#if defined(__linux__) || defined(__macos__)
+#if defined(__linux__) || defined(__APPLE__)
 off_t      llseek(int fildes, off_t    offset, int whence)
 #else
 offset_t   llseek(int fildes, offset_t offset, int whence)
diff --git a/src/XrdPosix/XrdPosixPreload32.cc b/src/XrdPosix/XrdPosixPreload32.cc
index 3147abc..eecbbab 100644
--- a/src/XrdPosix/XrdPosixPreload32.cc
+++ b/src/XrdPosix/XrdPosixPreload32.cc
@@ -31,7 +31,7 @@
 #include <sys/types.h>
 #include <unistd.h>
 
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/param.h>
 #include <sys/mount.h>
 #else
@@ -63,7 +63,7 @@ extern XrdPosixLinkage Xunix;
 // making CopyDirent() superfluous. In Solaris x86 there are no 32 bit interfaces.
 //
 #if !defined(__LP64__) && !defined(_LP64)
-#if !defined( __macos__) && !defined(SUNX86) && !defined(__FreeBSD__)
+#if !defined( __APPLE__) && !defined(SUNX86) && !defined(__FreeBSD__)
 int XrdPosix_CopyDirent(struct dirent *dent, struct dirent64 *dent64)
 {
   const unsigned long long LLMask = 0xffffffff00000000LL;
@@ -362,7 +362,7 @@ struct dirent* readdir(DIR *dirp)
 
    if (!(dp64 = XrdPosix_Readdir64(dirp))) return 0;
 
-#if !defined(__macos__) && !defined(_LP64) && !defined(__LP64__)
+#if !defined(__APPLE__) && !defined(_LP64) && !defined(__LP64__)
    if (XrdPosix_CopyDirent((struct dirent *)dp64, dp64)) return 0;
 #endif
 
@@ -381,7 +381,7 @@ extern "C"
 int     readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result)
 {
    static int Init = Xunix.Init(&Init);
-#if defined(__macos__) || defined(__LP64__) || defined(_LP64)
+#if defined(__APPLE__) || defined(__LP64__) || defined(_LP64)
    return XrdPosix_Readdir_r(dirp, entry, result);
 #else
    char buff[sizeof(struct dirent64) + 2048];
@@ -459,7 +459,7 @@ int        stat(         const char *path, struct stat *buf)
 /*                                s t a t f s                                 */
 /******************************************************************************/
 
-#if !defined(__solaris__) && !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__solaris__) && !defined(__APPLE__) && !defined(__FreeBSD__)
 extern "C"
 {
 int        statfs(         const char *path, struct statfs *buf)
@@ -487,7 +487,7 @@ int        statfs(         const char *path, struct statfs *buf)
 /*                               s t a t v f s                                */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(SUNX86) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(SUNX86) && !defined(__FreeBSD__)
 extern "C"
 {
 int        statvfs(         const char *path, struct statvfs *buf)
diff --git a/src/XrdPosix/XrdPosixXrootd.cc b/src/XrdPosix/XrdPosixXrootd.cc
index 89a45d7..71d6a3d 100644
--- a/src/XrdPosix/XrdPosixXrootd.cc
+++ b/src/XrdPosix/XrdPosixXrootd.cc
@@ -325,7 +325,7 @@ dirent64 *XrdPosixDir::nextEntry(dirent64 *dp)
    cp = (fentries[fentry]).c_str();
    reclen = strlen(cp);
    if (reclen > maxname) reclen = maxname;
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
    dp->d_fileno = fentry;
    dp->d_type   = DT_UNKNOWN;
    dp->d_namlen = reclen;
@@ -1090,7 +1090,7 @@ struct dirent* XrdPosixXrootd::Readdir(DIR *dirp)
    dp32 = (struct dirent *)dp64;
    if (dp32->d_name != dp64->d_name)
       {dp32->d_ino    = dp64->d_ino;
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
        dp32->d_off    = dp64->d_off;
 #endif
        dp32->d_reclen = dp64->d_reclen;
@@ -1131,7 +1131,7 @@ int XrdPosixXrootd::Readdir_r(DIR *dirp,   struct dirent    *entry,
    if ((rc = Readdir64_r(dirp, 0, &dp64)) <= 0) {*result = 0; return rc;}
 
    entry->d_ino    = dp64->d_ino;
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
    entry->d_off    = dp64->d_off;
 #endif
    entry->d_reclen = dp64->d_reclen;
@@ -1286,12 +1286,12 @@ int XrdPosixXrootd::Statfs(const char *path, struct statfs *buf)
    buf->f_bfree   = myVfs.f_bfree;
    buf->f_files   = myVfs.f_files;
    buf->f_ffree   = myVfs.f_ffree;
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
    buf->f_iosize  = myVfs.f_frsize;
 #else
    buf->f_frsize  = myVfs.f_frsize;
 #endif
-#if defined(__linux__) || defined(__macos__) || defined(__FreeBSD__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
    buf->f_bavail  = myVfs.f_bavail;
 #endif
 #if defined(__linux__)
diff --git a/src/XrdPosix/XrdPosixXrootd.hh b/src/XrdPosix/XrdPosixXrootd.hh
index c70713a..33bd67c 100644
--- a/src/XrdPosix/XrdPosixXrootd.hh
+++ b/src/XrdPosix/XrdPosixXrootd.hh
@@ -17,7 +17,7 @@
 #include <sys/statvfs.h>
 #include <sys/types.h>
 
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/param.h>
 #include <sys/mount.h>
 #else
diff --git a/src/XrdSec/XrdSecPManager.cc b/src/XrdSec/XrdSecPManager.cc
index 9528cad..8056607 100644
--- a/src/XrdSec/XrdSecPManager.cc
+++ b/src/XrdSec/XrdSecPManager.cc
@@ -24,7 +24,7 @@ const char *XrdSecPManagerCVSID = "$Id: xrootd-3.2.3-rename-macos-to-apple.patch,v 1.1 2012/09/05 21:55:55 davidlt Exp $";
 #endif
 
 #include <dlfcn.h>
-#if !defined(__macos__) && !defined(__CYGWIN__)
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 #include <link.h>
 #endif
 #include <strings.h>
diff --git a/src/XrdSecpwd/XrdSecpwdPlatform.hh b/src/XrdSecpwd/XrdSecpwdPlatform.hh
index 0744ef8..dc45d58 100644
--- a/src/XrdSecpwd/XrdSecpwdPlatform.hh
+++ b/src/XrdSecpwd/XrdSecpwdPlatform.hh
@@ -17,7 +17,7 @@
 #if defined(__solaris__)
 #include <crypt.h>
 #endif
-#if defined(__osf__) || defined(__sgi) || defined(__macos__)
+#if defined(__osf__) || defined(__sgi) || defined(__APPLE__)
 extern "C" char *crypt(const char *, const char *);
 #endif
 
diff --git a/src/XrdSfs/XrdSfsAio.hh b/src/XrdSfs/XrdSfsAio.hh
index 91aaeae..81e0a01 100644
--- a/src/XrdSfs/XrdSfsAio.hh
+++ b/src/XrdSfs/XrdSfsAio.hh
@@ -15,7 +15,7 @@
 #include <signal.h>
 #include <sys/types.h>
 #ifdef _POSIX_ASYNCHRONOUS_IO
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #include <sys/aio.h>
 #else
@@ -58,7 +58,7 @@ virtual void doneWrite() = 0;
 virtual void Recycle() = 0;
 
              XrdSfsAio() {
-#if defined(__macos__) && (!defined(MAC_OS_X_VERSION_10_4) || \
+#if defined(__APPLE__) && (!defined(MAC_OS_X_VERSION_10_4) || \
     MAC_OS_X_VERSION_MAX_ALLOWED < MAC_OS_X_VERSION_10_4)
                          sfsAio.aio_sigevent.sigev_value.sigval_ptr = (void *)this;
 #else
diff --git a/src/XrdSut/XrdSutAux.cc b/src/XrdSut/XrdSutAux.cc
index 6fbcf04..e53f4de 100644
--- a/src/XrdSut/XrdSutAux.cc
+++ b/src/XrdSut/XrdSutAux.cc
@@ -600,7 +600,7 @@ XrdSutFileLocker::XrdSutFileLocker(int fd, ELockType lock)
    // Exclusive lock of the whole file
    short int lockmode = (lock == XrdSutFileLocker::kExcl) ? (F_WRLCK | F_RDLCK)
                                                     :  F_RDLCK;
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
    struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -621,7 +621,7 @@ XrdSutFileLocker::~XrdSutFileLocker()
       return;
    //
    // Unlock the file
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, F_UNLCK, SEEK_SET};
 #else
    struct flock flck = {F_UNLCK, SEEK_SET, 0, 0};
diff --git a/src/XrdSut/XrdSutPFile.cc b/src/XrdSut/XrdSutPFile.cc
index 6c8d519..2c7d118 100644
--- a/src/XrdSut/XrdSutPFile.cc
+++ b/src/XrdSut/XrdSutPFile.cc
@@ -382,7 +382,7 @@ kXR_int32 XrdSutPFile::Open(kXR_int32 opt, bool *wasopen,
    int lck = kMaxLockTries;
    int rc = 0;
    while (lck && rc == -1) {
-#ifdef __macos__
+#ifdef __APPLE__
       struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
       struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -399,7 +399,7 @@ kXR_int32 XrdSutPFile::Open(kXR_int32 opt, bool *wasopen,
       if (errno == EACCES || errno == EAGAIN) {
          // File locked by other process
          int pid = -1;
-#ifdef __macos__
+#ifdef __APPLE__
          struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
          struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -434,7 +434,7 @@ kXR_int32 XrdSutPFile::Close(kXR_int32 fd)
 
    //
    // Unlock the file
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, F_UNLCK, SEEK_SET};
 #else
    struct flock flck = {F_UNLCK, SEEK_SET, 0, 0};
diff --git a/src/XrdSys/XrdSysDNS.cc b/src/XrdSys/XrdSysDNS.cc
index 5f6dd87..2cf3417 100644
--- a/src/XrdSys/XrdSysDNS.cc
+++ b/src/XrdSys/XrdSysDNS.cc
@@ -95,8 +95,8 @@ int XrdSysDNS::getHostAddr(const  char     *InetName,
 // default /etc/hosts on some platforms, e.g. MacOsX)
 //
 // if (!strncmp(InetName,"localhost",9)) myhints.ai_family = AF_INET;
-// pcal: force ipv4  (was only for MacOS: ifdef __macos____)
-//#ifdef __macos__
+// pcal: force ipv4  (was only for MacOS: ifdef __APPLE____)
+//#ifdef __APPLE__
 // Disable IPv6 for MacOS X altogether for the time being
 //
    myhints.ai_family = AF_INET;
@@ -257,7 +257,7 @@ int XrdSysDNS::getHostName(struct sockaddr &InetAddr,
 // Some platforms have nameinfo but getnameinfo() is broken. If so, we revert
 // to using the gethostbyaddr().
 //
-#if defined(HAVE_NAMEINFO) && !defined(__macos__)
+#if defined(HAVE_NAMEINFO) && !defined(__APPLE__)
     struct addrinfo   *rp, *np;
     struct addrinfo    myhints = {AI_CANONNAME};
 #elif defined(HAVE_GETHBYXR)
@@ -282,7 +282,7 @@ int XrdSysDNS::getHostName(struct sockaddr &InetAddr,
   if (InetAddr.sa_family == AF_UNIX) 
      {InetName[0] = strdup("localhost"); return 1;}
 
-#if !defined(HAVE_NAMEINFO) || defined(__macos__)
+#if !defined(HAVE_NAMEINFO) || defined(__APPLE__)
 
 // Convert it to a host name
 //
diff --git a/src/XrdSys/XrdSysFAttr.cc b/src/XrdSys/XrdSysFAttr.cc
index c847d57..212c558 100644
--- a/src/XrdSys/XrdSysFAttr.cc
+++ b/src/XrdSys/XrdSysFAttr.cc
@@ -37,7 +37,7 @@ XrdSysError *XrdSysFAttr::Say = 0;
 #include "XrdSys/XrdSysFAttrBsd.icc"
 #elif defined(__linux__)
 #include "XrdSys/XrdSysFAttrLnx.icc"
-#elif defined(__macos__)
+#elif defined(__APPLE__)
 #include "XrdSys/XrdSysFAttrMac.icc"
 #elif defined(__solaris__)
 #include "XrdSys/XrdSysFAttrSun.icc"
diff --git a/src/XrdSys/XrdSysPlatform.cc b/src/XrdSys/XrdSysPlatform.cc
index 457b54e..3ef965e 100644
--- a/src/XrdSys/XrdSysPlatform.cc
+++ b/src/XrdSys/XrdSysPlatform.cc
@@ -19,7 +19,7 @@
 #if defined(_LITTLE_ENDIAN) || defined(__LITTLE_ENDIAN__) || \
     defined(__IEEE_LITTLE_ENDIAN) || \
    (defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN)
-#if !defined(__GNUC__) || defined(__macos__)
+#if !defined(__GNUC__) || defined(__APPLE__)
 extern "C"
 {
 unsigned long long Swap_n2hll(unsigned long long x)
diff --git a/src/XrdSys/XrdSysPlatform.hh b/src/XrdSys/XrdSysPlatform.hh
index 334a89d..3ba652e 100644
--- a/src/XrdSys/XrdSysPlatform.hh
+++ b/src/XrdSys/XrdSysPlatform.hh
@@ -23,7 +23,7 @@
 #include <byteswap.h>
 #define MAXNAMELEN NAME_MAX
 #endif
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #include <sys/types.h>
 #define fdatasync(x) fsync(x)
@@ -50,7 +50,7 @@
         ((*memp = memalign(algn, sz)) ? 0 : ENOMEM)
 #endif
 
-#if defined(__linux__) || defined(__macos__) || defined(__FreeBSD__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
 
 #define S_IAMB      0x1FF   /* access mode bits */
 
@@ -89,7 +89,7 @@ typedef off_t offset_t;
 
 // For alternative platforms
 //
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #ifndef POLLRDNORM
 #define POLLRDNORM  0
@@ -139,7 +139,7 @@ typedef off_t off64_t;
 #elif defined(_LITTLE_ENDIAN) || defined(__LITTLE_ENDIAN__) || \
      defined(__IEEE_LITTLE_ENDIAN) || \
      (defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN)
-#if !defined(__GNUC__) || defined(__macos__)
+#if !defined(__GNUC__) || defined(__APPLE__)
 
 #if !defined(__sun) || (defined(__sun) && (!defined(_LP64) || defined(__SunOS_5_10)))
 extern "C" unsigned long long Swap_n2hll(unsigned long long x);
@@ -206,7 +206,7 @@ extern "C"
 #   define SOCKLEN_t size_t
 #elif defined(XR__GLIBC) || \
    defined(__FreeBSD__) || \
-   (defined(XR__SUNGCC3) && defined(__arch64__)) || defined(__macos__) || \
+   (defined(XR__SUNGCC3) && defined(__arch64__)) || defined(__APPLE__) || \
    (defined(__sun) && defined(_SOCKLEN_T))
 #   ifndef SOCKLEN_t
 #      define SOCKLEN_t socklen_t
diff --git a/src/XrdSys/XrdSysPlugin.cc b/src/XrdSys/XrdSysPlugin.cc
index ecdb5c5..e51ddf7 100644
--- a/src/XrdSys/XrdSysPlugin.cc
+++ b/src/XrdSys/XrdSysPlugin.cc
@@ -21,7 +21,7 @@
 
 #ifndef WIN32
 #include <dlfcn.h>
-#if !defined(__macos__) && !defined(__CYGWIN__)
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 #include <link.h>
 #endif
 #include <stdio.h>
@@ -77,7 +77,7 @@ void *XrdSysPlugin::getPlugin(const char *pname, int errok, bool global)
 //
    if (!(msgPath = libPath))
       {msgPath = "executable image";
-#if    defined(__macos__)
+#if    defined(__APPLE__)
        flags = RTLD_FIRST;
 #elif  defined(__linux__)
        flags = RTLD_NOW | RTLD_NODELETE;
diff --git a/src/XrdSys/XrdSysPthread.cc b/src/XrdSys/XrdSysPthread.cc
index a22550d..d64dd38 100644
--- a/src/XrdSys/XrdSysPthread.cc
+++ b/src/XrdSys/XrdSysPthread.cc
@@ -165,7 +165,7 @@ int XrdSysCondVar::WaitMS(int msec)
 /*                              C o n d W a i t                               */
 /******************************************************************************/
   
-#ifdef __macos__
+#ifdef __APPLE__
 
 int XrdSysSemaphore::CondWait()
 {
@@ -232,7 +232,7 @@ unsigned long XrdSysThread::Num()
    return static_cast<unsigned long>(syscall(SYS_gettid));
 #elif defined(__solaris__)
    return static_cast<unsigned long>(pthread_self());
-#elif defined(__macos__)
+#elif defined(__APPLE__)
    return static_cast<unsigned long>(pthread_mach_thread_np(pthread_self()));
 #else
    return static_cast<unsigned long>(getpid());
diff --git a/src/XrdSys/XrdSysPthread.hh b/src/XrdSys/XrdSysPthread.hh
index 07196d0..6125933 100644
--- a/src/XrdSys/XrdSysPthread.hh
+++ b/src/XrdSys/XrdSysPthread.hh
@@ -272,7 +272,7 @@ XrdSysRWLock *lck;
 //                 semaphores need to be implemented based on condition
 //                 variables since no native implementation is available.
   
-#ifdef __macos__
+#ifdef __APPLE__
 class XrdSysSemaphore
 {
 public:
diff --git a/src/XrdXrootd/XrdXrootdLoadLib.cc b/src/XrdXrootd/XrdXrootdLoadLib.cc
index bde8509..f60e6e5 100644
--- a/src/XrdXrootd/XrdXrootdLoadLib.cc
+++ b/src/XrdXrootd/XrdXrootdLoadLib.cc
@@ -20,7 +20,7 @@
 #endif
   
 #include <dlfcn.h>
-#ifndef __macos__
+#ifndef __APPLE__
 #include <link.h>
 #endif
 
diff --git a/src/XrdXrootd/XrdXrootdMonitor.cc b/src/XrdXrootd/XrdXrootdMonitor.cc
index 9e5ed22..efe8676 100644
--- a/src/XrdXrootd/XrdXrootdMonitor.cc
+++ b/src/XrdXrootd/XrdXrootdMonitor.cc
@@ -14,7 +14,7 @@
 #include <unistd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 
