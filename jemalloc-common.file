%define jemalloc_version 5.3.0
%define tag 54eaed1d8b56b1aa528be3bdd1877e59c56fa90c
%define branch cms/%{realversion}
%define github_user cms-externals
Source: git+https://github.com/%{github_user}/jemalloc.git?obj=%{branch}/%{tag}&export=%{n}-%{realversion}&output=/%{n}-%{realversion}-%{tag}.tgz
BuildRequires: autotools gmake

%if "%{n}" != "jemalloc"
%ifarch x86_64
%if 0%{?rhel} == 7
BuildRequires: patchelf
%endif
%endif
%endif

%prep

%{?PrePrep:%PrePrep}
%setup -n %{n}-%{realversion}
%{?PostPrep:%PostPrep}

%build

%{?PreBuild:%PreBuild}
%{?PreAutoGen:%PreAutoGen}
./autogen.sh \
  --prefix %{i} \
  --disable-doc \
%ifarch aarch64
  --with-lg-page=16 \
  --with-lg-hugepage=24 \
%endif
  --enable-shared \
  --disable-static \
  --enable-stats \
  %{autogen_opts}

%{?PostAutoGen:%PostAutoGen}
make %{makeprocesses}
%{?PostBuild:%PostBuild}

%install

%{?PreInstall:%PreInstall}
make install
%if "%{n}" != "jemalloc"
  # Rename jemalloc libs
  mv %{i}/lib/libjemalloc.so.2 %{i}/lib/lib%{n}.so.2
  rm %{i}/lib/libjemalloc.so
  ln -sf lib%{n}.so.2 %{i}/lib/lib%{n}.so
  patchelf --set-soname  lib%{n}.so.2  %{i}/lib/lib%{n}.so.2
  # Make sure there are no other libs. If there are then we should fail and update the recipe
  if [ $(ls %{i}/lib/lib* | grep -v lib%{n}. | wc -l) -gt 0 ] ; then exit 1; fi
%endif
%{?PostInstall:%PostInstall}

%post
%{?PrePost:%PrePost}
%{relocateConfig}bin/jemalloc.sh
%{relocateConfig}bin/jemalloc-config
%{?PostPost:%PostPost}
