diff --git a/cmake/XRootDOSDefs.cmake b/cmake/XRootDOSDefs.cmake
index b3b183b..ab38043 100644
--- a/cmake/XRootDOSDefs.cmake
+++ b/cmake/XRootDOSDefs.cmake
@@ -26,7 +26,6 @@ endif()
 #-------------------------------------------------------------------------------
 if( APPLE )
   set( MacOSX TRUE )
-  add_definitions( -D__macos__=1 )
   add_definitions( -DLT_MODULE_EXT=".dylib" )
   set( CMAKE_INSTALL_LIBDIR "lib" )
   set( CMAKE_INSTALL_BINDIR "bin" )
diff --git a/src/Xrd/XrdBuffer.cc b/src/Xrd/XrdBuffer.cc
index 8b6c05f..4d63332 100644
--- a/src/Xrd/XrdBuffer.cc
+++ b/src/Xrd/XrdBuffer.cc
@@ -29,7 +29,7 @@
 
 #include <time.h>
 #include <unistd.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <stdio.h>
diff --git a/src/Xrd/XrdConfig.cc b/src/Xrd/XrdConfig.cc
index 7c18bb7..2768224 100644
--- a/src/Xrd/XrdConfig.cc
+++ b/src/Xrd/XrdConfig.cc
@@ -64,7 +64,7 @@
 #ifdef __linux__
 #include <netinet/tcp.h>
 #endif
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #endif
 
@@ -617,7 +617,7 @@ int XrdConfig::setFDL()
 // Set the limit to the maximum allowed
 //
    rlim.rlim_cur = rlim.rlim_max;
-#if (defined(__macos__) && defined(MAC_OS_X_VERSION_10_5))
+#if (defined(__APPLE__) && defined(MAC_OS_X_VERSION_10_5))
    if (rlim.rlim_cur == RLIM_INFINITY || rlim.rlim_cur > OPEN_MAX)
      rlim.rlim_cur = OPEN_MAX;
 #endif
diff --git a/src/Xrd/XrdLink.cc b/src/Xrd/XrdLink.cc
index c6d763b..c23eee2 100644
--- a/src/Xrd/XrdLink.cc
+++ b/src/Xrd/XrdLink.cc
@@ -44,7 +44,7 @@
 
 #ifdef HAVE_SENDFILE
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <sys/sendfile.h>
 #endif
 
@@ -782,7 +782,7 @@ int XrdLink::Send(const struct iovec *iov, int iocnt, int bytes)
 /******************************************************************************/
 int XrdLink::Send(const struct sfVec *sfP, int sfN)
 {
-#if !defined(HAVE_SENDFILE) || defined(__macos__)
+#if !defined(HAVE_SENDFILE) || defined(__APPLE__)
    return -1;
 #else
 // Make sure we have valid vector count
diff --git a/src/Xrd/XrdPollE.icc b/src/Xrd/XrdPollE.icc
index 4279534..6d115ea 100644
--- a/src/Xrd/XrdPollE.icc
+++ b/src/Xrd/XrdPollE.icc
@@ -28,7 +28,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <malloc.h>
 #endif
 #include <unistd.h>
diff --git a/src/Xrd/XrdPollPoll.icc b/src/Xrd/XrdPollPoll.icc
index c39eb74..d5ab165 100644
--- a/src/Xrd/XrdPollPoll.icc
+++ b/src/Xrd/XrdPollPoll.icc
@@ -27,7 +27,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <unistd.h>
diff --git a/src/Xrd/XrdScheduler.cc b/src/Xrd/XrdScheduler.cc
index 903b9c4..58148e8 100644
--- a/src/Xrd/XrdScheduler.cc
+++ b/src/Xrd/XrdScheduler.cc
@@ -32,7 +32,7 @@
 #include <stdio.h>
 #include <sys/types.h>
 #include <sys/wait.h>
-#ifdef __macos__
+#ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #endif
 
@@ -228,7 +228,7 @@ void *XrdScheduler::Reaper()
    int status;
    pid_t pid;
    XrdSchedulerPID *tp, *ptp, *xtp;
-#if defined(__macos__) && !defined(MAC_OS_X_VERSION_10_5)
+#if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_5)
    struct timespec ts = { 1, 0 };
 #else
    sigset_t Sset;
@@ -256,7 +256,7 @@ void *XrdScheduler::Reaper()
                 } else {ptp = tp; tp = tp->next;}
              }
        ReaperMutex.UnLock();
-#if defined(__macos__) && !defined(MAC_OS_X_VERSION_10_5)
+#if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_5)
        // Mac OS X sigwait() is broken on <= 10.4.
       } while (nanosleep(&ts, 0) <= 0);
 #else
diff --git a/src/Xrd/XrdStats.cc b/src/Xrd/XrdStats.cc
index 5051506..0b8befa 100644
--- a/src/Xrd/XrdStats.cc
+++ b/src/Xrd/XrdStats.cc
@@ -27,7 +27,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <stdio.h>
diff --git a/src/XrdClient/XrdClientConn.cc b/src/XrdClient/XrdClientConn.cc
index 52f9541..56e2ab1 100644
--- a/src/XrdClient/XrdClientConn.cc
+++ b/src/XrdClient/XrdClientConn.cc
@@ -70,7 +70,7 @@
 
 #ifndef WIN32
 #include <dlfcn.h>
-#ifndef __macos__
+#ifndef __APPLE__
 #include <link.h>
 #endif
 #endif
diff --git a/src/XrdFfs/XrdFfsXrootdfs.cc b/src/XrdFfs/XrdFfsXrootdfs.cc
index c00c4c0..3df3321 100644
--- a/src/XrdFfs/XrdFfsXrootdfs.cc
+++ b/src/XrdFfs/XrdFfsXrootdfs.cc
@@ -772,7 +772,7 @@ static int xrootdfs_statfs(const char *path, struct statvfs *stbuf)
 //  long long size;
 
 //    XrdFfsMisc_xrd_secsss_register(fuse_get_context()->uid, fuse_get_context()->gid);
-#ifndef __macos__
+#ifndef __APPLE__
     stbuf->f_bsize = 1024;
 #else
     stbuf->f_bsize = 1024 * 128; // work around 32 bit fsblkcnt_t in struct statvfs on Mac OSX
diff --git a/src/XrdNet/XrdNetBuffer.cc b/src/XrdNet/XrdNetBuffer.cc
index f1fcd3b..5d5be42 100644
--- a/src/XrdNet/XrdNetBuffer.cc
+++ b/src/XrdNet/XrdNetBuffer.cc
@@ -33,7 +33,7 @@
 #endif
 #include <sys/types.h>
 #include <stdlib.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 
diff --git a/src/XrdOss/XrdOssAio.cc b/src/XrdOss/XrdOssAio.cc
index 6856676..cba9089 100644
--- a/src/XrdOss/XrdOssAio.cc
+++ b/src/XrdOss/XrdOssAio.cc
@@ -36,7 +36,7 @@
 #ifdef __FreeBSD__
 #include <fcntl.h>
 #endif
-#ifdef __macos__
+#ifdef __APPLE__
 #include <sys/aio.h>
 #else
 #include <aio.h>
@@ -58,7 +58,7 @@
 // 1) No implementation of sigwaitinfo(). Though we can simulate it...
 // 2) Event notification returns an incomplete siginfo structure.
 //
-#ifdef __macos__
+#ifdef __APPLE__
 #undef _POSIX_ASYNCHRONOUS_IO
 #endif
 
@@ -399,7 +399,7 @@ void *XrdOssAioWait(void *mySigarg)
            continue;
           }
 
-#ifdef __macos__
+#ifdef __APPLE__
        aiop = (XrdSfsAio *)myInfo.si_value.sigval_ptr;
 #else
        aiop = (XrdSfsAio *)myInfo.si_value.sival_ptr;
@@ -459,7 +459,7 @@ void XrdOssAioRSH(int signum, siginfo_t *info, void *ucontext)
    XrdOssAioInfoR->si_signo = info->si_signo;
    XrdOssAioInfoR->si_errno = info->si_errno;
    XrdOssAioInfoR->si_code  = info->si_code;
-#ifdef __macos__
+#ifdef __APPLE__
    XrdOssAioInfoR->si_value.sigval_ptr = info->si_addr;
 #else
    XrdOssAioInfoR->si_value.sival_ptr = info->si_value.sival_ptr;
@@ -487,7 +487,7 @@ void XrdOssAioWSH(int signum, siginfo_t *info, void *ucontext)
    XrdOssAioInfoW->si_signo = info->si_signo;
    XrdOssAioInfoW->si_errno = info->si_errno;
    XrdOssAioInfoW->si_code  = info->si_code;
-#ifdef __macos__
+#ifdef __APPLE__
    XrdOssAioInfoW->si_value.sigval_ptr = info->si_addr;
 #else
    XrdOssAioInfoW->si_value.sival_ptr = info->si_value.sival_ptr;
diff --git a/src/XrdOss/XrdOssCache.hh b/src/XrdOss/XrdOssCache.hh
index d731d41..07a8b6e 100644
--- a/src/XrdOss/XrdOssCache.hh
+++ b/src/XrdOss/XrdOssCache.hh
@@ -61,7 +61,7 @@
 #define FS_BLKSZ f_bsize
 #define FS_FFREE f_ffree
 #endif
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/param.h>
 #include <sys/mount.h>
 #define STATFS_t struct statfs
diff --git a/src/XrdOss/XrdOssMSS.cc b/src/XrdOss/XrdOssMSS.cc
index 76742bc..1536db1 100644
--- a/src/XrdOss/XrdOssMSS.cc
+++ b/src/XrdOss/XrdOssMSS.cc
@@ -295,7 +295,7 @@ int XrdOssSys::MSS_Stat(const char *path, struct stat *buff)
     buff->st_mtime = static_cast<time_t>(mtime);
     buff->st_size  = static_cast<off_t>(xt_size);
     buff->st_blksize=static_cast<long>(xt_blksize);
-#ifdef __macos__
+#ifdef __APPLE__
     buff->st_blocks =                      xt_blocks;
 #else
     buff->st_blocks =static_cast<blkcnt_t>(xt_blocks);
diff --git a/src/XrdOss/XrdOssMio.cc b/src/XrdOss/XrdOssMio.cc
index 2e2218c..a613ea5 100644
--- a/src/XrdOss/XrdOssMio.cc
+++ b/src/XrdOss/XrdOssMio.cc
@@ -60,7 +60,7 @@ char           XrdOssMio::MM_chk      = 0;
 char           XrdOssMio::MM_okmlock  = 1;
 char           XrdOssMio::MM_preld    = 0;
 long long      XrdOssMio::MM_pagsz    = (long long)sysconf(_SC_PAGESIZE);
-#ifdef __macos__
+#ifdef __APPLE__
 long long      XrdOssMio::MM_pages    = 1024*1024*1024;
 #else
 long long      XrdOssMio::MM_pages    = (long long)sysconf(_SC_PHYS_PAGES);
diff --git a/src/XrdOuc/XrdOucCacheReal.cc b/src/XrdOuc/XrdOucCacheReal.cc
index c74e9b0..e608853 100644
--- a/src/XrdOuc/XrdOucCacheReal.cc
+++ b/src/XrdOuc/XrdOucCacheReal.cc
@@ -39,7 +39,7 @@
 #include "XrdOuc/XrdOucCacheData.hh"
 #include "XrdSys/XrdSysHeaders.hh"
   
-#ifdef __macos__
+#ifdef __APPLE__
 #ifndef MAP_ANONYMOUS
 #define MAP_ANONYMOUS MAP_ANON
 #endif
diff --git a/src/XrdPosix/XrdPosix.cc b/src/XrdPosix/XrdPosix.cc
index 635ca5a..0fa7ffa 100644
--- a/src/XrdPosix/XrdPosix.cc
+++ b/src/XrdPosix/XrdPosix.cc
@@ -313,7 +313,7 @@ size_t XrdPosix_Fread(void *ptr, size_t size, size_t nitems, FILE *stream)
 #if defined(__linux__)
    else if (bytes < 0) stream->_flags |= _IO_ERR_SEEN;
    else                stream->_flags |= _IO_EOF_SEEN;
-#elif defined(__macos__)
+#elif defined(__APPLE__)
    else if (bytes < 0) stream->_flags |= __SEOF;
    else                stream->_flags |= __SERR;
 #else
@@ -479,7 +479,7 @@ size_t XrdPosix_Fwrite(const void *ptr, size_t size, size_t nitems, FILE *stream
 #ifndef SUNX86
 #if defined(__linux__)
       else stream->_flags |= _IO_ERR_SEEN;
-#elif defined(__macos__)
+#elif defined(__APPLE__)
       else stream->_flags |= __SERR;
 #else
       else stream->_flag  |= _IOERR;
diff --git a/src/XrdPosix/XrdPosixLinkage.cc b/src/XrdPosix/XrdPosixLinkage.cc
index 84df57c..12c15c8 100644
--- a/src/XrdPosix/XrdPosixLinkage.cc
+++ b/src/XrdPosix/XrdPosixLinkage.cc
@@ -40,7 +40,7 @@
 #endif
 
 #include <dlfcn.h>
-#if !defined(__macos__) && !defined(__CYGWIN__)
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 #include <link.h>
 #endif
 
diff --git a/src/XrdPosix/XrdPosixPreload.cc b/src/XrdPosix/XrdPosixPreload.cc
index 206a238..10491f5 100644
--- a/src/XrdPosix/XrdPosixPreload.cc
+++ b/src/XrdPosix/XrdPosixPreload.cc
@@ -170,7 +170,7 @@ int     fcntl64(int fd, int cmd, ...)
 /*                             f d a t a s y n c                              */
 /******************************************************************************/
 // On Mac it is the same as fsync
-#if !defined(__macos__)
+#if !defined(__APPLE__)
 extern "C"
 {
 int     fdatasync(int fildes)
@@ -412,7 +412,7 @@ off64_t lseek64(int fildes, off64_t offset, int whence)
   
 extern "C"
 {
-#if defined(__linux__) || defined(__macos__)
+#if defined(__linux__) || defined(__APPLE__)
 off_t      llseek(int fildes, off_t    offset, int whence)
 #else
 offset_t   llseek(int fildes, offset_t offset, int whence)
diff --git a/src/XrdPosix/XrdPosixPreload32.cc b/src/XrdPosix/XrdPosixPreload32.cc
index c2bcf73..5e5a8fd 100644
--- a/src/XrdPosix/XrdPosixPreload32.cc
+++ b/src/XrdPosix/XrdPosixPreload32.cc
@@ -50,7 +50,7 @@
 #include <sys/types.h>
 #include <unistd.h>
 
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/param.h>
 #include <sys/mount.h>
 #else
@@ -82,7 +82,7 @@ extern XrdPosixLinkage Xunix;
 // making CopyDirent() superfluous. In Solaris x86 there are no 32 bit interfaces.
 //
 #if !defined(__LP64__) && !defined(_LP64)
-#if !defined( __macos__) && !defined(SUNX86) && !defined(__FreeBSD__)
+#if !defined( __APPLE__) && !defined(SUNX86) && !defined(__FreeBSD__)
 int XrdPosix_CopyDirent(struct dirent *dent, struct dirent64 *dent64)
 {
   const unsigned long long LLMask = 0xffffffff00000000LL;
@@ -381,7 +381,7 @@ struct dirent* readdir(DIR *dirp)
 
    if (!(dp64 = XrdPosix_Readdir64(dirp))) return 0;
 
-#if !defined(__macos__) && !defined(_LP64) && !defined(__LP64__)
+#if !defined(__APPLE__) && !defined(_LP64) && !defined(__LP64__)
    if (XrdPosix_CopyDirent((struct dirent *)dp64, dp64)) return 0;
 #endif
 
@@ -400,7 +400,7 @@ extern "C"
 int     readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result)
 {
    static int Init = Xunix.Init(&Init);
-#if defined(__macos__) || defined(__LP64__) || defined(_LP64)
+#if defined(__APPLE__) || defined(__LP64__) || defined(_LP64)
    return XrdPosix_Readdir_r(dirp, entry, result);
 #else
    char buff[sizeof(struct dirent64) + 2048];
@@ -478,7 +478,7 @@ int        stat(         const char *path, struct stat *buf)
 /*                                s t a t f s                                 */
 /******************************************************************************/
 
-#if !defined(__solaris__) && !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__solaris__) && !defined(__APPLE__) && !defined(__FreeBSD__)
 extern "C"
 {
 int        statfs(         const char *path, struct statfs *buf)
@@ -506,7 +506,7 @@ int        statfs(         const char *path, struct statfs *buf)
 /*                               s t a t v f s                                */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(SUNX86) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(SUNX86) && !defined(__FreeBSD__)
 extern "C"
 {
 int        statvfs(         const char *path, struct statvfs *buf)
diff --git a/src/XrdPosix/XrdPosixXrootd.cc b/src/XrdPosix/XrdPosixXrootd.cc
index 9be0a4a..357b7c9 100644
--- a/src/XrdPosix/XrdPosixXrootd.cc
+++ b/src/XrdPosix/XrdPosixXrootd.cc
@@ -349,7 +349,7 @@ dirent64 *XrdPosixDir::nextEntry(dirent64 *dp)
    cp = (fentries[fentry]).c_str();
    reclen = strlen(cp);
    if (reclen > maxname) reclen = maxname;
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
    dp->d_fileno = fentry;
    dp->d_type   = DT_UNKNOWN;
    dp->d_namlen = reclen;
@@ -1135,7 +1135,7 @@ struct dirent* XrdPosixXrootd::Readdir(DIR *dirp)
    dp32 = (struct dirent *)dp64;
    if (dp32->d_name != dp64->d_name)
       {dp32->d_ino    = dp64->d_ino;
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
        dp32->d_off    = dp64->d_off;
 #endif
        dp32->d_reclen = dp64->d_reclen;
@@ -1176,7 +1176,7 @@ int XrdPosixXrootd::Readdir_r(DIR *dirp,   struct dirent    *entry,
    if ((rc = Readdir64_r(dirp, 0, &dp64)) <= 0) {*result = 0; return rc;}
 
    entry->d_ino    = dp64->d_ino;
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
    entry->d_off    = dp64->d_off;
 #endif
    entry->d_reclen = dp64->d_reclen;
@@ -1331,12 +1331,12 @@ int XrdPosixXrootd::Statfs(const char *path, struct statfs *buf)
    buf->f_bfree   = myVfs.f_bfree;
    buf->f_files   = myVfs.f_files;
    buf->f_ffree   = myVfs.f_ffree;
-#if defined(__macos__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__)
    buf->f_iosize  = myVfs.f_frsize;
 #else
    buf->f_frsize  = myVfs.f_frsize;
 #endif
-#if defined(__linux__) || defined(__macos__) || defined(__FreeBSD__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
    buf->f_bavail  = myVfs.f_bavail;
 #endif
 #if defined(__linux__)
diff --git a/src/XrdSecpwd/XrdSecpwdPlatform.hh b/src/XrdSecpwd/XrdSecpwdPlatform.hh
index 506bfd3..71f2174 100644
--- a/src/XrdSecpwd/XrdSecpwdPlatform.hh
+++ b/src/XrdSecpwd/XrdSecpwdPlatform.hh
@@ -34,7 +34,7 @@
 #if defined(__solaris__)
 #include <crypt.h>
 #endif
-#if defined(__osf__) || defined(__sgi) || defined(__macos__)
+#if defined(__osf__) || defined(__sgi) || defined(__APPLE__)
 extern "C" char *crypt(const char *, const char *);
 #endif
 
diff --git a/src/XrdSut/XrdSutAux.cc b/src/XrdSut/XrdSutAux.cc
index 55b926b..bcc60f3 100644
--- a/src/XrdSut/XrdSutAux.cc
+++ b/src/XrdSut/XrdSutAux.cc
@@ -618,7 +618,7 @@ XrdSutFileLocker::XrdSutFileLocker(int fd, ELockType lock)
    // Exclusive lock of the whole file
    short int lockmode = (lock == XrdSutFileLocker::kExcl) ? (F_WRLCK | F_RDLCK)
                                                     :  F_RDLCK;
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
    struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -639,7 +639,7 @@ XrdSutFileLocker::~XrdSutFileLocker()
       return;
    //
    // Unlock the file
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, F_UNLCK, SEEK_SET};
 #else
    struct flock flck = {F_UNLCK, SEEK_SET, 0, 0};
diff --git a/src/XrdSut/XrdSutPFile.cc b/src/XrdSut/XrdSutPFile.cc
index aaa439b..fb7d470 100644
--- a/src/XrdSut/XrdSutPFile.cc
+++ b/src/XrdSut/XrdSutPFile.cc
@@ -407,7 +407,7 @@ kXR_int32 XrdSutPFile::Open(kXR_int32 opt, bool *wasopen,
    int lck = kMaxLockTries;
    int rc = 0;
    while (lck && rc == -1) {
-#ifdef __macos__
+#ifdef __APPLE__
       struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
       struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -424,7 +424,7 @@ kXR_int32 XrdSutPFile::Open(kXR_int32 opt, bool *wasopen,
       if (errno == EACCES || errno == EAGAIN) {
          // File locked by other process
          int pid = -1;
-#ifdef __macos__
+#ifdef __APPLE__
          struct flock flck = {0, 0, 0, lockmode, SEEK_SET};
 #else
          struct flock flck = {lockmode, SEEK_SET, 0, 0};
@@ -459,7 +459,7 @@ kXR_int32 XrdSutPFile::Close(kXR_int32 fd)
 
    //
    // Unlock the file
-#ifdef __macos__
+#ifdef __APPLE__
    struct flock flck = {0, 0, 0, F_UNLCK, SEEK_SET};
 #else
    struct flock flck = {F_UNLCK, SEEK_SET, 0, 0};
diff --git a/src/XrdSys/XrdSysDNS.cc b/src/XrdSys/XrdSysDNS.cc
index 1d4bc87..b3e474b 100644
--- a/src/XrdSys/XrdSysDNS.cc
+++ b/src/XrdSys/XrdSysDNS.cc
@@ -115,8 +115,8 @@ int XrdSysDNS::getHostAddr(const  char     *InetName,
 // default /etc/hosts on some platforms, e.g. MacOsX)
 //
 // if (!strncmp(InetName,"localhost",9)) myhints.ai_family = AF_INET;
-// pcal: force ipv4  (was only for MacOS: ifdef __macos____)
-//#ifdef __macos__
+// pcal: force ipv4  (was only for MacOS: ifdef __APPLE____)
+//#ifdef __APPLE__
 // Disable IPv6 for MacOS X altogether for the time being
 //
    myhints.ai_family = AF_INET;
@@ -277,7 +277,7 @@ int XrdSysDNS::getHostName(struct sockaddr &InetAddr,
 // Some platforms have nameinfo but getnameinfo() is broken. If so, we revert
 // to using the gethostbyaddr().
 //
-#if defined(HAVE_NAMEINFO) && !defined(__macos__)
+#if defined(HAVE_NAMEINFO) && !defined(__APPLE__)
     struct addrinfo   *rp, *np;
     struct addrinfo    myhints = {AI_CANONNAME};
 #elif defined(HAVE_GETHBYXR)
@@ -302,7 +302,7 @@ int XrdSysDNS::getHostName(struct sockaddr &InetAddr,
   if (InetAddr.sa_family == AF_UNIX) 
      {InetName[0] = strdup("localhost"); return 1;}
 
-#if !defined(HAVE_NAMEINFO) || defined(__macos__)
+#if !defined(HAVE_NAMEINFO) || defined(__APPLE__)
 
 // Convert it to a host name
 //
diff --git a/src/XrdSys/XrdSysFAttr.cc b/src/XrdSys/XrdSysFAttr.cc
index 67beeba..b58f8b1 100644
--- a/src/XrdSys/XrdSysFAttr.cc
+++ b/src/XrdSys/XrdSysFAttr.cc
@@ -57,7 +57,7 @@ XrdSysError *XrdSysFAttr::Say = 0;
 #include "XrdSys/XrdSysFAttrBsd.icc"
 #elif defined(__linux__)
 #include "XrdSys/XrdSysFAttrLnx.icc"
-#elif defined(__macos__)
+#elif defined(__APPLE__)
 #include "XrdSys/XrdSysFAttrMac.icc"
 #elif defined(__solaris__)
 #include "XrdSys/XrdSysFAttrSun.icc"
diff --git a/src/XrdSys/XrdSysIOEventsPollE.icc b/src/XrdSys/XrdSysIOEventsPollE.icc
index c24bd04..7149b71 100644
--- a/src/XrdSys/XrdSysIOEventsPollE.icc
+++ b/src/XrdSys/XrdSysIOEventsPollE.icc
@@ -28,7 +28,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <malloc.h>
 #endif
 #include <sys/types.h>
diff --git a/src/XrdSys/XrdSysIOEventsPollPoll.icc b/src/XrdSys/XrdSysIOEventsPollPoll.icc
index e4df3e6..e56c2b1 100644
--- a/src/XrdSys/XrdSysIOEventsPollPoll.icc
+++ b/src/XrdSys/XrdSysIOEventsPollPoll.icc
@@ -27,7 +27,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 #include <unistd.h>
diff --git a/src/XrdSys/XrdSysIOEventsPollPort.icc b/src/XrdSys/XrdSysIOEventsPollPort.icc
index 6412358..b614003 100644
--- a/src/XrdSys/XrdSysIOEventsPollPort.icc
+++ b/src/XrdSys/XrdSysIOEventsPollPort.icc
@@ -28,7 +28,7 @@
 /* specific prior written permission of the institution or contributor.       */
 /******************************************************************************/
 
-#ifndef __macos__
+#ifndef __APPLE__
 #include <malloc.h>
 #endif
 #include <stdlib.h>
diff --git a/src/XrdSys/XrdSysPlatform.cc b/src/XrdSys/XrdSysPlatform.cc
index 768932f..d5d9fe1 100644
--- a/src/XrdSys/XrdSysPlatform.cc
+++ b/src/XrdSys/XrdSysPlatform.cc
@@ -38,7 +38,7 @@
 #if defined(_LITTLE_ENDIAN) || defined(__LITTLE_ENDIAN__) || \
     defined(__IEEE_LITTLE_ENDIAN) || \
    (defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN)
-#if !defined(__GNUC__) || defined(__macos__)
+#if !defined(__GNUC__) || defined(__APPLE__)
 extern "C"
 {
 unsigned long long Swap_n2hll(unsigned long long x)
diff --git a/src/XrdSys/XrdSysPlugin.cc b/src/XrdSys/XrdSysPlugin.cc
index cc10130..80219ea 100644
--- a/src/XrdSys/XrdSysPlugin.cc
+++ b/src/XrdSys/XrdSysPlugin.cc
@@ -41,7 +41,7 @@
 
 #ifndef WIN32
 #include <dlfcn.h>
-#if !defined(__macos__) && !defined(__CYGWIN__)
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 #include <link.h>
 #endif
 #include <stdio.h>
@@ -204,7 +204,7 @@ XrdSysPlugin::cvResult XrdSysPlugin::chkVersion(XrdVersionInfo &urInfo,
   
 int XrdSysPlugin::DLflags()
 {
-#if    defined(__macos__)
+#if    defined(__APPLE__)
        return RTLD_FIRST;
 #elif  defined(__linux__)
        return RTLD_NOW;
diff --git a/src/XrdSys/XrdSysPthread.cc b/src/XrdSys/XrdSysPthread.cc
index 752fafb..7d58dd5 100644
--- a/src/XrdSys/XrdSysPthread.cc
+++ b/src/XrdSys/XrdSysPthread.cc
@@ -184,7 +184,7 @@ int XrdSysCondVar::WaitMS(int msec)
 /*                              C o n d W a i t                               */
 /******************************************************************************/
   
-#ifdef __macos__
+#ifdef __APPLE__
 
 int XrdSysSemaphore::CondWait()
 {
@@ -265,7 +265,7 @@ unsigned long XrdSysThread::Num()
    return static_cast<unsigned long>(syscall(SYS_gettid));
 #elif defined(__solaris__)
    return static_cast<unsigned long>(pthread_self());
-#elif defined(__macos__)
+#elif defined(__APPLE__)
    return static_cast<unsigned long>(pthread_mach_thread_np(pthread_self()));
 #else
    return static_cast<unsigned long>(getpid());
diff --git a/src/XrdSys/XrdSysTimer.cc b/src/XrdSys/XrdSysTimer.cc
index d83057a..af1d5a7 100644
--- a/src/XrdSys/XrdSysTimer.cc
+++ b/src/XrdSys/XrdSysTimer.cc
@@ -236,7 +236,7 @@ void XrdSysTimer::Wait4Midnight()
 
 // Wait until midnight arrives
 //
-#ifndef __macos__
+#ifndef __APPLE__
    timespec Midnite = {Midnight(1), 0};
    while(clock_nanosleep(CLOCK_REALTIME,TIMER_ABSTIME,&Midnite,0) == EINTR) {}
 #else
diff --git a/src/XrdSys/XrdSysUtils.cc b/src/XrdSys/XrdSysUtils.cc
index c0073b2..887ffc7 100644
--- a/src/XrdSys/XrdSysUtils.cc
+++ b/src/XrdSys/XrdSysUtils.cc
@@ -35,7 +35,7 @@
 #include <unistd.h>
 #include <sys/param.h>
 
-#ifdef __macos__
+#ifdef __APPLE__
 #include <mach-o/dyld.h>
 #endif
 
@@ -77,7 +77,7 @@ const char *XrdSysUtils::ExecName()
        return myEname;
       }
   }
-#elif defined(__macos__)
+#elif defined(__APPLE__)
   {char epBuff[2048];
    uint32_t epLen = sizeof(epBuff)-1;
    if (!_NSGetExecutablePath(epBuff, &epLen))
diff --git a/src/XrdXrootd/XrdXrootdMonitor.cc b/src/XrdXrootd/XrdXrootdMonitor.cc
index f6e93d2..c9f0d7c 100644
--- a/src/XrdXrootd/XrdXrootdMonitor.cc
+++ b/src/XrdXrootd/XrdXrootdMonitor.cc
@@ -35,7 +35,7 @@
 #include <unistd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
-#if !defined(__macos__) && !defined(__FreeBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__)
 #include <malloc.h>
 #endif
 
