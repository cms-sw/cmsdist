diff --git a/setup_dependencies.py b/setup_dependencies.py
index 12f0b77..8c40f12 100644
--- a/setup_dependencies.py
+++ b/setup_dependencies.py
@@ -125,10 +125,10 @@ dependencies = {'wmc-rest':{
                         'systems': ['wmc-rest', 'wmc-database'],
                         },
                 'crabclient':{
-                        'packages': ['WMCore.Wrappers+', 'WMCore.Credential', 'PSetTweaks', 'WMCore.Services.UserFileCache+'],
+                        'packages': ['WMCore.Wrappers+', 'WMCore.Credential', 'PSetTweaks', 'WMCore.Services.UserFileCache+', 'WMCore.Services.SiteDB+', 'WMCore.Services.PhEDEx+'],
                         'systems': ['wmc-base'],
                         'modules': ['WMCore.FwkJobReport.FileInfo', 'WMCore.Services.Requests',
-                                    'WMCore.Services.Service', 'WMCore.Services.pycurl_manager'],
+                                    'WMCore.Services.Service', 'WMCore.Services.pycurl_manager', 'WMCore.Services.EmulatorSwitch'],
                         },
                 'crabtaskworker':{
                         'packages':['WMCore.WorkQueue', 'WMCore.Credential', 'WMCore.Algorithms+', 'WMCore.WMSpec+',
diff --git a/src/python/WMCore/Credential/Proxy.py b/src/python/WMCore/Credential/Proxy.py
index 6cfaa65..29f92c7 100644
--- a/src/python/WMCore/Credential/Proxy.py
+++ b/src/python/WMCore/Credential/Proxy.py
@@ -164,11 +164,34 @@ class Proxy(Credential):
         return subprocess.call(self.setUI() + "type " +  cmd, shell=True,
             stdout=subprocess.PIPE, stderr=subprocess.PIPE) == 0
 
-    def getUserCertEnddate(self):
+    def getUserCertEnddate(self, openSSL=True):
         """
-        Return the number of days until the expiration of the user cert in .globus/usercert.pem
+        Return the number of days until the expiration of the user cert in .globus/usercert.pem or $X509_USER_CERT if set
+        Uses openssl by default and fallback to voms-proxy-info in case of problems
         """
         certLocation = '~/.globus/usercert.pem' if 'X509_USER_CERT' not in os.environ else os.environ['X509_USER_CERT']
+        if openSSL:
+            out, _, retcode = execute_command('openssl x509 -noout -in %s -dates' % certLocation, self.logger, self.commandTimeout)
+            if retcode == 0:
+                out = out.split('notAfter=')[1]
+                if out[-1]=='\n':
+                    out = out[:-1]
+                possibleFormats = ['%b  %d  %H:%M:%S %Y %Z', '%b %d %H:%M:%S %Y %Z']
+                exptime = None
+                for frmt in possibleFormats:
+                    try:
+                        exptime = datetime.strptime(out, frmt)
+                    except ValueError:
+                        pass #try next format
+                if not exptime:
+                    #If we cannot decode the output in any way print a message and fallback to voms-proxy-info command
+                    self.logger.warning('Cannot decode "openssl x509 -noout -in %s -dates" date format. Falling back to voms-proxy-info' % certLocation)
+                else:
+                    #if everything is fine then we are ready to return!!
+                    daystoexp = (exptime - datetime.utcnow()).days
+                    return daystoexp
+
+        #uses this as a fallback
         timeleft = self.getTimeLeft(proxy = certLocation, checkVomsLife = False)
         if self.retcode:
             raise CredentialException('Cannot get user certificate remaining time with "voms-proxy-info"')
@@ -565,7 +588,7 @@ class Proxy(Credential):
         if retcode > 0:
             self.logger.error('Cannot get proxy type %s' % msg )
             return
-        isRFC = msg == 'RFC compliant proxy\n'
+        isRFC = msg.startswith('RFC') #can be 'RFC3820 compliant impersonation proxy' or 'RFC compliant proxy'
         ## set environ and add voms extensions
         cmdList = []
         cmdList.append('env')
diff --git a/test/python/WMCore_t/Credential_t/Proxy_t.py b/test/python/WMCore_t/Credential_t/Proxy_t.py
index be0389c..5ee0228 100644
--- a/test/python/WMCore_t/Credential_t/Proxy_t.py
+++ b/test/python/WMCore_t/Credential_t/Proxy_t.py
@@ -89,7 +89,9 @@ class ProxyTest(unittest.TestCase):
         Test if getTimeLeft method returns correctly the proxy time left.
         """
         daysleft = self.proxy.getUserCertEnddate()
-        self.assertEqual(daysleft, 29) #set this as the number of days left in .globus/usercert.pem
+        self.assertEqual(daysleft, 58) #set this as the number of days left in .globus/usercert.pem
+        daysleft = self.proxy.getUserCertEnddate(openSSL=False)
+        self.assertEqual(daysleft, 58) #set this as the number of days left in .globus/usercert.pem
 
     @attr("integration")
     def testAAACreateProxy( self ):
